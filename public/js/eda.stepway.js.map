{"version":3,"sources":["eda.stepway.js"],"names":["configfct","formlyConfigProvider","camelize","string","replace","match","chr","toUpperCase","toLowerCase","setType","name","template","subTitleTemplate","basicSelectTemplate","groupedSelectTemplate","attributes","bindings","ngModelAttrs","angular","forEach","attr","attribute","binding","bound","wrapper","controller","$scope","open","$event","preventDefault","stopPropagation","opened","defaultOptions","templateOptions","addonLeft","class","onClick","options","scope","isOpen","onFocus","$viewValue","$modelValue","to","datepickerOptions","setWrapper","join","module","value","config","$inject","run","$templateCache","put","ngwfMainController","$timeout","FormNameAsTest","ngwfWfEditController","easyFormGenVersion","$filter","$anchorScroll","toaster","$modal","$log","formFieldManage","WfFormsByIdServices","controllerModalProxy","initDebugModel","showDebug","configurationModelNumberofLines","initTabModel","editTab","active","previewTab","previewExistingform","formlyform","configlines","JSON","parse","formlyField","configurationLoaded","bindConfigurationLines","applyConfigurationToformlyModel","previewLoadedForm","fieldsModel","vm","model","wfFormFieldsOnlyNeededProperties","copy","wfFormFields","cancelButtonText","submitButtonText","onSubmit","pop","type","timeout","title","body","showCloseButton","initColumnTemplate","numColumn","exist","control","key","subtype","initLineTemplate","line","activeColumn","columns","resetToZeroModel","configuration","activeLine","lines","length","splice","countConfigurationModelLines","debug","setActiveLineNumber","lineNumber","upThisLine","indexLine","currentLineObj","downThisLine","addNewline","push","removeThisLine","index","increaseNumberOfColumns","MaxNumberOfColumns","newNumberOfColumns","decreaseNumberOfColumns","resetStepCounter","configStepCounter","nextConfigStep","configStepCounterMAX","listConfigStep","setTrueThisStepIndicator","previousConfigStep","stepReachable","indexStep","showModalAddCtrlToColumn","size","numcolumn","modalInstance","animation","animationsEnabled","templateUrl","resolve","nyaSelect","getNyASelectFromSelectedLineColumn","result","then","modalAddCtrlModel","bindConfigurationModelFromModalReturn","toggleAnimation","loadExistingFormsAsList","saveThisForm","formName","WfForm","stringify","clear","resetAllIndicators","i","stepIndicators","indexIndicator","this","easyFormGeneratorVERSION","tab","numberOfColumns","MinNumberOfColumns","columnTemplate","lineTemplate","loadExistingFormsList","formlyList","initConfigurationEditFromScratch","initNyaSelect","ngwfWfEditMODALController","$modalInstance","selectOptionManage","addNewOptionRadio","radioRowCollection","newOptionRadio","saisie","resultFlag","details","removeRadioRow","removeOption","upThisRadioRow","upthisOption","downThisRadioRow","downthisOption","addNewOptionBasicSelect","basicSelectRowCollection","newOptionBasicSelect","removeRow","upThisRow","downThisRow","showGroupListToChoose","groupSelectGroupClick","showList","addNewGroupToGroupedSelect","newGroupGroupedSelect","GroupedSelectGroups","list","addNewOptionGroupedSelect","groupedSelectRowCollection","newOptionGroupedSelect","removeGroupedSelectRow","upThisGroupedSelectRow","downThisGroupedSelectRow","today","demodt","dt","Date","openfct","dateOptionsInit","formatYear","startingDay","showWeeks","initDate","selectThisControl","controlName","selectedControl","resetTemporyConfig","controls","id","initDatePicker","okfct","bindBasicSelectToNya","bindGroupedSelectToNya","bindRadioToNya","applyConfigToSelectedControl","close","cancelfct","dismiss","bindRadioFromNYA","temporyConfig","formlyOptions","newOption","option","order","group","rows","resetNyASelectOptions","bindBasicSelectFromNYA","bindGroupedSelectFromNYA","filteredgroup","_","uniq","pluck","datepickerPopup","formats","initNyaSelectConformingSelectedControl","modelNyaSelect","formlyLabel","formlyRequired","formlyPlaceholder","formlyDesciption","initOptionModel","dateOptions","ok","cancel","edaStepWayEasyFormGen","linkFct","element","attrs","returnAttributeConfigurationLinesIfNotEmpty","edaEasyFormGeneratorModelToReturn","isArray","edaEasyFormGeneratorModel","edaFieldsModel","emptyEdaFieldsModel","emptyModel","returnAttributeDataModelIfNotEmpty","dataModelToReturn","dataModel","watchEdaEasyFormModelExpression","watchEdaEasyFormModelHasChanged","newValue","oldValue","loadExistingConfigurationModel","watchReturnSaveEventExpression","returnSaveEvent","watchReturnSaveEventhasChanged","_easyFormGeneratorModel","btnSubmitText","btnCancelText","edaFieldsModelStringified","toJson","formlyFieldsModel","edaSaveFormEvent","isDefined","refreshControlFormlyExpressionProperties","refreshControlFormlyValidators","refreshControlFormlyValidation","isString","$watch","edaStepWayEasyFormGenCtrl","directive","restrict","controllerAs","link","stRatio","linkfct","ratio","css","nyaSelectObj","resetNyaSelect","getControlsDefinition","configurationModel","isObject","column","controlIndex","_controlsDefinition","aControl","aControlIndex","formlyType","formlySubtype","formlyExpressionProperties","formlyValidators","formlyValidation","configurationObj","label","required","description","placeholder","extractedProps","returnControlFromAddCtrlModalModel","newKey","now","validKeyUniqueness","edited","newNyaSelectObj","subtitle","messages","viewValue","modelValue","defaultReturnMsg","returnMsg","emailShape","expression","test","message","CtrlModalModel","modelToReturn","thisKey","isUnique","j","service","factory","configurationModelInit","Object","prototype","toString","call","configurationModelResult","concat","getMessageObject","getErrorObject","formlyModel","formlyDataModel","resetFormlyModel","resetDataModel","addOneColumnHeader","addOneColumnControl","addTwoColumnControl","addThreeColumnControl","resetformly","lineIndex","headerTemplateCol0","extractTemplateOptionDescription","addDatepickerPopupProperty","fieldToPush","extractTemplateOptionDatepickerPopup","className","extractTemplateOptionType","extractTemplateOptionLabel","extractTemplateOptionRequired","extractTemplateOptionPlaceholder","extractTemplateOptionOptions","expressionProperties","extractFormlyExpressionProperties","validators","extractFormlyValidators","validation","extractFormlyValidation","headerTemplateCol1","controlCol0","controlCol1","FieldGroup","fieldGroup","headerTemplateCol2","controlCol2","obj","emptyDataModel","errorTitle","errorMessage","messageObj","noError","Message","messageTitle","messageBody","testMe","initModel","selectObj","resetModel","isOptionUnique","textValue","isOptionValidFormat","newOptionText","fullResponse","checkResult","validOption","newOptionGroup","AtIndex","indexOption","currentOption","zeroModel","$resource"],"mappings":"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","file":"eda.stepway.js","sourcesContent":["/** \n  *easyFormGenerator — step way — version \n  *Version 1.0.8 \n  *Author : Erwan Datin (MacKentoch) \n  *Link: https://github.com/MacKentoch/easyFormGenerator \n  *License : MIT (2015) \n **/ \n ;(function(){\n \t'use strict';\n/**\n *  -----------------------------------------------------------------------\n *  application module of the step way version of easy form generator\n *  -----------------------------------------------------------------------\n *  \n *   \n *     - this version is production friendly -\n *\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n;(function(){\n  'use strict';\n\n\n  angular\n    .module('ngwfApp', [  \n      'ngwfApp.core',\n      'ngwfApp.controllers',\n      'ngwfApp.services', \n      'ngwfApp.filters',\n      'ngwfApp.directives'\n    ])\n    .value('easyFormGenVersion', 'v1.0.7')\n    .config(configfct);\n\n\n\n\n\n\n    configfct.$inject = ['formlyConfigProvider'];\n    function configfct(formlyConfigProvider){\n      //////////////////////////////\n      // CONFIG HERE (formly...)              \n      /////////////////////////////\n      formlyConfigProvider.setType(\n        {\n          name: 'richEditor',\n          //wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n          template: '<text-angular name=\"{{id}}\" class=\"richTextAngular\" ng-model=\"model[options.key || index]\"></text-angular>'\n        }\n      );\n\n      formlyConfigProvider.setType(\n        {\n          name: 'blank',\n          template: '<div></div>'\n        }\n      );\n\n\n      var subTitleTemplate = '<div class=\"row\"><div class=\"\"><h4 class=\"text-center\">{{options.templateOptions.placeholder}}<h4><hr/></div></div>';\n      formlyConfigProvider.setType(\n        {\n          name: 'subTitle',\n          template: subTitleTemplate\n        }\n      );\n\n      var basicSelectTemplate =   ' <ol   class=\"nya-bs-select col-sm-12 col-xs-12 col-md-12 col-lg12\" ' + \n                    '   ng-model=\"model[options.key || index]\"  ' + \n                      '   id=\"{{id}}\"  ' + \n                      '   disabled=\"options.templateOptions.options.length === 0\"> ' + \n                      '   <li class=\"nya-bs-option\" nya-bs-option=\"option in options.templateOptions.options\"> ' + \n                      '     <a>{{option.name}}</a> ' + \n                      '   </li> ' + \n                      ' </ol>     ' ;\n\n     formlyConfigProvider.setType(\n        {\n          name: 'basicSelect',\n          template: basicSelectTemplate\n        }\n      );\n\n\n     var groupedSelectTemplate =   '  <ol class=\"nya-bs-select col-sm-12 col-xs-12 col-md-12 col-lg12\" ' +\n                   '    ng-model=\"model[options.key || index]\" ' +\n                   '       data-live-search=\"true\" ' +\n                   '       disabled=\"options.templateOptions.options.length === 0\">' +\n                                 '       <li nya-bs-option=\"option in  options.templateOptions.options group by option.group\"  ' +\n                                 '       >' +\n                                 '         <span class=\"dropdown-header\">{{$group}}</span>' + \n                                 '         <a>' +\n                                 '           <span>{{option.name}}</span>' +\n                                 '           <span class=\"glyphicon glyphicon-ok check-mark\"></span>' +\n                                 '         </a>' +\n                                 '       </li>' +\n                                 '     </ol>';\n\n     formlyConfigProvider.setType(\n        {\n          name: 'groupedSelect',\n          template: groupedSelectTemplate\n        }\n      );\n\n     ////////////////////////////\n     // angular UI date picker\n     ////////////////////////////\n     // thx Kent C. Dodds\n\n      var attributes = [\n        'date-disabled',\n        'custom-class',\n        'show-weeks',\n        'starting-day',\n        'init-date',\n        'min-mode',\n        'max-mode',\n        'format-day',\n        'format-month',\n        'format-year',\n        'format-day-header',\n        'format-day-title',\n        'format-month-title',\n        'year-range',\n        'shortcut-propagation',\n        'datepicker-popup',\n        'show-button-bar',\n        'current-text',\n        'clear-text',\n        'close-text',\n        'close-on-date-selection',\n        'datepicker-append-to-body'\n      ];\n\n      var bindings = [\n        'datepicker-mode',\n        'min-date',\n        'max-date'\n      ];\n\n      var ngModelAttrs = {};\n\n      angular.forEach(attributes, function(attr) {\n        ngModelAttrs[camelize(attr)] = {attribute: attr};\n      });\n\n      angular.forEach(bindings, function(binding) {\n        ngModelAttrs[camelize(binding)] = {bound: binding};\n      });\n\n    \n\n      formlyConfigProvider.setType({\n        name: 'datepicker',\n        template: '<input  id=\"{{id}}\" class=\"form-control\" ng-click=\"open($event)\" ng-model=\"model[options.key  || index]\" is-open=\"to.isOpen\" ng-click=\"to.isOpen = true\" datepicker-options=\"to.datepickerOptions\" />',\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n        controller: ['$scope', function($scope) {\n           $scope.open = function($event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n            $scope.opened = true;\n          };\n         \n         }],\n        defaultOptions: {\n          ngModelAttrs: ngModelAttrs,\n          templateOptions: {\n            addonLeft: {\n              class: 'glyphicon glyphicon-calendar',\n              onClick: function(options, scope) {\n                options.templateOptions.isOpen = !options.templateOptions.isOpen;\n              }\n            },       \n            onFocus: function($viewValue, $modelValue, scope) {\n              scope.to.isOpen = !scope.to.isOpen;\n            },\n            datepickerOptions: {}\n          }\n        }\n        \n      });\n\n\n\n      /**\n       * wrappers to show validation errors\n       * without having to rewrite formly types\n       */\n      formlyConfigProvider.setWrapper([\n          {\n            template: [\n              '<div class=\"formly-template-wrapper form-group\"',\n              '     ng-class=\"{\\'has-error\\': options.validation.errorExistsAndShouldBeVisible}\">',\n              ' <formly-transclude></formly-transclude>',\n              ' <div class=\"validation\"',\n              '       ng-if=\"options.validation.errorExistsAndShouldBeVisible\"',\n              '       ng-messages=\"options.formControl.$error\">',\n              '   <div ng-messages-include=\"validation.html\"></div>',\n              '   <div ng-message=\"{{::name}}\" ng-repeat=\"(name, message) in ::options.validation.messages\">',\n              '     {{message(options.formControl.$viewValue, options.formControl.$modelValue, this)}}',\n              '   </div>',\n              ' </div>',\n              '</div>'\n            ].join(' ')\n          }\n        ]);\n\n      function camelize(string) {\n        string = string.replace(/[\\-_\\s]+(.)?/g, function(match, chr) {\n          return chr ? chr.toUpperCase() : '';\n        });\n        // Ensure 1st char is always lowercase\n        return string.replace(/^([A-Z])/, function(match, chr) {\n          return chr ? chr.toLowerCase() : '';\n        });\n      } \n\n    }\n\n\n})();\n\nangular.module(\"ngwfApp\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"edaStepWayEasyFormGeneratorTemplate.html\",\"<section id=pageWfEdit><div ng-init=\\\"\\\"><div class=container><section id=preview><div id=preview-content><div class=content-container><toaster-container toaster-options=\\\"{ \\'position-class\\': \\'toast-top-full-width\\', \\'extendedTimeout\\':500, \\'timeOut\\':500, }\\\"></toaster-container><tabset justified=true><tab select=tabJustSelected(2) active=tab.editTab.active heading=\\\"Edit /Create\\\"><div class=row><div class=\\\"row stepwizardTopmargin\\\"><div class=\\\"col-lg-8 col-lg-offset-2 col-md-8 col-md-offset-2\\\"><div class=stepwizard><div class=\\\"row stepwizard-row\\\"><div class=\\\"stepwizard-step col-md-3\\\"><button type=button class=\\\"btn btn-circle\\\" ng-class=\\\"{\\'btn-primary\\': configuration.stepIndicators[0], \\'btn-default\\': !configuration.stepIndicators[0]}\\\">0</button><p>lines</p></div><div class=\\\"stepwizard-step col-md-3\\\"><button type=button class=\\\"btn btn-circle\\\" ng-class=\\\"{\\'btn-primary\\': configuration.stepIndicators[1], \\'btn-default\\': !configuration.stepIndicators[1], \\'disabled\\': (configuration.configStepCounter < 1)}\\\">1</button><p>layout</p></div><div class=\\\"stepwizard-step col-md-3\\\"><button type=button class=\\\"btn btn-default btn-circle\\\" ng-class=\\\"{\\'btn-primary\\': configuration.stepIndicators[2], \\'btn-default\\': !configuration.stepIndicators[2], \\'disabled\\': (configuration.configStepCounter < 2)}\\\">2</button><p>controls</p></div><div class=\\\"stepwizard-step col-md-3\\\"><button type=button class=\\\"btn btn-default btn-circle\\\" ng-class=\\\"{\\'btn-primary\\': configuration.stepIndicators[3], \\'btn-default\\': !configuration.stepIndicators[3], \\'disabled\\': (configuration.configStepCounter < 3)}\\\">3</button><p>save</p></div></div></div></div></div></div><div class=row><ul class=pager><li ng-class=\\\"{\\'disabled\\':stepIndicators[0]}\\\"><button class=\\\"btn btn-primary customPagerButton\\\" ng-click=previousConfigStep()><i class=\\\"fa fa-arrow-left fa-2x pull-left\\\"></i> <span class=pull-right>Prev</span></button></li><li ng-class=\\\"{\\'disabled\\':stepIndicators[3]}\\\"><button class=\\\"btn btn-primary customPagerButton\\\" ng-click=nextConfigStep()><span class=pull-left>Next</span> <i class=\\\"fa fa-arrow-right fa-2x pull-right\\\"></i></button></li></ul><div class=animate-switch-container ng-switch=\\\"\\\" on=configuration.listConfigStep[configuration.configStepCounter]><div class=animate-switch ng-switch-when=init><div class=col-md-4><div id=commandPanel><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=panel-title><i class=\\\"fa fa-keyboard-o\\\"></i> Command</h3></div><div class=panel-body><div class=row><div class=col-md-12><span class=addNewLine>Add a new line :</span>&nbsp; <button class=\\\"btn btn-primary\\\" ng-click=addNewline()><i class=\\\"fa fa-plus fa-1x\\\"></i></button></div></div></div></div></div></div><div class=col-md-8><div id=visualPanel><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=panel-title><i class=\\\"fa fa-eye\\\"></i> Visual</h3></div><div class=panel-body><ul class=list-group><li class=list-group-item ng-repeat=\\\"line in configuration.lines track by $index\\\"><div ng-switch=\\\"\\\" on=line.columns.length><div class=\\\"row linesList\\\" ng-switch-when=1><div class=\\\"col-md-12 lineCommandButtons\\\" ng-show=\\\"configuration.lines.length > 1\\\"><button class=\\\"btn btn-warning\\\" ng-hide=\\\"$index==0\\\" ng-click=upThisLine($index)><i class=\\\"fa fa-arrow-up\\\"></i></button> <button class=\\\"btn btn-warning\\\" ng-hide=\\\"$index==(configuration.lines.length-1)\\\" ng-click=downThisLine($index)><i class=\\\"fa fa-arrow-down\\\"></i></button> <button class=\\\"btn btn-danger pull-right\\\" ng-click=removeThisLine($index)><i class=\\\"fa fa-trash-o\\\"></i></button></div><div class=col-md-12><div class=\\\"col-md-12 well\\\"><button class=\\\"btn btn-lg btn-block btn-default disabled\\\">{{line.columns[0].control.type !== \\'none\\' ? line.columns[0].control.type + \\' \\' + line.columns[0].control.subtype || \\'\\' : \\'column 1\\'}}</button></div></div></div><div class=\\\"row linesList\\\" ng-switch-when=2><div class=\\\"col-md-12 lineCommandButtons\\\" ng-show=\\\"configuration.lines.length > 1\\\"><button class=\\\"btn btn-warning\\\" ng-hide=\\\"$index==0\\\" ng-click=upThisLine($index)><i class=\\\"fa fa-arrow-up\\\"></i></button> <button class=\\\"btn btn-warning\\\" ng-hide=\\\"$index==(configuration.lines.length-1)\\\" ng-click=downThisLine($index)><i class=\\\"fa fa-arrow-down\\\"></i></button> <button class=\\\"btn btn-danger pull-right\\\" ng-click=removeThisLine($index)><i class=\\\"fa fa-trash-o\\\"></i></button></div><div class=col-md-12><div class=\\\"col-md-6 well\\\"><button class=\\\"btn btn-lg btn-block btn-default disabled\\\">{{line.columns[0].control.type !== \\'none\\' ? line.columns[0].control.type + \\' \\' + line.columns[0].control.subtype || \\'\\' : \\'column 1\\'}}</button></div><div class=\\\"col-md-6 well\\\"><button class=\\\"btn btn-lg btn-block btn-default disabled\\\">{{line.columns[1].control.type !== \\'none\\' ? line.columns[1].control.type + \\' \\' + line.columns[1].control.subtype || \\'\\' : \\'column 2\\'}}</button></div></div></div><div class=\\\"row linesList\\\" ng-switch-when=3><div class=\\\"col-md-12 lineCommandButtons\\\" ng-show=\\\"configuration.lines.length > 1\\\"><button class=\\\"btn btn-warning\\\" ng-hide=\\\"$index==0\\\" ng-click=upThisLine($index)><i class=\\\"fa fa-arrow-up\\\"></i></button> <button class=\\\"btn btn-warning\\\" ng-hide=\\\"$index==(configuration.lines.length-1)\\\" ng-click=downThisLine($index)><i class=\\\"fa fa-arrow-down\\\"></i></button> <button class=\\\"btn btn-danger pull-right\\\" ng-click=removeThisLine($index)><i class=\\\"fa fa-trash-o\\\"></i></button></div><div class=col-md-12><div class=\\\"col-md-4 well\\\"><button class=\\\"btn btn-lg btn-block btn-default disabled\\\">{{line.columns[0].control.type !== \\'none\\' ? line.columns[0].control.type + \\' \\' + line.columns[0].control.subtype || \\'\\' : \\'column 1\\'}}</button></div><div class=\\\"col-md-4 well\\\"><button class=\\\"btn btn-lg btn-block btn-default disabled\\\">{{line.columns[1].control.type !== \\'none\\' ? line.columns[1].control.type + \\' \\' + line.columns[1].control.subtype || \\'\\' : \\'column 2\\'}}</button></div><div class=\\\"col-md-4 well\\\"><button class=\\\"btn btn-lg btn-block btn-default disabled\\\">{{line.columns[2].control.type !== \\'none\\' ? line.columns[2].control.type + \\' \\' + line.columns[2].control.subtype || \\'\\' : \\'column 3\\'}}</button></div></div></div></div></li></ul></div></div></div></div></div><div class=animate-switch ng-switch-when=first><div class=col-md-4><div id=commandPanel><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=panel-title><i class=\\\"fa fa-keyboard-o\\\"></i> Command</h3></div><div class=panel-body><div class=row><div class=col-md-12><h4 class=\\\"numberOfcolumsText text-center\\\"><i>– Selected line –</i></h4><h4 class=\\\"numberOfcolumsText text-center\\\">number of columns :</h4></div></div><div class=row><div class=\\\"col-xs-2 col-xs-offset-3 col-sm-2 col-sm-offset-3 col-md-2 col-md-offset-3\\\"><button class=\\\"btn btn-primary pull-right btnMinusColumns\\\" ng-click=decreaseNumberOfColumns()><i class=\\\"fa fa-minus fa-1x\\\"></i></button></div><div class=\\\"col-xs-2 col-sm-2 col-md-2 text-center\\\"><span class=numberOfColumnsLabel>{{configuration.lines[configuration.activeLine -1].columns.length}}</span></div><div class=\\\"col-xs-2 col-sm-2 col-md-2\\\"><button class=\\\"btn btn-primary pull-left btnAddColumns\\\" ng-click=increaseNumberOfColumns()><i class=\\\"fa fa-plus fa-1x\\\"></i></button></div></div></div></div></div></div><div class=col-md-8><div id=visualPanel><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=panel-title><i class=\\\"fa fa-eye\\\"></i> Visual</h3></div><div class=panel-body><ul class=list-group><li class=list-group-item ng-repeat=\\\"line in configuration.lines track by $index\\\"><div ng-switch=\\\"\\\" on=line.columns.length><div class=\\\"row linesList\\\" ng-switch-when=1><div class=\\\"col-md-12 lineCommandButtons\\\" ng-show=\\\"configuration.lines.length > 1\\\"><button class=btn ng-class=\\\"{\\'btn-warning\\':($index + 1) !== configuration.activeLine, \\'btn-success\\': ($index + 1) === configuration.activeLine}\\\" ng-click=\\\"setActiveLineNumber($index + 1)\\\"><i class=fa ng-class=\\\"{\\'fa-square-o\\': ($index + 1) !== configuration.activeLine, \\'fa-check-square-o\\': ($index + 1) === configuration.activeLine}\\\"></i></button></div><div class=col-md-12><div class=\\\"col-md-12 well\\\"><button class=\\\"btn btn-lg btn-block btn-default disabled\\\">{{line.columns[0].control.type !== \\'none\\' ? line.columns[0].control.type + \\' \\' + line.columns[0].control.subtype || \\'\\' : \\'column 1\\'}}</button></div></div></div><div class=\\\"row linesList\\\" ng-switch-when=2><div class=\\\"col-md-12 lineCommandButtons\\\" ng-show=\\\"configuration.lines.length > 1\\\"><button class=btn ng-class=\\\"{\\'btn-warning\\':($index + 1) !== configuration.activeLine, \\'btn-success\\': ($index + 1) === configuration.activeLine}\\\" ng-click=\\\"setActiveLineNumber($index + 1)\\\"><i class=fa ng-class=\\\"{\\'fa-square-o\\': ($index + 1) !== configuration.activeLine, \\'fa-check-square-o\\': ($index + 1) === configuration.activeLine}\\\"></i></button></div><div class=col-md-12><div class=\\\"col-md-6 well\\\"><button class=\\\"btn btn-lg btn-block btn-default disabled\\\">{{line.columns[0].control.type !== \\'none\\' ? line.columns[0].control.type + \\' \\' + line.columns[0].control.subtype || \\'\\' : \\'column 1\\'}}</button></div><div class=\\\"col-md-6 well\\\"><button class=\\\"btn btn-lg btn-block btn-default disabled\\\">{{line.columns[1].control.type !== \\'none\\' ? line.columns[1].control.type + \\' \\' + line.columns[1].control.subtype || \\'\\' : \\'column 2\\'}}</button></div></div></div><div class=\\\"row linesList\\\" ng-switch-when=3><div class=\\\"col-md-12 lineCommandButtons\\\" ng-show=\\\"configuration.lines.length > 1\\\"><button class=btn ng-class=\\\"{\\'btn-warning\\':($index + 1) !== configuration.activeLine, \\'btn-success\\': ($index + 1) === configuration.activeLine}\\\" ng-click=\\\"setActiveLineNumber($index + 1)\\\"><i class=fa ng-class=\\\"{\\'fa-square-o\\': ($index + 1) !== configuration.activeLine, \\'fa-check-square-o\\': ($index + 1) === configuration.activeLine}\\\"></i></button></div><div class=col-md-12><div class=\\\"col-md-4 well\\\"><button class=\\\"btn btn-lg btn-block btn-default disabled\\\">{{line.columns[0].control.type !== \\'none\\' ? line.columns[0].control.type + \\' \\' + line.columns[0].control.subtype || \\'\\' : \\'column 1\\'}}</button></div><div class=\\\"col-md-4 well\\\"><button class=\\\"btn btn-lg btn-block btn-default disabled\\\">{{line.columns[1].control.type !== \\'none\\' ? line.columns[1].control.type + \\' \\' + line.columns[1].control.subtype || \\'\\' : \\'column 2\\'}}</button></div><div class=\\\"col-md-4 well\\\"><button class=\\\"btn btn-lg btn-block btn-default disabled\\\">{{line.columns[2].control.type !== \\'none\\' ? line.columns[2].control.type + \\' \\' + line.columns[2].control.subtype || \\'\\' : \\'column 3\\'}}</button></div></div></div></div></li></ul></div></div></div></div></div><div class=animate-switch ng-switch-when=second><div class=col-md-4><div id=commandPanel><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=panel-title><i class=\\\"fa fa-keyboard-o\\\"></i> Command</h3></div><div class=panel-body><div class=row><div class=col-md-12><h4 class=\\\"numberOfcolumsText text-center\\\">– Apply controls to columns –</h4></div></div><div class=row><div class=col-lg-12><hr><blockquote><p class=numberOfcolumsText><i class=\\\"fa fa-minus\\\"></i>&nbsp; Click / Tap on column to open control selection.</p><p class=numberOfcolumsText><i class=\\\"fa fa-minus\\\"></i>&nbsp; Select desired control and valid to apply it to column.</p></blockquote></div></div></div></div></div></div><div class=col-md-8><div id=visualPanel><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=panel-title><i class=\\\"fa fa-eye\\\"></i> Visual</h3></div><div class=panel-body><ul class=list-group><li class=list-group-item ng-repeat=\\\"line in configuration.lines track by $index\\\"><div ng-switch=\\\"\\\" on=line.columns.length><div class=\\\"row linesList\\\" ng-switch-when=1><div class=\\\"col-md-12 lineCommandButtons\\\" ng-show=\\\"configuration.lines.length > 1\\\"><button class=btn ng-class=\\\"{\\'btn-warning\\':($index + 1) !== configuration.activeLine, \\'btn-success\\': ($index + 1) === configuration.activeLine}\\\" ng-click=\\\"setActiveLineNumber($index + 1)\\\"><i class=fa ng-class=\\\"{\\'fa-square-o\\': ($index + 1) !== configuration.activeLine, \\'fa-check-square-o\\': ($index + 1) === configuration.activeLine}\\\"></i></button></div><div class=col-md-12><div class=\\\"col-md-12 well\\\"><button class=\\\"btn btn-lg btn-block\\\" ng-class=\\\"{\\'btn-primary\\': !line.columns[0].control.edited, \\'btn-success\\': line.columns[0].control.edited}\\\" ng-click=\\\"showModalAddCtrlToColumn(\\'\\', $index, 0)\\\">{{line.columns[0].control.type !== \\'none\\' ? line.columns[0].control.type + \\' \\' + line.columns[0].control.subtype || \\'\\' : \\'column 1\\'}}</button></div></div></div><div class=\\\"row linesList\\\" ng-switch-when=2><div class=\\\"col-md-12 lineCommandButtons\\\" ng-show=\\\"configuration.lines.length > 1\\\"><button class=btn ng-class=\\\"{\\'btn-warning\\':($index + 1) !== configuration.activeLine, \\'btn-success\\': ($index + 1) === configuration.activeLine}\\\" ng-click=\\\"setActiveLineNumber($index + 1)\\\"><i class=fa ng-class=\\\"{\\'fa-square-o\\': ($index + 1) !== configuration.activeLine, \\'fa-check-square-o\\': ($index + 1) === configuration.activeLine}\\\"></i></button></div><div class=col-md-12><div class=\\\"col-md-6 well\\\"><button class=\\\"btn btn-lg btn-block\\\" ng-class=\\\"{\\'btn-primary\\': !line.columns[0].control.edited, \\'btn-success\\': line.columns[0].control.edited}\\\" ng-click=\\\"showModalAddCtrlToColumn(\\'\\', $index, 0)\\\">{{line.columns[0].control.type !== \\'none\\' ? line.columns[0].control.type + \\' \\' + line.columns[0].control.subtype || \\'\\' : \\'column 1\\'}}</button></div><div class=\\\"col-md-6 well\\\"><button class=\\\"btn btn-lg btn-block\\\" ng-class=\\\"{\\'btn-primary\\': !line.columns[1].control.edited, \\'btn-success\\': line.columns[1].control.edited}\\\" ng-click=\\\"showModalAddCtrlToColumn(\\'\\', $index, 1)\\\">{{line.columns[1].control.type !== \\'none\\' ? line.columns[1].control.type + \\' \\' + line.columns[1].control.subtype || \\'\\' : \\'column 2\\'}}</button></div></div></div><div class=\\\"row linesList\\\" ng-switch-when=3><div class=\\\"col-md-12 lineCommandButtons\\\" ng-show=\\\"configuration.lines.length > 1\\\"><button class=btn ng-class=\\\"{\\'btn-warning\\':($index + 1) !== configuration.activeLine, \\'btn-success\\': ($index + 1) === configuration.activeLine}\\\" ng-click=\\\"setActiveLineNumber($index + 1)\\\"><i class=fa ng-class=\\\"{\\'fa-square-o\\': ($index + 1) !== configuration.activeLine, \\'fa-check-square-o\\': ($index + 1) === configuration.activeLine}\\\"></i></button></div><div class=col-md-12><div class=\\\"col-md-4 well\\\"><button class=\\\"btn btn-lg btn-block\\\" ng-class=\\\"{\\'btn-primary\\': !line.columns[0].control.edited, \\'btn-success\\': line.columns[0].control.edited}\\\" ng-click=\\\"showModalAddCtrlToColumn(\\'\\', $index, 0)\\\">{{line.columns[0].control.type !== \\'none\\' ? line.columns[0].control.type + \\' \\' + line.columns[0].control.subtype || \\'\\' : \\'column 1\\'}}</button></div><div class=\\\"col-md-4 well\\\"><button class=\\\"btn btn-lg btn-block\\\" ng-class=\\\"{\\'btn-primary\\': !line.columns[1].control.edited, \\'btn-success\\': line.columns[1].control.edited}\\\" ng-click=\\\"showModalAddCtrlToColumn(\\'\\', $index, 1)\\\">{{line.columns[1].control.type !== \\'none\\' ? line.columns[1].control.type + \\' \\' + line.columns[1].control.subtype || \\'\\' : \\'column 2\\'}}</button></div><div class=\\\"col-md-4 well\\\"><button class=\\\"btn btn-lg btn-block\\\" ng-class=\\\"{\\'btn-primary\\': !line.columns[2].control.edited, \\'btn-success\\': line.columns[2].control.edited}\\\" ng-click=\\\"showModalAddCtrlToColumn(\\'\\', $index, 2)\\\">{{line.columns[2].control.type !== \\'none\\' ? line.columns[2].control.type + \\' \\' + line.columns[2].control.subtype || \\'\\' : \\'column 3\\'}}</button></div></div></div></div></li></ul></div></div></div></div></div><div class=animate-switch ng-switch-when=third><div class=col-md-4><div id=commandPanel><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=panel-title><i class=\\\"fa fa-keyboard-o\\\"></i>&nbsp;Command</h3></div><div class=panel-body><div class=row><div class=col-xs-12><div class=form-group><label for=inputSubmitButtontext class=\\\"greyText control-label\\\">Customize Submit button Text :</label><div><input type=text class=form-control id=inputSubmitButtontext placeholder=\\\"Submit button text\\\" ng-model=configuration.submitButtonText></div></div></div></div><hr><div class=row><div class=col-xs-12><div class=form-group><label for=inputCancelButtontext class=\\\"greyText control-label\\\">Customize Cancel button Text :</label><div><input type=text class=form-control id=inputCancelButtontext placeholder=\\\"Cancel button text\\\" ng-model=configuration.cancelButtonText></div></div></div></div><hr><div class=row><div class=col-xs-12><div class=form-group><label for=inputNameFormtext class=\\\"greyText control-label\\\">Name to this form :</label><div><input type=text class=form-control id=inputNameFormtext placeholder=\\\"Enter formName\\\" ng-model=configuration.formName></div></div></div></div><button class=\\\"btn btn-primary btn-block btn-lg\\\" ng-click=saveThisForm()>save this form</button></div></div></div></div><div class=col-md-8><div id=visualPanel><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=panel-title><i class=\\\"fa fa-thumbs-o-up\\\"></i>&nbsp;Final Step : form preview</h3></div><div class=panel-body><form ng-submit=vm.onSubmit()><formly-form id=saveFormlyFom model=vm.model fields=vm.wfFormFields><span class=pull-right><button class=\\\"btn btn-primary\\\" type=submit>{{configuration.submitButtonText}}</button> <button class=\\\"btn btn-primary\\\" type=cancel>{{configuration.cancelButtonText}}</button></span></formly-form></form></div></div></div></div></div></div></div></tab><tab select=tabJustSelected(1) active=tab.previewTab.active heading=Preview><div class=\\\"panel panel-default\\\"><div class=panel-body><form ng-submit=vm.onSubmit()><formly-form id=previewFormlyForm model=vm.model fields=vm.wfFormFields><span class=pull-right><button class=\\\"btn btn-primary\\\" type=submit>{{configuration.submitButtonText}}</button> <button class=\\\"btn btn-primary\\\" type=cancel>{{configuration.cancelButtonText}}</button></span></formly-form></form></div></div><div class=\\\"panel panel-default\\\"><div class=panel-body><p>DATA MODEL</p><pre>\\n\t\t\t\t\t\t\t\t\t\t{{vm.model | json}}\\n\t\t\t\t\t\t\t\t\t</pre></div></div><div class=\\\"panel panel-default\\\"><div class=panel-body><p>FIELDS MODEL (ready to save to database one)</p><pre>\\n\t\t\t\t\t\t\t\t\t\t{{vm.wfFormFieldsOnlyNeededProperties | json}}\\n\t\t\t\t\t\t\t\t\t</pre></div></div></tab></tabset></div></div></section><hr><section><h6 class=text-right>Easy form generator : {{easyFormGeneratorVERSION}} — Erwan DATIN (MacKentoch)</h6></section></div></div></section>\");\n$templateCache.put(\"editModalTemplate.html\",\"<div class=modal-header><h3 class=\\\"modal-title greyText\\\">Select a control</h3></div><div class=modal-body><hr><div class=row><div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\"><h5 class=greyText><i class=\\\"fa fa-filter\\\"></i>&nbsp; Select a control in the list below :</h5></div><div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\"><ol class=\\\"nya-bs-select col-xs-12 col-sm-12 col-md-12 col-lg-12\\\" ng-model=modelNyaSelect data-live-search=false><li nya-bs-option=\\\"option in nyaSelect.controls group by option.group\\\"><span class=\\\"dropdown-header greyText\\\">{{$group}}</span><a ng-click=selectThisControl(option.id)><span>{{ option.name }}</span> <span class=\\\"glyphicon glyphicon-ok check-mark\\\"></span></a></li></ol></div></div><hr><div ng-switch=\\\"\\\" on=nyaSelect.selectedControl><div ng-switch-when=none><div class=row><div class=col-sm-12><h5 class=\\\"text-center texteRouge\\\"><i class=\\\"fa fa-arrow-up\\\"></i>&nbsp; Select a control</h5></div></div></div><div ng-switch-when=empty><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-eye\\\"></i>&nbsp; Preview :</h5></div></div><hr><div class=row><div class=col-sm-12><h5 class=\\\"text-center greyText\\\">Column will be blank</h5></div></div></div></div></div><div ng-switch-when=Header><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-eye\\\"></i>&nbsp; Preview :</h5></div></div><hr><div class=row><div class=col-md-12><div class=form-group><div><h2 class=text-center>{{nyaSelect.temporyConfig.formlyDesciption}}</h2><hr></div></div></div></div></div></div><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-pencil-square-o\\\"></i>&nbsp; Edit properties :</h5></div></div><hr><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextDescriptionUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">Header text :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyDesciption id=inputHeaderTextUpdate placeholder=\\\"Add / edit header text here\\\"></div></div></div></div></div></div><div ng-switch-when=Subtitle><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-eye\\\"></i>&nbsp; Preview :</h5></div></div><hr><div class=row><div class=col-md-12><div class=form-group><div><h4 class=text-center>{{nyaSelect.temporyConfig.formlyPlaceholder}}</h4><hr></div></div></div></div></div></div><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-pencil-square-o\\\"></i>&nbsp; Edit properties :</h5></div></div><hr><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputSubTitleTextUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">Subtitle text :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyPlaceholder id=inputSubTitleTextUpdate placeholder=\\\"Add / edit subtitle text here\\\"></div></div></div></div></div></div><div ng-switch-when=TextInput><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-eye\\\"></i>&nbsp; Preview :</h5></div></div><hr><div class=row><div class=col-md-12><div class=form-group><label for=inputText class=\\\"control-label textControlLabel\\\">{{nyaSelect.temporyConfig.formlyLabel}}<span ng-if=nyaSelect.temporyConfig.formlyRequired class=textControlLabel>*</span></label><div><input type=text class=form-control id=inputText placeholder={{nyaSelect.temporyConfig.formlyPlaceholder}}><p class=help-block>{{nyaSelect.temporyConfig.formlyDesciption}}</p></div></div></div></div></div></div><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-pencil-square-o\\\"></i>&nbsp; Edit properties :</h5></div></div><hr><div class=row><div class=form-group><label for=inputTextLabelUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">Label text :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyLabel id=inputTextLabelUpdate placeholder=\\\"Add / edit control label here\\\"></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextplaceholderUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">placeholder :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyPlaceholder id=inputTextplaceholderUpdate placeholder=\\\"Add / edit placeholder text here\\\"></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextRequiredUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">Required :</label><div class=col-lg-9><div class=checkboxCssCorrection>&nbsp;</div><input type=checkbox ng-model=nyaSelect.temporyConfig.formlyRequired id=inputTextRequiredUpdate></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextDescriptionUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">Description :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyDesciption id=inputTextDescriptionUpdate placeholder=\\\"Add / edit description here\\\"></div></div></div></div></div></div><div ng-switch-when=Password><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-eye\\\"></i>&nbsp; Preview :</h5></div></div><hr><div class=row><div class=col-md-12><div class=form-group><label for=inputPassword class=\\\"control-label textControlLabel\\\">{{nyaSelect.temporyConfig.formlyLabel}}<span ng-if=nyaSelect.temporyConfig.formlyRequired class=textControlLabel>*</span></label><div><input type=password class=form-control id=inputPassword placeholder={{nyaSelect.temporyConfig.formlyPlaceholder}}><p class=help-block>{{nyaSelect.temporyConfig.formlyDesciption}}</p></div></div></div></div></div></div><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-pencil-square-o\\\"></i>&nbsp; Edit properties :</h5></div></div><hr><div class=row><div class=form-group><label for=inputTextLabelUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">Label text :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyLabel id=inputTextLabelUpdate placeholder=\\\"Add / edit control label here\\\"></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextplaceholderUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">placeholder :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyPlaceholder id=inputTextplaceholderUpdate placeholder=\\\"Add / edit placeholder text here\\\"></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextRequiredUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">Required :</label><div class=col-lg-9><div class=checkboxCssCorrection>&nbsp;</div><input type=checkbox ng-model=nyaSelect.temporyConfig.formlyRequired id=inputTextRequiredUpdate></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextDescriptionUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">Description :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyDesciption id=inputTextDescriptionUpdate placeholder=\\\"Add / edit description here\\\"></div></div></div></div></div></div><div ng-switch-when=Email><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-eye\\\"></i>&nbsp; Preview :</h5></div></div><hr><div class=row><div class=col-md-12><div class=form-group><label for=inputEmail class=\\\"control-label textControlLabel\\\">{{nyaSelect.temporyConfig.formlyLabel}}<span ng-if=nyaSelect.temporyConfig.formlyRequired class=textControlLabel>*</span></label><div><input type=text class=form-control id=inputEmail placeholder={{nyaSelect.temporyConfig.formlyPlaceholder}}><p class=help-block>{{nyaSelect.temporyConfig.formlyDesciption}}</p></div></div></div></div></div></div><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-pencil-square-o\\\"></i>&nbsp; Edit properties :</h5></div></div><hr><div class=row><div class=form-group><label for=inputTextLabelUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">Label text :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyLabel id=inputTextLabelUpdate placeholder=\\\"Add / edit control label here\\\"></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextplaceholderUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">placeholder :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyPlaceholder id=inputTextplaceholderUpdate placeholder=\\\"Add / edit placeholder text here\\\"></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextRequiredUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">Required :</label><div class=col-lg-9><div class=checkboxCssCorrection>&nbsp;</div><input type=checkbox ng-model=nyaSelect.temporyConfig.formlyRequired id=inputTextRequiredUpdate></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextDescriptionUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">Description :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyDesciption id=inputTextDescriptionUpdate placeholder=\\\"Add / edit description here\\\"></div></div></div></div></div></div><div ng-switch-when=Date><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-eye\\\"></i>&nbsp; Preview :</h5></div></div><hr><div class=row><div class=col-md-12><div class=form-group><label for=inputDate class=\\\"control-label textControlLabel\\\">{{nyaSelect.temporyConfig.formlyLabel}}<span ng-if=nyaSelect.temporyConfig.formlyRequired class=textControlLabel>*</span></label><div><div class=input-group><span class=input-group-addon><i class=\\\"glyphicon glyphicon-calendar\\\"></i></span> <input type=text class=form-control datepicker-popup={{nyaSelect.temporyConfig.datepickerPopup}} ng-model=demodt.dt is-open=demodt.opened min-date=demodt.minDate max-date=\\\"\\'2099-12-31\\'\\\" datepicker-options=dateOptions date-disabled=\\\"disabled(date, mode)\\\" close-text=Close ng-click=open($event)></div><p></p><p class=help-block>{{nyaSelect.temporyConfig.formlyDesciption}}</p></div></div></div></div></div></div><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-pencil-square-o\\\"></i>&nbsp; Edit properties :</h5></div></div><hr><div class=row><div class=form-group><label class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">Date format :</label><div class=col-lg-9><ol class=\\\"nya-bs-select col-sm-12 col-xs-12 col-md-12 col-lg12\\\" ng-model=nyaSelect.temporyConfig.datepickerPopup id=dateformatSelect><li class=nya-bs-option nya-bs-option=\\\"dateformat in demodt.formats\\\" value=dateformat><a>{{dateformat}}</a></li></ol></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextLabelUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">Label text :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyLabel id=inputTextLabelUpdate placeholder=\\\"Add / edit control label here\\\"></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextRequiredUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">Required :</label><div class=col-lg-9><div class=checkboxCssCorrection>&nbsp;</div><input type=checkbox ng-model=nyaSelect.temporyConfig.formlyRequired id=inputTextRequiredUpdate></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextDescriptionUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">Description :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyDesciption id=inputTextDescriptionUpdate placeholder=\\\"Add / edit description here\\\"></div></div></div></div></div></div><div ng-switch-when=Texarea><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-eye\\\"></i>&nbsp; Preview :</h5></div></div><hr><div class=row><div class=col-md-12><div class=form-group><label for=textArea class=\\\"control-label textControlLabel\\\">{{nyaSelect.temporyConfig.formlyLabel}}<span ng-if=nyaSelect.temporyConfig.formlyRequired class=textControlLabel>*</span></label><div><textarea class=form-control ng-model=model[options.key] rows=3 id=textArea></textarea><p class=help-block>{{nyaSelect.temporyConfig.formlyDesciption}}</p></div></div></div></div></div></div><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-pencil-square-o\\\"></i>&nbsp; Edit properties :</h5></div></div><hr><div class=row><div class=form-group><label for=inputTextLabelUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">Label text :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyLabel id=inputTextLabelUpdate placeholder=\\\"Add / edit control label here\\\"></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextRequiredUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">Required :</label><div class=col-lg-9><div class=checkboxCssCorrection>&nbsp;</div><input type=checkbox ng-model=nyaSelect.temporyConfig.formlyRequired id=inputTextRequiredUpdate></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextDescriptionUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">Description :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyDesciption id=inputTextDescriptionUpdate placeholder=\\\"Add / edit description here\\\"></div></div></div></div></div></div><div ng-switch-when=RichTextEditor><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-eye\\\"></i>&nbsp; Preview :</h5></div></div><hr><div class=row><div class=col-md-12><div class=form-group><label for=RichTextEditor class=\\\"control-label textControlLabel\\\">{{nyaSelect.temporyConfig.formlyLabel}}<span ng-if=nyaSelect.temporyConfig.formlyRequired class=textControlLabel>*</span></label><div><text-angular ng-model=model[options.key]></text-angular><p class=help-block>{{nyaSelect.temporyConfig.formlyDesciption}}</p></div></div></div></div></div></div><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-pencil-square-o\\\"></i>&nbsp; Edit properties :</h5></div></div><hr><div class=row><div class=form-group><label for=inputTextDescriptionUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">Description :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyDesciption id=inputTextDescriptionUpdate placeholder=\\\"Add / edit description here\\\"></div></div></div></div></div></div><div ng-switch-when=Radio><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-eye\\\"></i>&nbsp; Preview :</h5></div></div><hr><div class=row><div class=col-md-12><div class=form-group><label for=basicSelect class=\\\"control-label textControlLabel\\\">{{nyaSelect.temporyConfig.formlyLabel}}<span ng-if=nyaSelect.temporyConfig.formlyRequired class=textControlLabel>*</span></label><div><div class=radio ng-repeat=\\\"radioRow in radioRowCollection.rows\\\"><label><input type=radio name=optionsRadios id=\\\"{{\\'optionsRadio-\\' + $index}}\\\" value=$index checked=\\\"\\\"> {{radioRow.option}}</label></div><p class=help-block>{{nyaSelect.temporyConfig.formlyDesciption}}</p></div></div></div></div></div></div><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-pencil-square-o\\\"></i>&nbsp; Edit properties :</h5></div></div><hr><div class=row><div class=\\\"col-lg-3 col-md-3\\\"><label for=radioRowCollection class=\\\"control-label greyText editPropertiesLabel\\\">Add new radio :</label></div></div><div class=row><div><div class=form-group><div class=\\\"col-sm-9 col-xs-9 col-md-9 col-lg-9\\\"><input type=text class=form-control id=inputAddNewRadioOption placeholder=\\\"add new radio\\\" ng-model=newOptionRadio.saisie></div><div class=\\\"col-sm-3 col-xs-3 col-md-3 col-lg-3\\\"><button class=\\\"btn btn-primary\\\" ng-click=addNewOptionRadio()>add</button></div></div></div></div><div class=row><div class=\\\"col-lg-3 col-md-3\\\"><label for=radioRowCollection class=\\\"control-label greyText editPropertiesLabel\\\">Edit/Remove radio :</label></div></div><div class=row><div class=form-group><div class-\\\"col-lg-12=\\\"\\\" col-md-12=\\\"\\\" col-sm-12=\\\"\\\" col-xs-12\\\"=\\\"\\\"><div class=container><div ng-show=\\\"radioRowCollection.rows.length === 0\\\"><h5 class=\\\"text-center greyText\\\"><em>- no radio : add new radio values -</em></h5></div><table ng-if=\\\"radioRowCollection.rows.length > 0\\\" class=\\\"table table-striped\\\"><thead><tr><th st-ratio=20>order</th><th st-ratio=55>option</th><th st-ratio=25></th></tr><tr><th st-ratio=20></th><th st-ratio=55><input ng-model=radioFilter placeholder=\\\"search for option\\\" class=\\\"input-sm form-control\\\" type=search></th><th st-ratio=25></th></tr></thead><tbody><tr ng-repeat=\\\"radioRow in radioRowCollection.rows | filter:radioFilter as radioRow\\\"><td st-ratio=20>{{$index}}</td><td st-ratio=55>{{radioRow.option}}</td><td st-ratio=25><div class=pull-right><button class=\\\"btn btn-primary\\\" ng-click=upThisRadioRow($index)><i class=\\\"fa fa-arrow-up\\\"></i></button> <button class=\\\"btn btn-primary\\\" ng-click=downThisRadioRow($index)><i class=\\\"fa fa-arrow-down\\\"></i></button> <button class=\\\"btn btn-danger\\\" ng-click=removeRadioRow($index)><i class=\\\"fa fa-trash-o\\\"></i></button></div></td></tr></tbody></table></div></div></div></div><hr><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextLabelUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">Label text :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyLabel id=inputTextLabelUpdate placeholder=\\\"Add / edit control label here\\\"></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextRequiredUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">Required :</label><div class=col-lg-9><div class=checkboxCssCorrection>&nbsp;</div><input type=checkbox ng-model=nyaSelect.temporyConfig.formlyRequired id=inputTextRequiredUpdate></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextDescriptionUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">Description :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyDesciption id=inputTextDescriptionUpdate placeholder=\\\"Add / edit description here\\\"></div></div></div></div></div></div><div ng-switch-when=Checkbox><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-eye\\\"></i>&nbsp; Preview :</h5></div></div><hr><div class=row><div class=col-md-12><div class=form-group><div class=col-md-12><div class=checkbox><label><input type=checkbox id=checkBox> <span class=blackText>{{nyaSelect.temporyConfig.formlyLabel}}</span><span ng-if=nyaSelect.temporyConfig.formlyRequired class=textControlLabel>*</span></label></div><p class=help-block>{{nyaSelect.temporyConfig.formlyDesciption}}</p></div></div></div></div></div></div><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-pencil-square-o\\\"></i>&nbsp; Edit properties :</h5></div></div><hr><div class=row><div class=form-group><label for=inputTextLabelUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">Label text :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyLabel id=inputTextLabelUpdate placeholder=\\\"Add / edit control label here\\\"></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextRequiredUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">Required :</label><div class=col-lg-9><div class=checkboxCssCorrection>&nbsp;</div><input type=checkbox ng-model=nyaSelect.temporyConfig.formlyRequired id=inputTextRequiredUpdate></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextDescriptionUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">Description :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyDesciption id=inputTextDescriptionUpdate placeholder=\\\"Add / edit description here\\\"></div></div></div></div></div></div><div ng-switch-when=BasicSelect><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-eye\\\"></i>&nbsp; Preview :</h5></div></div><hr><div class=row><div class=col-md-12><div class=form-group><label for=basicSelect class=\\\"control-label textControlLabel\\\">{{nyaSelect.temporyConfig.formlyLabel}}<span ng-if=nyaSelect.temporyConfig.formlyRequired class=textControlLabel>*</span></label><div><ol class=\\\"nya-bs-select col-sm-12 col-xs-12 col-md-12 col-lg12\\\" ng-model=modelbasicSelect id=basicSelect disabled=\\\"basicSelectRowCollection.rows.length === 0\\\"><li class=nya-bs-option nya-bs-option=\\\"basicSelectRow in basicSelectRowCollection.rows\\\" value=$index><a>{{basicSelectRow.option}}</a></li></ol><p class=help-block>{{nyaSelect.temporyConfig.formlyDesciption}}</p></div></div></div></div></div></div><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-pencil-square-o\\\"></i>&nbsp; Edit properties :</h5></div></div><hr><div class=row><div class=\\\"col-lg-3 col-md-3\\\"><label for=basicSelectRowCollection class=\\\"control-label greyText editPropertiesLabel\\\">Add new options :</label></div></div><div class=row><div><div class=form-group><div class=\\\"col-sm-9 col-xs-9 col-md-9 col-lg-9\\\"><input type=text class=form-control id=inputAddNewBasicOption placeholder=\\\"add new option\\\" ng-model=newOptionBasicSelect.saisie></div><div class=\\\"col-sm-3 col-xs-3 col-md-3 col-lg-3\\\"><button class=\\\"btn btn-primary\\\" ng-click=addNewOptionBasicSelect()>add</button></div></div></div></div><div class=row><div class=\\\"col-lg-3 col-md-3\\\"><label class=\\\"control-label greyText editPropertiesLabel\\\">Edit/Remove options :</label></div></div><div class=row><div class=form-group><div class-\\\"col-lg-12=\\\"\\\" col-md-12=\\\"\\\" col-sm-12=\\\"\\\" col-xs-12\\\"=\\\"\\\"><div class=container><div ng-if=\\\"basicSelectRowCollection.rows.length === 0\\\"><h5 class=\\\"text-center greyText\\\"><em>- no option : add new options -</em></h5></div><table ng-if=\\\"basicSelectRowCollection.rows.length > 0\\\" class=\\\"table table-striped\\\"><thead><tr><th st-ratio=20>order</th><th st-ratio=55>option</th><th st-ratio=25></th></tr><tr><th st-ratio=20></th><th st-ratio=55><input ng-model=basicSelectFilter placeholder=\\\"search for option\\\" class=\\\"input-sm form-control\\\" type=search></th><th st-ratio=25></th></tr></thead><tbody><tr ng-repeat=\\\"basicSelectRow in basicSelectRowCollection.rows | filter:basicSelectFilter as basicSelectRow\\\"><td st-ratio=20>{{$index}}</td><td st-ratio=55>{{basicSelectRow.option}}</td><td st-ratio=25><div class=pull-right><button class=\\\"btn btn-primary\\\" ng-click=upThisRow($index)><i class=\\\"fa fa-arrow-up\\\"></i></button> <button class=\\\"btn btn-primary\\\" ng-click=downThisRow($index)><i class=\\\"fa fa-arrow-down\\\"></i></button> <button class=\\\"btn btn-danger\\\" ng-click=removeRow($index)><i class=\\\"fa fa-trash-o\\\"></i></button></div></td></tr></tbody></table></div></div></div></div><hr><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextDescriptionUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">Description :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyDesciption id=inputTextDescriptionUpdate placeholder=\\\"Add / edit description here\\\"></div></div></div></div></div></div><div ng-switch-when=GroupedSelect><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-eye\\\"></i>&nbsp; Preview :</h5></div></div><hr><div class=row><div class=col-md-12><div class=form-group><label for=select class=\\\"control-label textControlLabel\\\">{{nyaSelect.temporyConfig.formlyLabel}}<span ng-if=nyaSelect.temporyConfig.formlyRequired class=textControlLabel>*</span></label><div><ol class=\\\"nya-bs-select col-sm-12 col-xs-12 col-md-12 col-lg12\\\" ng-model=modelGroupedSelect data-live-search=true disabled=\\\"groupedSelectRowCollection.rows.length === 0\\\"><li nya-bs-option=\\\"groupedSelectRow in groupedSelectRowCollection.rows group by groupedSelectRow.group\\\" value=$index><span class=dropdown-header>{{groupedSelectRow.group}}</span> <a><span>{{groupedSelectRow.option}}</span> <span class=\\\"glyphicon glyphicon-ok check-mark\\\"></span></a></li></ol><p class=help-block>{{nyaSelect.temporyConfig.formlyDesciption}}</p></div></div></div></div></div></div><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-pencil-square-o\\\"></i>&nbsp; Edit properties :</h5></div></div><hr><div class=row><div class=\\\"col-lg-3 col-md-3\\\"><label for=groupedSelectRowCollection class=\\\"control-label greyText editPropertiesLabel\\\">Add new options :</label></div></div><div class=row><div><div class=form-group><div class=\\\"col-sm-9 col-xs-9 col-md-9 col-lg-9\\\"><input type=text class=form-control id=inputAddNewGroupedOption placeholder=\\\"add new option\\\" ng-model=newOptionGroupedSelect.saisie></div><div class=\\\"col-sm-3 col-xs-3 col-md-3 col-lg-3\\\"><button class=\\\"btn btn-primary\\\" ng-click=addNewOptionGroupedSelect()>add</button></div></div></div></div><div class=row><div class=\\\"col-lg-3 col-md-3\\\"><label for=groupedSelectRowCollection class=\\\"control-label greyText editPropertiesLabel\\\">Add new groups :</label></div></div><div class=row><div><div class=form-group><div class=\\\"col-sm-9 col-xs-9 col-md-9 col-lg-9\\\"><input id=inputAddNewGroupGroupedOption type=text class=form-control ng-model=newGroupGroupedSelect.saisie placeholder=\\\"Add new group\\\"></div><div class=\\\"col-sm-3 col-xs-3 col-md-3 col-lg-3\\\"><button class=\\\"btn btn-primary\\\" ng-click=addNewGroupToGroupedSelect()>add</button></div></div></div></div><div class=row><div class=\\\"col-lg-3 col-md-3\\\"><label class=\\\"control-label greyText editPropertiesLabel\\\">Edit/Remove options/groups:</label></div></div><div class=row><div class=form-group><div class-\\\"col-lg-12=\\\"\\\" col-md-12=\\\"\\\" col-sm-12=\\\"\\\" col-xs-12\\\"=\\\"\\\"><div class=container><div ng-if=\\\"groupedSelectRowCollection.rows.length === 0\\\"><h5 class=\\\"text-center greyText\\\"><em>- no option : add new options -</em></h5></div><table ng-if=\\\"groupedSelectRowCollection.rows.length > 0\\\" class=\\\"table table-striped\\\"><thead><tr><th st-ratio=20>order</th><th st-ratio=25>group</th><th st-ratio=30>option</th><th st-ratio=25></th></tr><tr><th st-ratio=20></th><th st-ratio=25></th><th st-ratio=30><input ng-model=groupedSelectFilter placeholder=\\\"search for option\\\" class=\\\"input-sm form-control\\\" type=search></th><th st-ratio=25></th></tr></thead><tbody><tr ng-repeat=\\\"groupedSelectRow in groupedSelectRowCollection.rows | filter:groupedSelectFilter as groupedSelectRow\\\"><td st-ratio=20>{{$index}}</td><td st-ratio=25><div ng-if=\\\"groupSelectGroupClick.showList === true\\\"><div ng-if=\\\"GroupedSelectGroups.list.length === 0\\\"><p class=\\\"text-left noGroupText\\\">- add new groups -</p></div><div ng-if=\\\"GroupedSelectGroups.list.length > 0\\\"><ol class=\\\"nya-bs-select col-sm-12 col-xs-12 col-md-12 col-lg12 editGroupedSelectnyaSelect\\\" ng-model=groupedSelectRow.group id=modelGroupedOptionGroupedChoose disabled=\\\"GroupedSelectGroups.list.length === 0\\\"><li class=nya-bs-option nya-bs-option=\\\"GroupedSelectGroup in GroupedSelectGroups.list\\\" value=GroupedSelectGroup><a>{{GroupedSelectGroup}}</a></li></ol></div></div><div ng-if=\\\"groupSelectGroupClick.showList === false\\\">{{groupedSelectRow.group}}</div></td><td st-ratio=30>{{groupedSelectRow.option}}</td><td st-ratio=25><div class=pull-right><button class=\\\"btn btn-primary\\\" ng-click=upThisGroupedSelectRow($index)><i class=\\\"fa fa-arrow-up\\\"></i></button> <button class=\\\"btn btn-primary\\\" ng-click=downThisGroupedSelectRow($index)><i class=\\\"fa fa-arrow-down\\\"></i></button> <button class=\\\"btn btn-warning\\\" ng-click=showGroupListToChoose()><i class=\\\"fa fa-pencil-square-o\\\"></i></button> <button class=\\\"btn btn-danger\\\" ng-click=removeGroupedSelectRow($index)><i class=\\\"fa fa-trash-o\\\"></i></button></div></td></tr></tbody></table></div></div></div></div><hr><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextDescriptionUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">Description :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyDesciption id=inputTextDescriptionUpdate placeholder=\\\"Add / edit description here\\\"></div></div></div></div></div></div></div></div><div class=modal-footer><button class=\\\"btn btn-primary\\\" ng-class=\\\"{\\'disabled\\': nyaSelect.selectedControl === \\'none\\'}\\\" ng-click=ok()>OK</button> <button class=\\\"btn btn-warning\\\" ng-click=cancel()>Cancel</button></div>\");}]);\n/**\n *  ------------------------------------------------------\n *  module core : injects core \"non app modules\"\n *  ------------------------------------------------------\n *\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n\n(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('ngwfApp.core', [\n\t    'textAngular',\n\t    'textAngularSetup',\n\t    'ngAnimate',\n\t    'toaster',                      \n\t    'formly', \n\t    'formlyBootstrap',\n\t    'ui.bootstrap',\n\t    'nya.bootstrap.select'\n\t\t]);\n\n})(); \n\n/**\n *  ------------------------------------------------------\n *  controllers container\n *  ------------------------------------------------------\n *\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n(function () {\n\t'use strict';\n\n\n\tangular.module('ngwfApp.controllers', [\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'ngwfApp.controllers.ngwfMainController',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'ngwfApp.controllers.ngwfWfEditController',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'ngwfApp.controllers.ngwfWfEditMODALController'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t);\n\n})(); \n\n\n/**\n *  ------------------------------------------------------\n *  module = \"controller\" main controller\n *  ------------------------------------------------------\n *\n *\n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n\n;(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('ngwfApp.controllers.ngwfMainController', [])\n\t\t.controller('ngwfMainController', ngwfMainController);\n\n\t\tngwfMainController.$inject = ['$scope', '$timeout'];\n\t\tfunction ngwfMainController($scope, $timeout){\n\t\t\t\n\t\t\t$scope.FormNameAsTest = 'initial_name';\n\t\t\t\n\t\t\t$timeout(function(){\n\t\t\t\t$scope.FormNameAsTest = 'name changed after 3s';\n\t\t\t}, 3000);\n\t\t}\n\n})(); \n\n\n/**\n *  ------------------------------------------------------\n *  module = \"controller\" edit controller\n *  ------------------------------------------------------\n *\n * Main controller :\n * \n *  - configuration model : fields model database friendly\n *  - formlymodel : fields model bound to formly directive (not database freindly)\n *  - vm.model : data model (database friendly)\n *\n * if you want more details on how to save to data base :\n *\n * http://www.erwan-datin.com/tips/how-do-I-store-angular-formly-fields-model-into-database\n *\n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n\n(function () {\n\n  'use strict';\n\n  angular\n    .module('ngwfApp.controllers.ngwfWfEditController', [])\n    .controller('ngwfWfEditController', ngwfWfEditController);\n\n\n    ngwfWfEditController.$inject = [\n      '$scope', \n      '$templateCache',\n      'easyFormGenVersion',\n      '$filter',\n      '$anchorScroll',\n      'toaster', \n      '$timeout',\n      '$modal',\n      '$log', \n      'formFieldManage',\n      'WfFormsByIdServices',\n      'controllerModalProxy',\n    ];\n\n    \n    function ngwfWfEditController(\n                                    $scope, \n                                    $templateCache,\n                                    easyFormGenVersion,\n                                    $filter,\n                                    $anchorScroll,\n                                    toaster,\n                                    $timeout, \n                                    $modal,\n                                    $log, \n                                    formFieldManage, \n                                    WfFormsByIdServices, \n                                    controllerModalProxy\n                                    ){\n      /*jshint validthis: true */\n      $scope.vm                       = this;\n      $scope.vm.model                 = {};\n      $scope.vm.wfFormFields          = [];\n      $scope.vm.wfFormFieldsOnlyNeededProperties = []; \n      $scope.vm.onSubmit              = onSubmit;\n\n      $scope.easyFormGeneratorVERSION = easyFormGenVersion;\n      $scope.debug                    = initDebugModel();\n      $scope.tab                      = initTabModel();\n\n      //configuration model (contains array of lines which contains array of columns)\n      $scope.configuration            = {};    \n                               \n      $scope.numberOfColumns          = 1;\n      $scope.MaxNumberOfColumns       = 3;\n      $scope.MinNumberOfColumns       = 1;\n      $scope.columnTemplate           = initColumnTemplate();\n\n      $scope.lineTemplate             = initLineTemplate();\n      $scope.resetToZeroModel         = resetToZeroModel;\n      $scope.countConfigurationModelLines = countConfigurationModelLines;\n      $scope.setActiveLineNumber      = setActiveLineNumber;\n      $scope.upThisLine               = upThisLine;\n      $scope.downThisLine             = downThisLine;\n      $scope.addNewline               = addNewline;\n      $scope.removeThisLine           = removeThisLine;\n\n      $scope.increaseNumberOfColumns  = increaseNumberOfColumns;\n      $scope.decreaseNumberOfColumns  = decreaseNumberOfColumns;\n\n      $scope.resetStepCounter         = resetStepCounter;\n      $scope.nextConfigStep           = nextConfigStep;\n\n      $scope.previousConfigStep       = previousConfigStep;\n      $scope.stepReachable            = stepReachable;\n\n      $scope.toggleAnimation = toggleAnimation;\n\n      $scope.nyaSelect                = {};\n      \n      $scope.animationsEnabled        = true;\n      //call modal to edit selected control\n      $scope.showModalAddCtrlToColumn = showModalAddCtrlToColumn;\n\n      \n      //disabled here : to load list of saved formly fields from database\n      $scope.loadExistingFormsList    = loadExistingFormsAsList();\n      $scope.formlyList               = {};\n      $scope.previewLoadedForm        = { fieldsModel:[] };\n      $scope.configurationLoaded      = {};   \n      $scope.previewExistingform      = previewExistingform;\n      $scope.saveThisForm             = saveThisForm; //should save to database (commented here)\n\n\n   \n\n\n      \n\n\n\n      //load formlyList on init\n      loadExistingFormsAsList();\n\n      formFieldManage.initConfigurationEditFromScratch($scope.configuration);\n\n      controllerModalProxy.initNyaSelect($scope.nyaSelect);\n\n\n\n      function initDebugModel(){\n        return {\n         showDebug : false,\n         configurationModelNumberofLines : 1        \n        };\n      }\n\n      function initTabModel(){\n        return {\n          editTab : {active : true},\n          previewTab : {active : false}\n        };\n      }\n\n      function previewExistingform(formlyform){\n       var configlines = JSON.parse(formlyform.formlyField);\n       //here to replace with $scope.configuration : initialise configuration with lines \n       $scope.configurationLoaded = {};\n       formFieldManage.bindConfigurationLines($scope.configurationLoaded,configlines);\n       formFieldManage.applyConfigurationToformlyModel($scope.configurationLoaded, $scope.previewLoadedForm.fieldsModel, $scope.vm.model);\n       $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n       $scope.previewLoadedForm.cancelButtonText = formlyform.cancelButtonText;\n       $scope.previewLoadedForm.submitButtonText = formlyform.submitButtonText;\n      }    \n\n      function onSubmit() {\n        toaster.pop({\n            type: 'info',\n            timeout:2000,\n            title: 'should save data model if it were not a static example',\n            body: 'data :' + $filter('json')($scope.vm.model, 4),                \n            showCloseButton: true\n        }); \n      }\n      \n      function initColumnTemplate(){\n        return  {\n          numColumn: -1,\n          exist:true, \n          control: {\n            type:'none',\n            key: 'none',\n            subtype: 'none',\n            // templateOptions: {\n            //                     label: 'none',\n            //                     placeholder: 'none',\n            //                     required: false,\n            //                     description: 'Descriptive text'\n            //                   }\n          }                                         \n        };\n      }\n\n      function initLineTemplate(){\n        return {\n          line:-1, \n          activeColumn : 1,\n          columns: [\n            {  \n              numColumn: 1,\n              exist:true, \n              control: {\n                type:'none',\n                key: 'none',\n                // templateOptions: {\n                //                     label: 'none',\n                //                     placeholder: 'none',\n                //                     required: false,\n                //                     description: 'Descriptive text'\n                //                   }\n                }\n              }\n            ]\n        };\n      }\n\n      function resetToZeroModel(){\n        $scope.configuration.activeLine = 1;\n        if ($scope.configuration.lines.length > 1) {\n          $scope.configuration.lines.splice(1, $scope.configuration.lines.length - 2);\n        }\n        return $scope.countConfigurationModelLines();\n      }\n\n      function countConfigurationModelLines(){\n        //information in debug model\n        $scope.debug.configurationModelNumberofLines = $scope.configuration.lines.length;\n        return $scope.configuration.lines.length;\n      }      \n\n      function setActiveLineNumber(lineNumber){\n        if (lineNumber <= $scope.countConfigurationModelLines()) {\n          $scope.configuration.activeLine = lineNumber;\n        }\n      } \n\n      function upThisLine(indexLine){    \n        if (indexLine > -1) {\n          if ($scope.configuration.lines[indexLine - 1]) {\n            var currentLineObj = $scope.configuration.lines[indexLine];\n            $scope.configuration.lines.splice(indexLine , 1);\n            $scope.configuration.lines.splice((indexLine - 1), 0, currentLineObj);    \n            //manage selected aciveLine\n            $scope.configuration.activeLine = 1;\n          }\n        }\n          //re-render formfield \n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);     \n      }  \n\n      function downThisLine(indexLine){\n        if (indexLine > -1) {\n          if ($scope.configuration.lines[indexLine + 1]) {\n            var currentLineObj = $scope.configuration.lines[indexLine];\n            $scope.configuration.lines.splice(indexLine , 1);\n            $scope.configuration.lines.splice((indexLine + 1), 0, currentLineObj);  \n            //manage selected aciveLine\n            $scope.configuration.activeLine = 1;\n          }\n        }     \n        //re-render formfield \n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model); \n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);   \n      } \n\n      function addNewline(){\n        $scope.configuration.lines.push(\n          {\n            line:-1, \n            activeColumn : 1,\n            columns: [\n                      {  \n                        numColumn: 1,\n                        exist:true, \n                        control: {\n                                    type:'none',\n                                    key: 'none',\n                                    // templateOptions: {\n                                    //                     label: 'none',\n                                    //                     placeholder: 'none',\n                                    //                     required: false,\n                                    //                     description: 'Descriptive text'\n                                    //                   }\n                                  }\n                        }\n                      ]\n            }\n        );\n          //re-render formfield \n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields); \n      }\n\n      function removeThisLine(index){\n        if (index > -1) {\n          if ($scope.configuration.lines.length > 1) {\n              //manage selected aciveLine\n              if ($scope.configuration.activeLine === index + 1) {\n                $scope.configuration.activeLine = 1;\n              }\n              $scope.configuration.lines.splice(index, 1);\n          }else{\n            $timeout(function(){\n                toaster.pop({\n                        type: 'warning',\n                        title: 'Last line' ,\n                        body: 'Can\\'t delete the last line',                \n                        showCloseButton: true\n                  });\n            }, 100); \n          }\n        //re-render formfield \n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n        }\n      }\n\n      function increaseNumberOfColumns(){\n        if ($scope\n              .configuration\n              .lines[$scope.configuration.activeLine -1]\n              .columns.length < $scope.MaxNumberOfColumns) {\n\n          var newNumberOfColumns = $scope\n                                      .configuration\n                                      .lines[$scope.configuration.activeLine -1]\n                                      .columns\n                                      .push(\n                                            {\n                                              numColumn: -1,\n                                              exist: true, \n                                              control: {\n                                                          type:'none',\n                                                          key: 'none'\n                                                          // templateOptions: {\n                                                          //                     label: 'none',\n                                                          //                     placeholder: 'none',\n                                                          //                     required: false,\n                                                          //                     description: 'Descriptive text'\n                                                          //                   }\n                                                        }                                         \n                                             }                                        \n                                            );\n          $scope\n              .configuration\n              .lines[$scope.configuration.activeLine -1]\n              .columns[newNumberOfColumns - 1]\n              .numColumn = newNumberOfColumns; \n          }\n           //re-render formfield \n          formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model); \n          $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n      }  \n\n      function decreaseNumberOfColumns(){\n        if ($scope\n              .configuration\n              .lines[$scope.configuration.activeLine -1]\n              .columns.length > 1) {\n          $scope.configuration\n            .lines[$scope.configuration.activeLine -1]\n            .columns\n            .splice($scope.configuration.lines[$scope.configuration.activeLine -1].columns.length -1, 1);\n        }\n        //re-render formfield \n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);  \n\n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);  \n      }  \n\n      function resetStepCounter(){\n        $scope.configuration.configStepCounter = 0;\n      } \n\n      function nextConfigStep(){\n        var configStepCounterMAX = $scope.configuration.listConfigStep.length -1;\n        if ($scope.configuration.configStepCounter !== configStepCounterMAX) {\n            $scope.configuration.configStepCounter ++;\n        }    \n        setTrueThisStepIndicator($scope.configuration.configStepCounter);\n      }   \n\n      function previousConfigStep(){\n        if ($scope.configuration.configStepCounter !== 0) {\n          $scope.configuration.configStepCounter --;\n        }\n        setTrueThisStepIndicator($scope.configuration.configStepCounter);\n      }\n\n      function stepReachable(indexStep){\n        if (indexStep < $scope.configuration.configStepCounter) {\n          return 'disabled';\n        }else{\n          return 'enabled';\n        }\n      } \n\n      function showModalAddCtrlToColumn(size, indexLine, numcolumn) {\n\n        var modalInstance = $modal.open({\n                                          animation: $scope.animationsEnabled,\n                                          templateUrl: 'editModalTemplate.html',  \n                                          controller: 'ngwfWfEditMODALController',\n                                          size: 'lg',\n                                          resolve: {\n                                            nyaSelect: function () {\n                                              return controllerModalProxy\n                                                        .getNyASelectFromSelectedLineColumn($scope.nyaSelect, $scope.configuration,indexLine, numcolumn);\n                                            }\n                                          }\n        });\n\n        modalInstance.result.then(function (modalAddCtrlModel) {\n            controllerModalProxy.bindConfigurationModelFromModalReturn(indexLine, numcolumn, modalAddCtrlModel, $scope.configuration);\n            formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n            \n            $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n\n        }, function () {\n          //$log.info('Modal dismissed at: ' + new Date());\n        });\n      } \n\n      function toggleAnimation() {\n        $scope.animationsEnabled = !$scope.animationsEnabled;\n      }            \n\n\n\n\n      /**\n       * loadExistingFormsAsList :\n       *  - LOAD from database (list of forms)\n       */\n      function loadExistingFormsAsList(){\n        // $scope.formlyList = WfFormsByIdServices.query();\n      }\n      /**\n       * saveThisForm \n       * - SAVE to database (current stringified configuration model === current form)\n       */\n      function saveThisForm(){\n        if (typeof $scope.configuration.formName === 'undefined') {\n        toaster.pop({\n                type: 'warning',\n                timeout:2000,\n                title: 'Form name is undefined',\n                body: 'Form has not been saved.',                \n                showCloseButton: true\n          });\n          return false;\n        }\n        if ($scope.configuration.formName === '') {\n        toaster.pop({\n                type: 'warning',\n                timeout:2000,\n                title: 'Form name is required',\n                body: 'Form has not been saved.',                \n                showCloseButton: true\n          });\n          return false;\n        }\n        toaster.pop({\n                type: 'wait',\n                timeout:10000,\n                title: 'Form is being saved',\n                body: 'Wait.',                \n                showCloseButton: true\n        });\n\n        \n        var WfForm = new WfFormsByIdServices();\n        var formSavingIsOK = true;\n\n        WfForm.formName = $scope.configuration.formName;\n        WfForm.submitButtonText = $scope.configuration.submitButtonText;\n        WfForm.cancelButtonText = $scope.configuration.cancelButtonText;\n\n        WfForm.formlyField = JSON.stringify($scope.configuration.lines); \n\n        //------------------------------------------------------------------------------------------------------\n        // UNCOMMENT TO MAKE IT SAVE TO DB \n        // -> (assuming your service in WfFormsByIdServices is well configurered for your RESTfull server)\n        //------------------------------------------------------------------------------------------------------\n        // save to database here \n        // WfForm.$save()\n        //             .then(function(res)  {    formSavingIsOK = true;    })\n        //             .catch(function(req) { \n        //                                   toaster.clear();\n        //                                   formSavingIsOK = false; \n        //                                   toaster.pop({\n        //                                           type: 'error',\n        //                                           timeout:2000,\n        //                                           title: 'Error while saving form',\n        //                                           body: 'Sorry, an Error occured while saving form.',                \n        //                                           showCloseButton: true\n        //                                     });\n        //             })\n        //             .finally(function()  { \n        //                                   if (formSavingIsOK === true) {\n        //                                     toaster.clear();  \n        //                                     toaster.pop({\n        //                                             type: 'success',\n        //                                             timeout:2000,\n        //                                             title: 'Form is successfully saved',\n        //                                             body: '',                \n        //                                             showCloseButton: true\n        //                                       });                                         \n        //                                   }\n        //              });\n\n        toaster.clear();  \n        toaster.pop({\n                type: 'info',\n                timeout:2000,\n                title: 'Form would be saved if it were not a static example',\n                body: '',                \n                showCloseButton: true\n          }); \n        return true;\n      } \n\n\n\n\n      function resetAllIndicators(){\n        for (var i = $scope.configuration.stepIndicators.length - 1; i >= 0; i--) {\n          $scope.configuration.stepIndicators[i] = false;\n        }\n      }\n      \n      function setTrueThisStepIndicator(indexIndicator){\n          resetAllIndicators();\n          $scope.configuration.stepIndicators[indexIndicator] = true;    \n      }\n\n\n\n\n\n    }\n\n\n})(); \n/**\n *  ------------------------------------------------------\n *  module = \"controller\" modal controller\n *  ------------------------------------------------------\n *\n * edit control modal controller\n *\n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n\n(function () {\n  'use strict';\n\n\n  angular\n    .module('ngwfApp.controllers.ngwfWfEditMODALController', [])\n    .controller('ngwfWfEditMODALController', ngwfWfEditMODALController);\n\n    ngwfWfEditMODALController.$inject = [\n      '$scope', \n      '$modalInstance',\n      'nyaSelect',\n      'toaster' ,\n      '$timeout',\n      'selectOptionManage',\n      'controllerModalProxy',\n    ];\n\n    function ngwfWfEditMODALController( $scope, \n                                        $modalInstance, \n                                        nyaSelect, \n                                        toaster,\n                                        $timeout,\n                                        selectOptionManage,\n                                        controllerModalProxy\n                                      ){\n      \n      var initOptionModel = { rows:[] };\n\n      $scope.radioRowCollection = initOptionModel;\n      $scope.newOptionRadio     = {saisie: ''};\n\n      $scope.addNewOptionRadio  = addNewOptionRadio;\n      $scope.removeRadioRow     = removeRadioRow;\n      $scope.upThisRadioRow     = upThisRadioRow;\n      $scope.downThisRadioRow   = downThisRadioRow;\n\n      $scope.basicSelectRowCollection = initOptionModel;\n      $scope.newOptionBasicSelect     = {saisie: ''}; \n      $scope.addNewOptionBasicSelect  = addNewOptionBasicSelect;\n      $scope.removeRow                = removeRow;\n      $scope.upThisRow                = upThisRow;\n      $scope.downThisRow              = downThisRow;\n\n      $scope.groupedSelectRowCollection = initOptionModel;\n      $scope.newOptionGroupedSelect     = {saisie: ''};\n      $scope.GroupedSelectGroups        = { list:[] };\n      $scope.newGroupGroupedSelect      = {saisie: ''};  \n      $scope.groupSelectGroupClick      = {showList : false};\n      $scope.showGroupListToChoose      = showGroupListToChoose;\n      $scope.addNewGroupToGroupedSelect = addNewGroupToGroupedSelect;\n      $scope.addNewOptionGroupedSelect  = addNewOptionGroupedSelect;\n      $scope.removeGroupedSelectRow     = removeGroupedSelectRow;\n      $scope.upThisGroupedSelectRow     = upThisGroupedSelectRow;\n      $scope.downThisGroupedSelectRow   = downThisGroupedSelectRow;\n\n      $scope.demodt         = {}; \n      $scope.today          = today;\n      $scope.clear          = clear;\n      $scope.open           = openfct;\n      $scope.dateOptions    = dateOptionsInit(); \n      $scope.demodt.formats = ['dd-MMMM-yyyy', 'yyyy/MM/dd', 'dd.MM.yyyy', 'shortDate'];\n\n      $scope.nyaSelect                  = nyaSelect ;\n      $scope.nyaSelect.selectedControl  = $scope.nyaSelect.temporyConfig.selectedControl;\n      $scope.selectThisControl          = selectThisControl;\n      $scope.ok                         = okfct;\n      $scope.cancel                     = cancelfct;\n\n\n\n      //init today date\n      today();\n      //init nyaSelect model depending selected control\n      initNyaSelectConformingSelectedControl();\n\n\n    \n    \n      function addNewOptionRadio(){\n        var result = selectOptionManage.addNewOptionRadio($scope.radioRowCollection, $scope.newOptionRadio.saisie);\n        if (result.resultFlag === false) {\n              toaster.pop({\n                type: 'warning',\n                timeout:2000,\n                title: result.details,\n                body: '\\''+ $scope.newOptionRadio.saisie + '\\'' + ' cannot be added.',                \n                showCloseButton: true\n          });\n        }\n        //reset input\n        $scope.newOptionRadio = {saisie: ''};\n      }\n\n      function removeRadioRow(index) {\n        var result = selectOptionManage.removeOption($scope.radioRowCollection, index);\n        if (result.resultFlag === false) {\n            toaster.pop({\n              type: 'warning',\n              timeout:2000,\n              title: result.details,\n              body: 'Delete was cancelled.',                \n              showCloseButton: true\n          });\n        }      \n      } \n\n      function upThisRadioRow(index){\n        var result = selectOptionManage.upthisOption($scope.radioRowCollection, index);\n        if (result.resultFlag === false) {\n          toaster.pop({\n            type: 'warning',\n            timeout:2000,\n            title: result.details,\n            body: 'Operation cancelled.',                \n            showCloseButton: true\n          });\n        }       \n      }\n\n      function downThisRadioRow(index){\n        var result = selectOptionManage.downthisOption($scope.radioRowCollection, index);\n        if (result.resultFlag === false) {\n          toaster.pop({\n            type: 'warning',\n            timeout:2000,\n            title: result.details,\n            body: 'Operation cancelled.',                \n            showCloseButton: true\n          });\n        }\n      }\n\n      function addNewOptionBasicSelect(){\n        var result = selectOptionManage.addNewOptionBasicSelect($scope.basicSelectRowCollection, $scope.newOptionBasicSelect.saisie);\n        if (result.resultFlag === false) {\n          toaster.pop({\n            type: 'warning',\n            timeout:2000,\n            title: result.details,\n            body: '\\''+ $scope.newOptionBasicSelect.saisie + '\\'' + ' cannot be added.',                \n            showCloseButton: true\n          });\n        }\n        //reset input\n        $scope.newOptionBasicSelect = {saisie: ''};\n      }  \n\n      function removeRow(index) {\n        var result = selectOptionManage.removeOption($scope.basicSelectRowCollection, index);\n        if (result.resultFlag === false) {\n          toaster.pop({\n            type: 'warning',\n            timeout:2000,\n            title: result.details,\n            body: 'Delete was cancelled.',                \n            showCloseButton: true\n          });\n        }      \n      }   \n\n      function upThisRow(index){\n        var result = selectOptionManage.upthisOption($scope.basicSelectRowCollection, index);\n        if (result.resultFlag === false) {\n          toaster.pop({\n            type: 'warning',\n            timeout:2000,\n            title: result.details,\n            body: 'Operation cancelled.',                \n            showCloseButton: true\n          });\n        }       \n      }\n\n      function downThisRow(index){\n        var result = selectOptionManage.downthisOption($scope.basicSelectRowCollection, index);\n        if (result.resultFlag === false) {\n          toaster.pop({\n            type: 'warning',\n            timeout:2000,\n            title: result.details,\n            body: 'Operation cancelled.',                \n            showCloseButton: true\n          });\n        }\n      }\n\n      function showGroupListToChoose(){\n        $scope.groupSelectGroupClick.showList = !$scope.groupSelectGroupClick.showList;\n      }\n\n      function addNewGroupToGroupedSelect(){\n        if ($scope.newGroupGroupedSelect.saisie !== '') {\n          for (var i = $scope.GroupedSelectGroups.list.length - 1; i >= 0; i--) {\n            if ($scope.GroupedSelectGroups.list[i] === $scope.newGroupGroupedSelect.saisie) {\n              toaster.pop({\n                type: 'warning',\n                timeout:2000,\n                title: 'Group already exists',\n                body: 'No group added.',                \n                showCloseButton: true\n              });          \n            }\n          }\n          $scope.GroupedSelectGroups.list.push($scope.newGroupGroupedSelect.saisie);\n        }else{\n          toaster.pop({\n            type: 'warning',\n            timeout:2000,\n            title: 'Not a valid group to add',\n            body: 'No group added.',                \n            showCloseButton: true\n          });\n        }\n        $scope.newGroupGroupedSelect.saisie = '';\n      } \n\n      function addNewOptionGroupedSelect(){\n        var result = selectOptionManage.addNewOptionGroupedSelect($scope.groupedSelectRowCollection, $scope.newOptionGroupedSelect.saisie, '');\n        if (result.resultFlag === false) {\n          toaster.pop({\n            type: 'warning',\n            timeout:2000,\n            title: result.details,\n            body: '\\''+ $scope.newOptionGroupedSelect.saisie + '\\'' + ' cannot be added.',                \n            showCloseButton: true\n          });\n        }\n        //bind nya : dont bind here $apply is not done fast enough\n        //bindGroupedSelectToNya();\n        //reset input\n        $scope.newOptionGroupedSelect = {saisie: ''};\n      }\n\n      function removeGroupedSelectRow(index) {\n        var result = selectOptionManage.removeOption($scope.groupedSelectRowCollection, index);\n        if (result.resultFlag === false) {\n          toaster.pop({\n            type: 'warning',\n            timeout:2000,\n            title: result.details,\n            body: 'Delete was cancelled.',                \n            showCloseButton: true\n          });\n        }   \n      }        \n\n      function upThisGroupedSelectRow(index){\n        var result = selectOptionManage.upthisOption($scope.groupedSelectRowCollection, index);\n        if (result.resultFlag === false) {\n          toaster.pop({\n            type: 'warning',\n            timeout:2000,\n            title: result.details,\n            body: 'Operation cancelled.',                \n            showCloseButton: true\n          });\n        } \n      }\n\n      function downThisGroupedSelectRow(index){\n        var result = selectOptionManage.downthisOption($scope.groupedSelectRowCollection, index);\n        if (result.resultFlag === false) {\n          toaster.pop({\n            type: 'warning',\n            timeout:2000,\n            title: result.details,\n            body: 'Operation cancelled.',                \n            showCloseButton: true\n          });\n        } \n      }\n\n      function today() {\n        $scope.demodt.dt = new Date();\n      } \n\n      function clear() {\n        $scope.demodt.dt = null;\n      } \n\n      function openfct($event){\n        $event.preventDefault();\n        $event.stopPropagation();\n        $scope.demodt.opened = true;\n      }\n\n      function dateOptionsInit(){\n        return  {\n          formatYear: 'yy',\n          startingDay: 1,\n          showWeeks: true,\n          initDate: null\n        };\n      }\n\n      function selectThisControl(controlName){\n        $scope.nyaSelect.selectedControl = 'none';\n        resetTemporyConfig();\n\n        for (var i = $scope.nyaSelect.controls.length - 1; i >= 0; i--) {\n          if ($scope.nyaSelect.controls[i].id === controlName) {\n            $scope.nyaSelect.selectedControl = $scope.nyaSelect.controls[i].id;         \n          }\n        }\n\n        if ($scope.nyaSelect.selectedControl === 'Date') {\n          initDatePicker();\n        }\n      }  \n\n      function okfct() {\n        if ($scope.nyaSelect.selectedControl === 'BasicSelect') {\n          bindBasicSelectToNya();\n        }\n        if ($scope.nyaSelect.selectedControl === 'GroupedSelect') {\n          bindGroupedSelectToNya();\n        }  \n        if ($scope.nyaSelect.selectedControl === 'Radio') {\n          bindRadioToNya();\n        }  \n        //save config to control\n        controllerModalProxy.applyConfigToSelectedControl($scope.nyaSelect);\n        //return current model to parent controller :\n        $modalInstance.close($scope.nyaSelect);\n      }\n\n      function cancelfct() {\n        $modalInstance.dismiss('cancel');\n      }    \n\n\n\n\n\n\n\n      function bindRadioFromNYA(){\n        if ($scope.nyaSelect.temporyConfig.formlyOptions.length > 0) {\n          for (var i = 0; i <= $scope.nyaSelect.temporyConfig.formlyOptions.length-1; i++){\n            var newOption = {\n                'option': $scope.nyaSelect.temporyConfig.formlyOptions[i].name,\n                'order': i,\n                'group': ''\n            };\n            $scope.radioRowCollection.rows.push(newOption);\n          }    \n        }\n      }\n\n      function bindRadioToNya(){\n        var resetNyASelectOptions = [];\n        $scope.nyaSelect.temporyConfig.formlyOptions = resetNyASelectOptions;\n        if ($scope.radioRowCollection.rows.length > 0) {\n          for (var i = 0; i <= $scope.radioRowCollection.rows.length - 1; i++){\n                var newOption = {\n                  'name': $scope.radioRowCollection.rows[i].option,\n                  'value': i,\n                  'group': ''\n                };\n                $scope.nyaSelect.temporyConfig.formlyOptions.push(newOption);   \n            }       \n       }\n      }\n\n      function bindBasicSelectFromNYA(){\n        if ($scope.nyaSelect.temporyConfig.formlyOptions.length > 0) {\n          for (var i = 0; i <= $scope.nyaSelect.temporyConfig.formlyOptions.length-1; i++){\n            var newOption = {\n              'option': $scope.nyaSelect.temporyConfig.formlyOptions[i].name,\n              'order': i,\n              'group': ''\n            };\n            $scope.basicSelectRowCollection.rows.push(newOption);\n          }    \n        }\n      }\n\n      function bindBasicSelectToNya(){\n        var resetNyASelectOptions = [];\n        $scope.nyaSelect.temporyConfig.formlyOptions = resetNyASelectOptions;\n        if ($scope.basicSelectRowCollection.rows.length > 0) {\n          for (var i = 0; i <= $scope.basicSelectRowCollection.rows.length - 1; i++){\n            var newOption = {\n              'name': $scope.basicSelectRowCollection.rows[i].option,\n              'value': i,\n              'group': ''\n            };\n            $scope.nyaSelect.temporyConfig.formlyOptions.push(newOption);\n          }      \n        }\n      } \n\n      function bindGroupedSelectFromNYA(){\n        if ($scope.nyaSelect.temporyConfig.formlyOptions.length > 0) {\n          for (var i = 0; i <= $scope.nyaSelect.temporyConfig.formlyOptions.length-1; i++){\n            var newOption = {\n              'option': $scope.nyaSelect.temporyConfig.formlyOptions[i].name,\n              'order': i,\n              'group': $scope.nyaSelect.temporyConfig.formlyOptions[i].group\n            };\n            $scope.groupedSelectRowCollection.rows.push(newOption);            \n          }\n          //grouplist : thx to lodash it is easy\n          var filteredgroup = _.uniq(_.pluck($scope.groupedSelectRowCollection.rows, 'group'));\n          angular.copy(filteredgroup, $scope.GroupedSelectGroups.list); \n        }\n      }\n\n      function bindGroupedSelectToNya(){\n        $scope.nyaSelect.temporyConfig.formlyOptions = [];\n        for (var i = 0; i <= $scope.groupedSelectRowCollection.rows.length - 1; i++){\n          var newOption = {\n            'name': $scope.groupedSelectRowCollection.rows[i].option,\n            'value': i,\n            'group': $scope.groupedSelectRowCollection.rows[i].group\n          };\n          $scope.nyaSelect.temporyConfig.formlyOptions.push(newOption);  \n        }\n      } \n\n      function initDatePicker(){\n        $scope.nyaSelect.temporyConfig.datepickerPopup = $scope.demodt.formats[0];  \n      }    \n\n      function initNyaSelectConformingSelectedControl(){\n        //place nya-select to selection if not none :\n        if (nyaSelect.selectedControl !== 'none') {\n          for (var i = $scope.nyaSelect.controls.length - 1; i >= 0; i--) {\n             if ($scope.nyaSelect.controls[i].id === nyaSelect.selectedControl) {\n                $scope.modelNyaSelect = nyaSelect.controls[i];\n             }\n          }\n          if ($scope.nyaSelect.selectedControl === 'BasicSelect') {\n            bindBasicSelectFromNYA();\n          }\n          if ($scope.nyaSelect.selectedControl === 'GroupedSelect') {\n            bindGroupedSelectFromNYA();\n          } \n          if ($scope.nyaSelect.selectedControl === 'Radio') {\n            bindRadioFromNYA();\n          }    \n        }\n      }\n\n      function resetTemporyConfig(){\n        $scope.nyaSelect.temporyConfig = {\n          formlyLabel: '', \n          formlyRequired: false, \n          formlyPlaceholder: '',\n          formlyDesciption: '',\n          formlyOptions: []\n        };   \n      }\n\n\n    }\n\n\n})(); \n/**\n *  ------------------------------------------------------\n *  easy form generator directive (Step way)\n *  ------------------------------------------------------\n * \n *  all easy form generator embeded in a directive\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n;(function(){\n\t'use strict';\n\t\n\tangular\n\t\t.module('ngwfApp.directives.edaStepWayEasyFormGenDirective', [])\n\t\t.directive('edaStepWayEasyFormGen', edaStepWayEasyFormGen);\n\t\t\n\t\tedaStepWayEasyFormGen.$inject = [\n      '$templateCache', \n      '$timeout', \n      'formFieldManage',\n      'controllerModalProxy'];\n\t\t\n\t\tfunction edaStepWayEasyFormGen(\n      $templateCache, \n      $timeout, \n      formFieldManage,\n      controllerModalProxy){\n      \n      /**\n       * directive's controller injection is here (before return directive) = to avoid minification errors\n       * sad but true... -> this reminds me something?!\n       */\n      edaStepWayEasyFormGenCtrl.$inject = [\n        \"$scope\", \n        '$templateCache',\n        'easyFormGenVersion',\n        '$filter',\n        '$anchorScroll',\n        'toaster', \n        '$timeout',\n        '$modal',\n        '$log', \n        'formFieldManage',\n        'WfFormsByIdServices',\n        'controllerModalProxy',\n      ];\n      \n      \n\t\t\tvar directive = {\n\t\t\t\trestrict : 'E',\n\t\t\t\tscope : {\n          edaEasyFormGeneratorModel : '=',\n          edaSaveFormEvent          : '&edaSaveFormEvent'\n        },\n\t\t\t\tcontroller : edaStepWayEasyFormGenCtrl,\n\t\t\t\tcontrollerAs : 'vm',\n\t\t\t\t//bindToController : true, //angular < 1.4, activating this property will break databindings\n\t\t\t\treplace : false,\n\t\t\t\ttemplateUrl : 'edaStepWayEasyFormGeneratorTemplate.html',\n\t\t\t\tlink : linkFct\n\t\t\t};\n\t\t\treturn directive;\n\t\t\t\n\t\t\tfunction linkFct(scope, element, attrs){\n              \n          //watch \"scope.easyFormGeneratorModel\"\n          scope.$watch(watchEdaEasyFormModelExpression, \n            watchEdaEasyFormModelHasChanged, \n            true);          \n         \n          //watch \"scope.returnSaveEvent\"\" = catch saving form event  \n\t\t\t\t\tscope.$watch(watchReturnSaveEventExpression, \n           watchReturnSaveEventhasChanged);\t\n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          function returnAttributeConfigurationLinesIfNotEmpty(){\n            var edaEasyFormGeneratorModelToReturn = (\n                angular.isArray(scope.edaEasyFormGeneratorModel.edaFieldsModel) ?  ( \n                    scope.edaEasyFormGeneratorModel.edaFieldsModel.length > 0 ? \n                      scope.edaEasyFormGeneratorModel.edaFieldsModel \n                    : emptyEdaFieldsModel()\n                    ) \n                : emptyEdaFieldsModel()\n            );\n             return edaEasyFormGeneratorModelToReturn;  \n          }\n          \n          /**\n           * empty fields model : to display at least an empty line\n           * otherwise would look like ugly empty line like it were a bug\n           */\n\t\t\t\t\tfunction emptyEdaFieldsModel(){\n\t\t\t\t\t\tvar emptyModel = [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"line\": 1,\n\t\t\t\t\t\t\t\t\"activeColumn\": 1,\n\t\t\t\t\t\t\t\t\"columns\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"numColumn\": 1,\n\t\t\t\t\t\t\t\t\t\t\"exist\": true,\n\t\t\t\t\t\t\t\t\t\t\"control\": {\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"none\",\n\t\t\t\t\t\t\t\t\t\t\t\"key\": \"none\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t];\n\t\t\t\t\t\treturn emptyModel;\n\t\t\t\t\t}\n          \n          function returnAttributeDataModelIfNotEmpty(){\n            var dataModelToReturn = (\n                angular.isArray(scope.edaEasyFormGeneratorModel.dataModel)   ?  ( \n                    scope.edaEasyFormGeneratorModel.dataModel.length > 0 ? \n                    scope.edaEasyFormGeneratorModel.dataModel \n                    : []\n                   ) \n                : []\n            );\n             return dataModelToReturn;  \n          }          \n          \n          function watchEdaEasyFormModelExpression(){\n            return scope.edaEasyFormGeneratorModel;\n          }\n          \n          function watchEdaEasyFormModelHasChanged(newValue, oldValue){             \n            loadExistingConfigurationModel();          \n          }          \n        \n        \n        \n          function watchReturnSaveEventExpression(){\n            return scope.returnSaveEvent;\n          }\n          \n          function watchReturnSaveEventhasChanged(newValue, oldValue){\n            if (newValue === true) {\n              var _easyFormGeneratorModel = {\n                formName          : scope.configuration.formName,\n                btnSubmitText     : scope.configuration.submitButtonText,\n                btnCancelText     : scope.configuration.cancelButtonText,\n                edaFieldsModel    : scope.configuration.lines,\n                //just as test\n                \n                edaFieldsModelStringified : angular.toJson(scope.configuration.lines),\n                \n                formlyFieldsModel : scope.vm.wfFormFieldsOnlyNeededProperties,\n                dataModel         : scope.vm.model\n              };\n              scope.edaSaveFormEvent({\n                edaEasyFormGeneratorModel      : _easyFormGeneratorModel\n              });\n              //back to false, waiting next save event\n              scope.returnSaveEvent = false;\n            }            \n\t\t\t   }          \n          \n          \n        function loadExistingConfigurationModel(){\n          \n          if(angular.isDefined(scope.edaEasyFormGeneratorModel)){\n            var configlines           = returnAttributeConfigurationLinesIfNotEmpty();           \n            scope.configurationLoaded = {};\n            \n            formFieldManage.bindConfigurationLines(scope.configurationLoaded,configlines);\n            /**\n             * rebind special control properties :\n             * \n             * formly expression properties\n             * Validators\n             * Validation\n             */\n            controllerModalProxy.refreshControlFormlyExpressionProperties(scope.configurationLoaded);\n            controllerModalProxy.refreshControlFormlyValidators(scope.configurationLoaded);\n            controllerModalProxy.refreshControlFormlyValidation(scope.configurationLoaded);\n            \n            //apply configuration model\n            scope.configuration = angular.copy(scope.configurationLoaded);\n            \n            //apply formly model\n            formFieldManage.applyConfigurationToformlyModel(scope.configurationLoaded, scope.vm.wfFormFields, scope.vm.model);          \n            \n            scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy(scope.vm.wfFormFields);\n            scope.vm.model                            = returnAttributeDataModelIfNotEmpty;  \n            scope.configuration.formName              = angular.isString(scope.edaEasyFormGeneratorModel.formName) ? scope.edaEasyFormGeneratorModel.formName : '';\n            scope.configuration.submitButtonText      = angular.isString(scope.edaEasyFormGeneratorModel.btnSubmitText) ? scope.edaEasyFormGeneratorModel.btnSubmitText : 'Submit'; \n            scope.configuration.cancelButtonText      = angular.isString(scope.edaEasyFormGeneratorModel.btnCancelText) ? scope.edaEasyFormGeneratorModel.btnCancelText : 'Cancel';\n          }  \n        } \n         \n         \n          \n          \n          \n          \n          \n          \n                   \n\t\t\t}\n\t\t\t    \n    function edaStepWayEasyFormGenCtrl(\n                                    $scope, \n                                    $templateCache,\n                                    easyFormGenVersion,\n                                    $filter,\n                                    $anchorScroll,\n                                    toaster,\n                                    $timeout, \n                                    $modal,\n                                    $log, \n                                    formFieldManage, \n                                    WfFormsByIdServices, \n                                    controllerModalProxy\n                                    ){\n      /*jshint validthis: true */\n      $scope.vm                       = this;\n      $scope.vm.model                 = {};\n      $scope.vm.wfFormFields          = [];\n      $scope.vm.wfFormFieldsOnlyNeededProperties = []; \n      $scope.vm.onSubmit              = onSubmit;\n\n      $scope.easyFormGeneratorVERSION = easyFormGenVersion;\n      $scope.debug                    = initDebugModel();\n      $scope.tab                      = initTabModel();\n\n      //configuration model (contains array of lines which contains array of columns)\n      $scope.configuration            = {};    \n                               \n      $scope.numberOfColumns          = 1;\n      $scope.MaxNumberOfColumns       = 3;\n      $scope.MinNumberOfColumns       = 1;\n      $scope.columnTemplate           = initColumnTemplate();\n\n      $scope.lineTemplate             = initLineTemplate();\n      $scope.resetToZeroModel         = resetToZeroModel;\n      $scope.countConfigurationModelLines = countConfigurationModelLines;\n      $scope.setActiveLineNumber      = setActiveLineNumber;\n      $scope.upThisLine               = upThisLine;\n      $scope.downThisLine             = downThisLine;\n      $scope.addNewline               = addNewline;\n      $scope.removeThisLine           = removeThisLine;\n\n      $scope.increaseNumberOfColumns  = increaseNumberOfColumns;\n      $scope.decreaseNumberOfColumns  = decreaseNumberOfColumns;\n\n      $scope.resetStepCounter         = resetStepCounter;\n      $scope.nextConfigStep           = nextConfigStep;\n\n      $scope.previousConfigStep       = previousConfigStep;\n      $scope.stepReachable            = stepReachable;\n\n      $scope.toggleAnimation          = toggleAnimation;\n\n      $scope.nyaSelect                = {};\n      \n      $scope.animationsEnabled        = true;\n      //call modal to edit selected control\n      $scope.showModalAddCtrlToColumn = showModalAddCtrlToColumn;\n\n      \n      //disabled here : to load list of saved formly fields from database\n      $scope.loadExistingFormsList    = loadExistingFormsAsList();\n      $scope.formlyList               = {};\n      $scope.previewLoadedForm        = { fieldsModel:[] };\n      $scope.configurationLoaded      = {};   \n      $scope.previewExistingform      = previewExistingform;\n      $scope.saveThisForm             = saveThisForm; //should save to database (commented here)\n      $scope.returnSaveEvent          = false;\n\n\n   \n\n\n      \n\n\n\n      //load formlyList on init\n      loadExistingFormsAsList();\n\n      formFieldManage.initConfigurationEditFromScratch($scope.configuration);\n\n      controllerModalProxy.initNyaSelect($scope.nyaSelect);\n\n\n\n      function initDebugModel(){\n        return {\n         showDebug : false,\n         configurationModelNumberofLines : 1        \n        };\n      }\n\n      function initTabModel(){\n        return {\n          editTab : {active : true},\n          previewTab : {active : false}\n        };\n      }\n\n      function previewExistingform(formlyform){\n       var configlines = JSON.parse(formlyform.formlyField);\n       //here to replace with $scope.configuration : initialise configuration with lines \n       $scope.configurationLoaded = {};\n       formFieldManage.bindConfigurationLines($scope.configurationLoaded,configlines);\n       formFieldManage.applyConfigurationToformlyModel($scope.configurationLoaded, $scope.previewLoadedForm.fieldsModel, $scope.vm.model);\n       $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n       $scope.previewLoadedForm.cancelButtonText = formlyform.cancelButtonText;\n       $scope.previewLoadedForm.submitButtonText = formlyform.submitButtonText;\n      }    \n\n      function onSubmit() {\n        toaster.pop({\n            type: 'info',\n            timeout:2000,\n            title: 'should save data model if it were not a static example',\n            body: 'data :' + $filter('json')($scope.vm.model, 4),                \n            showCloseButton: true\n        }); \n      }\n      \n      function initColumnTemplate(){\n        return  {\n          numColumn: -1,\n          exist:true, \n          control: {\n            type:'none',\n            key: 'none',\n            subtype: 'none',\n            // templateOptions: {\n            //                     label: 'none',\n            //                     placeholder: 'none',\n            //                     required: false,\n            //                     description: 'Descriptive text'\n            //                   }\n          }                                         \n        };\n      }\n\n      function initLineTemplate(){\n        return {\n          line:-1, \n          activeColumn : 1,\n          columns: [\n            {  \n              numColumn: 1,\n              exist:true, \n              control: {\n                type:'none',\n                key: 'none',\n                // templateOptions: {\n                //                     label: 'none',\n                //                     placeholder: 'none',\n                //                     required: false,\n                //                     description: 'Descriptive text'\n                //                   }\n                }\n              }\n            ]\n        };\n      }\n\n      function resetToZeroModel(){\n        $scope.configuration.activeLine = 1;\n        if ($scope.configuration.lines.length > 1) {\n          $scope.configuration.lines.splice(1, $scope.configuration.lines.length - 2);\n        }\n        return $scope.countConfigurationModelLines();\n      }\n\n      function countConfigurationModelLines(){\n        //information in debug model\n        $scope.debug.configurationModelNumberofLines = $scope.configuration.lines.length;\n        return $scope.configuration.lines.length;\n      }      \n\n      function setActiveLineNumber(lineNumber){\n        if (lineNumber <= $scope.countConfigurationModelLines()) {\n          $scope.configuration.activeLine = lineNumber;\n        }\n      } \n\n      function upThisLine(indexLine){    \n        if (indexLine > -1) {\n          if ($scope.configuration.lines[indexLine - 1]) {\n            var currentLineObj = $scope.configuration.lines[indexLine];\n            $scope.configuration.lines.splice(indexLine , 1);\n            $scope.configuration.lines.splice((indexLine - 1), 0, currentLineObj);    \n            //manage selected aciveLine\n            $scope.configuration.activeLine = 1;\n          }\n        }\n          //re-render formfield \n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);     \n      }  \n\n      function downThisLine(indexLine){\n        if (indexLine > -1) {\n          if ($scope.configuration.lines[indexLine + 1]) {\n            var currentLineObj = $scope.configuration.lines[indexLine];\n            $scope.configuration.lines.splice(indexLine , 1);\n            $scope.configuration.lines.splice((indexLine + 1), 0, currentLineObj);  \n            //manage selected aciveLine\n            $scope.configuration.activeLine = 1;\n          }\n        }     \n        //re-render formfield \n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model); \n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);   \n      } \n\n      function addNewline(){\n        $scope.configuration.lines.push(\n          {\n            line:-1, \n            activeColumn : 1,\n            columns: [\n                      {  \n                        numColumn: 1,\n                        exist:true, \n                        control: {\n                                    type:'none',\n                                    key: 'none',\n                                    // templateOptions: {\n                                    //                     label: 'none',\n                                    //                     placeholder: 'none',\n                                    //                     required: false,\n                                    //                     description: 'Descriptive text'\n                                    //                   }\n                                  }\n                        }\n                      ]\n            }\n        );\n          //re-render formfield \n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields); \n      }\n\n      function removeThisLine(index){\n        if (index > -1) {\n          if ($scope.configuration.lines.length > 1) {\n              //manage selected aciveLine\n              if ($scope.configuration.activeLine === index + 1) {\n                $scope.configuration.activeLine = 1;\n              }\n              $scope.configuration.lines.splice(index, 1);\n          }else{\n            $timeout(function(){\n                toaster.pop({\n                        type: 'warning',\n                        title: 'Last line' ,\n                        body: 'Can\\'t delete the last line',                \n                        showCloseButton: true\n                  });\n            }, 100); \n          }\n        //re-render formfield \n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n        }\n      }\n\n      function increaseNumberOfColumns(){\n        if ($scope\n              .configuration\n              .lines[$scope.configuration.activeLine -1]\n              .columns.length < $scope.MaxNumberOfColumns) {\n\n          var newNumberOfColumns = $scope\n                                      .configuration\n                                      .lines[$scope.configuration.activeLine -1]\n                                      .columns\n                                      .push(\n                                            {\n                                              numColumn: -1,\n                                              exist: true, \n                                              control: {\n                                                          type:'none',\n                                                          key: 'none'\n                                                          // templateOptions: {\n                                                          //                     label: 'none',\n                                                          //                     placeholder: 'none',\n                                                          //                     required: false,\n                                                          //                     description: 'Descriptive text'\n                                                          //                   }\n                                                        }                                         \n                                             }                                        \n                                            );\n          $scope\n              .configuration\n              .lines[$scope.configuration.activeLine -1]\n              .columns[newNumberOfColumns - 1]\n              .numColumn = newNumberOfColumns; \n          }\n           //re-render formfield \n          formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model); \n          $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n      }  \n\n      function decreaseNumberOfColumns(){\n        if ($scope\n              .configuration\n              .lines[$scope.configuration.activeLine -1]\n              .columns.length > 1) {\n          $scope.configuration\n            .lines[$scope.configuration.activeLine -1]\n            .columns\n            .splice($scope.configuration.lines[$scope.configuration.activeLine -1].columns.length -1, 1);\n        }\n        //re-render formfield \n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);  \n\n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);  \n      }  \n\n      function resetStepCounter(){\n        $scope.configuration.configStepCounter = 0;\n      } \n\n      function nextConfigStep(){\n        var configStepCounterMAX = $scope.configuration.listConfigStep.length -1;\n        if ($scope.configuration.configStepCounter !== configStepCounterMAX) {\n            $scope.configuration.configStepCounter ++;\n        }    \n        setTrueThisStepIndicator($scope.configuration.configStepCounter);\n      }   \n\n      function previousConfigStep(){\n        if ($scope.configuration.configStepCounter !== 0) {\n          $scope.configuration.configStepCounter --;\n        }\n        setTrueThisStepIndicator($scope.configuration.configStepCounter);\n      }\n\n      function stepReachable(indexStep){\n        if (indexStep < $scope.configuration.configStepCounter) {\n          return 'disabled';\n        }else{\n          return 'enabled';\n        }\n      } \n\n      function showModalAddCtrlToColumn(size, indexLine, numcolumn) {\n\n        var modalInstance = $modal.open({\n                                          animation: $scope.animationsEnabled,\n                                          templateUrl: 'editModalTemplate.html',  \n                                          controller: 'ngwfWfEditMODALController',\n                                          size: 'lg',\n                                          resolve: {\n                                            nyaSelect: function () {\n                                              return controllerModalProxy\n                                                        .getNyASelectFromSelectedLineColumn($scope.nyaSelect, $scope.configuration,indexLine, numcolumn);\n                                            }\n                                          }\n        });\n\n        modalInstance.result.then(function (modalAddCtrlModel) {\n            controllerModalProxy.bindConfigurationModelFromModalReturn(indexLine, numcolumn, modalAddCtrlModel, $scope.configuration);\n            formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n            \n            $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n\n        }, function () {\n          //$log.info('Modal dismissed at: ' + new Date());\n        });\n      } \n\n      function toggleAnimation() {\n        $scope.animationsEnabled = !$scope.animationsEnabled;\n      }            \n\n\n\n\n      /**\n       * loadExistingFormsAsList :\n       *  - LOAD from database (list of forms)\n       */\n      function loadExistingFormsAsList(){\n        // $scope.formlyList = WfFormsByIdServices.query();\n      }\n      /**\n       * saveThisForm \n       * - SAVE to database (current stringified configuration model === current form)\n       */\n      function saveThisForm(){\n        if (typeof $scope.configuration.formName === 'undefined') {\n        toaster.pop({\n                type: 'warning',\n                timeout:2000,\n                title: 'Form name is undefined',\n                body: 'Form has not been saved.',                \n                showCloseButton: true\n          });\n          return false;\n        }\n        if ($scope.configuration.formName === '') {\n        toaster.pop({\n                type: 'warning',\n                timeout:2000,\n                title: 'Form name is required',\n                body: 'Form has not been saved.',                \n                showCloseButton: true\n          });\n          return false;\n        }\n        toaster.pop({\n                type: 'wait',\n                timeout:10000,\n                title: 'Form is being saved',\n                body: 'Wait.',                \n                showCloseButton: true\n        });\n\n        \n        var WfForm = new WfFormsByIdServices();\n        var formSavingIsOK = true;\n\n        WfForm.formName = $scope.configuration.formName;\n        WfForm.submitButtonText = $scope.configuration.submitButtonText;\n        WfForm.cancelButtonText = $scope.configuration.cancelButtonText;\n\n        WfForm.formlyField = JSON.stringify($scope.configuration.lines); \n\n        //------------------------------------------------------------------------------------------------------\n        // UNCOMMENT TO MAKE IT SAVE TO DB \n        // -> (assuming your service in WfFormsByIdServices is well configurered for your RESTfull server)\n        //------------------------------------------------------------------------------------------------------\n        // save to database here \n        // WfForm.$save()\n        //             .then(function(res)  {    formSavingIsOK = true;    })\n        //             .catch(function(req) { \n        //                                   toaster.clear();\n        //                                   formSavingIsOK = false; \n        //                                   toaster.pop({\n        //                                           type: 'error',\n        //                                           timeout:2000,\n        //                                           title: 'Error while saving form',\n        //                                           body: 'Sorry, an Error occured while saving form.',                \n        //                                           showCloseButton: true\n        //                                     });\n        //             })\n        //             .finally(function()  { \n        //                                   if (formSavingIsOK === true) {\n        //                                     toaster.clear();  \n        //                                     toaster.pop({\n        //                                             type: 'success',\n        //                                             timeout:2000,\n        //                                             title: 'Form is successfully saved',\n        //                                             body: '',                \n        //                                             showCloseButton: true\n        //                                       });                                         \n        //                                   }\n        //              });\n\n        toaster.clear();  \n        \n        // toaster.pop({\n        //         type: 'info',\n        //         timeout:2000,\n        //         title: 'Form would be saved if it were not a static example',\n        //         body: '',                \n        //         showCloseButton: true\n        //   }); \n        $scope.returnSaveEvent = true;\n        return true;\n      } \n\n\n\n\n      function resetAllIndicators(){\n        for (var i = $scope.configuration.stepIndicators.length - 1; i >= 0; i--) {\n          $scope.configuration.stepIndicators[i] = false;\n        }\n      }\n      \n      function setTrueThisStepIndicator(indexIndicator){\n          resetAllIndicators();\n          $scope.configuration.stepIndicators[indexIndicator] = true;    \n      }\n\n    }\t\t\t\n\t\t\t\n\t\t}\n\t\t\n})();\n\n/**\n *  ------------------------------------------------------\n *  directives container\n *  ------------------------------------------------------\n *\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n;(function () {\n\t'use strict';\n\t\n\tangular\n\t\t.module('ngwfApp.directives', [\t\n\t\t\t'ngwfApp.directives.ngwfStRatioDirective',\n\t\t\t'ngwfApp.directives.edaStepWayEasyFormGenDirective' \n\t\t\t]);\n\n})(); \n\n\n\n/**\n *  ------------------------------------------------------\n *  simple directive to set width style attribute in %\n *  ------------------------------------------------------\n *\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n\n;(function () {\n\t\n\t'use strict';\n\n\tangular\n\t\t.module('ngwfApp.directives.ngwfStRatioDirective', [])\n\t\t.directive('stRatio', stRatio);\n\n\t\tstRatio.$inject = [];\n\t\tfunction stRatio(){\n\n\t\t\tvar directive = {\n\t\t\t\tlink : linkfct\n\t\t\t};\n\n\t\t\treturn directive;\n\n\t\t\tfunction linkfct(scope, element, attr){\n\t\t\t\tvar ratio=+(attr.stRatio);\n\t\t\t  element.css('width',ratio+'%');\n\t\t\t}\n\n\t\t}\n\n})(); \n\n\n\n\n/**\n *  ------------------------------------------------------\n *  service : controllerModalProxy\n *  ------------------------------------------------------\n *\n *  service dedicated to - edit control - (controller modal proxy)\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n(function () {\n\t'use strict';\n\n\n\tangular\n\t\t.module('ngwfApp.services.ngwfEditCtrlControllerModalProxy', [])\n\t\t.factory('controllerModalProxy', controllerModalProxy);\n\n\t\tcontrollerModalProxy.$inject = [];\n\t\tfunction controllerModalProxy(){\n\t\t\t\n\t\t\tvar service = {\n\t\t\t\tinitNyaSelect \t\t\t\t\t\t\t\t\t\t\t\t\t: initNyaSelect,\n\t\t\t\tgetNyASelectFromSelectedLineColumn \t\t\t: getNyASelectFromSelectedLineColumn,\n\t\t\t\tbindConfigurationModelFromModalReturn \t: bindConfigurationModelFromModalReturn,\n\t\t\t\tapplyConfigToSelectedControl \t\t\t\t\t\t: applyConfigToSelectedControl,\n\t\t\t\tresetTemporyConfig \t\t\t\t\t\t\t\t\t\t\t: resetTemporyConfig,\n\t\t\t\tgetControlsDefinition \t\t\t\t\t\t\t\t\t: getControlsDefinition,\n\t\t\t\trefreshControlFormlyExpressionProperties: refreshControlFormlyExpressionProperties,\n\t\t\t\trefreshControlFormlyValidators\t\t\t\t\t: refreshControlFormlyValidators,\n\t\t\t\trefreshControlFormlyValidation\t\t\t\t\t: refreshControlFormlyValidation,\n\t\t\t};\n\t\t\t\n\t\t\treturn service;\n\n\n\t\t\tfunction initNyaSelect(nyaSelectObj){\n\t\t\t\treturn resetNyaSelect(nyaSelectObj);\n\t    }\n\n\t\t\t/**\n\t\t\t * get all controls definition (nyaSelectObj)\n\t\t\t * \n\t\t\t * needed to bind these properties :\n\t\t\t * \n\t\t\t * formlyExpressionProperties: {}, \n\t\t\t * formlyValidators: {},\n\t\t\t * formlyValidation                       \t\t\n\t\t\t */\n\t\t\tfunction getControlsDefinition(){\n\t\t\t\tvar controls = {};\n\t\t\t\tresetNyaSelect(controls);\t\n\t\t\t\treturn controls;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * loading forms will not be able to retrieve formlyExpressionProperties\n\t\t\t * -> here does the job\n\t\t\t */\n\t\t\tfunction refreshControlFormlyExpressionProperties(configurationModel){\n\t\t\t\t\n\t\t\t\tif (angular.isObject(configurationModel)) {\n\t\t\t\t\t//iterates lines\n\t\t\t\t\tangular.forEach(configurationModel.lines, function(line, indexLine){\n\t\t\t\t\t\tangular.forEach(line.columns, function(column, controlIndex){\n\t\t\t\t\t\t\tvar _controlsDefinition = getControlsDefinition();\n\t\t\t\t\t\t\tangular.forEach(_controlsDefinition.controls, function(aControl, aControlIndex){\n\t\t\t\t\t\t\t\tif (column.control.type === aControl.formlyType &&\n\t\t\t\t\t\t\t\t\t\tcolumn.control.subtype === aControl.formlySubtype) {\n\t\t\t\t\t\t\t\t\t\t//----> update control formlyExpressionProperties property\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tcolumn.control.formlyExpressionProperties = aControl.formlyExpressionProperties;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\t\t\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t/**\n\t\t\t * loading forms will not be able to retrieve formlyValidators\n\t\t\t * -> here does the job\n\t\t\t */\t\t\t\n\t\t\tfunction refreshControlFormlyValidators(configurationModel){\n\t\t\t\t\n\t\t\t\tif (angular.isObject(configurationModel)) {\n\t\t\t\t\t//iterates lines\n\t\t\t\t\tangular.forEach(configurationModel.lines, function(line, indexLine){\n\t\t\t\t\t\tangular.forEach(line.columns, function(column, controlIndex){\n\t\t\t\t\t\t\tvar _controlsDefinition = getControlsDefinition();\n\t\t\t\t\t\t\tangular.forEach(_controlsDefinition.controls, function(aControl, aControlIndex){\n\t\t\t\t\t\t\t\tif (column.control.type === aControl.formlyType &&\n\t\t\t\t\t\t\t\t\t\tcolumn.control.subtype === aControl.formlySubtype) {\n\t\t\t\t\t\t\t\t\t\t//----> update control formlyValidators property\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tcolumn.control.formlyValidators = aControl.formlyValidators;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\t\t\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\t\t\t/**\n\t\t\t * loading forms will not be able to retrieve formlyValidation\n\t\t\t * -> here does the job\n\t\t\t */\t\t\t\n\t\t\tfunction refreshControlFormlyValidation(configurationModel){\n\t\t\t\n\t\t\t\tif (angular.isObject(configurationModel)) {\n\t\t\t\t\t//iterates lines\n\t\t\t\t\tangular.forEach(configurationModel.lines, function(line, indexLine){\n\t\t\t\t\t\tangular.forEach(line.columns, function(column, controlIndex){\n\t\t\t\t\t\t\tvar _controlsDefinition = getControlsDefinition();\n\t\t\t\t\t\t\tangular.forEach(_controlsDefinition.controls, function(aControl, aControlIndex){\n\t\t\t\t\t\t\t\tif (column.control.type === aControl.formlyType &&\n\t\t\t\t\t\t\t\t\t\tcolumn.control.subtype === aControl.formlySubtype) {\n\t\t\t\t\t\t\t\t\t\t//----> update control formlyValidation property\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tcolumn.control.formlyValidation = aControl.formlyValidation;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\t\t\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\n\t\t\t\n\t    function getNyASelectFromSelectedLineColumn(nyaSelectObj, configurationObj, indexLine, numcolumn){\n\t      resetNyaSelect(nyaSelectObj);\n\t      /**\n\t       * data send to modal controller                                           \n\t       */\n\t      \n\t      if (typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions != 'undefined') {\n\n\t        nyaSelectObj.temporyConfig.selectedControl \t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.selectedControl \t\t\t\t\t\t!= 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.selectedControl : 'none';\n\t        nyaSelectObj.temporyConfig.formlyLabel \t\t\t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.label \t\t\t!= 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.label : '';\n\t        nyaSelectObj.temporyConfig.formlyRequired \t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.required \t\t!= 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.required : '';\n\t        nyaSelectObj.temporyConfig.formlyDesciption \t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.description != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.description : '';\n\t        nyaSelectObj.temporyConfig.formlyPlaceholder \t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.placeholder != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.placeholder : '';\n\t        nyaSelectObj.temporyConfig.formlyOptions \t\t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.options \t\t!= 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.options : '';\n\t\t\t\t\t\n\t\t\t\t\tnyaSelectObj.temporyConfig.formlyExpressionProperties = typeof configurationObj.lines[indexLine].columns[numcolumn].control.formlyExpressionProperties \t!= 'undefined' ? angular.copy(configurationObj.lines[indexLine].columns[numcolumn].control.formlyExpressionProperties) : {};\n\t\t\t\t\tnyaSelectObj.temporyConfig.formlyValidators \t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.formlyValidators \t\t\t\t\t\t\t\t\t\t!= 'undefined' ? angular.copy(configurationObj.lines[indexLine].columns[numcolumn].control.formlyValidators) : {};\n\t\t\t\t\tnyaSelectObj.temporyConfig.formlyValidation \t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.formlyValidation \t\t\t\t\t\t\t\t\t\t!= 'undefined' ? angular.copy(configurationObj.lines[indexLine].columns[numcolumn].control.formlyValidation) : {};\n\t\t\t\t\t\n\t\t\t\t\t/**\n\t\t\t\t\t * particular case : datepicker \n\t\t\t\t\t */\n\t        if (nyaSelectObj.temporyConfig.selectedControl === 'Date') {\n\t        \tnyaSelectObj.temporyConfig.datepickerPopup \t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.datepickerPopup != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.datepickerPopup : '';\n\t        }\n\t      }\n\t      return nyaSelectObj;\t    \t\n\t    }\n\n\t    function bindConfigurationModelFromModalReturn(indexLine, numcolumn, modalAddCtrlModel, configurationObj){\n\t\t\t\t\t      \n\t      var extractedProps = returnControlFromAddCtrlModalModel(modalAddCtrlModel);\n\t      configurationObj.lines[indexLine].columns[numcolumn].control.selectedControl \t\t= extractedProps.selectedControl;\n\t      configurationObj.lines[indexLine].columns[numcolumn].control.type \t\t\t\t\t\t\t= extractedProps.formlyType;\n\t      configurationObj.lines[indexLine].columns[numcolumn].control.subtype \t\t\t\t\t\t= extractedProps.formlySubtype;\n\t      //reset templateOptions\n\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions \t\t= {\n\t                                                                                            label: '',\n\t                                                                                            required: false,\n\t                                                                                            description: '',\n\t                                                                                            placeholder: '',\n\t                                                                                            options: []\n\t                                                                                          };\n\t       //then bind templateOptions                                                                                   \n\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.label \t\t\t = extractedProps.formlyLabel;\n\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.required \t = extractedProps.formlyRequired;\n\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.description = extractedProps.formlyDesciption;\n\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.placeholder = extractedProps.formlyPlaceholder;\n\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.options \t\t = extractedProps.formlyOptions;\n\n\t      configurationObj.lines[indexLine].columns[numcolumn].control.formlyExpressionProperties = angular.copy(extractedProps.formlyExpressionProperties);\n\t      configurationObj.lines[indexLine].columns[numcolumn].control.formlyValidators \t\t\t\t\t= angular.copy(extractedProps.formlyValidators);\n\t      configurationObj.lines[indexLine].columns[numcolumn].control.formlyValidation \t\t\t\t\t= angular.copy(extractedProps.formlyValidation);\n\n\t\t  \t//////////////////////////////////////////\n\t      // add additionnal particular properties\n\t      //////////////////////////////////////////\n\t      //-> datepicker : datepickerPopup\n\t      if (configurationObj.lines[indexLine].columns[numcolumn].control.type === 'datepicker') {\n\t       \tconfigurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.datepickerPopup = extractedProps.datepickerPopup;\n\t      }\t\n\t      /**\n\t       * unique key (set only first time) in this model is formly control type + Date.now();  \n\t       */\n\t      var newKey = configurationObj.lines[indexLine].columns[numcolumn].control.type + '-' + Date.now();\n\n\t      if (validKeyUniqueness(newKey, configurationObj) === true){\n\t        configurationObj.lines[indexLine].columns[numcolumn].control.key = newKey;\n\t      }else{\n\t      \t/**\n\t      \t * 2nd attempt \n\t      \t */\n\t        newKey = configurationObj.lines[indexLine].columns[numcolumn].control.type + '-' + Date.now();\n\n\t        if (validKeyUniqueness(newKey, configurationObj) === true){\n\t          configurationObj.lines[indexLine].columns[numcolumn].control.key = newKey;\n\t        }else{\n\t        \t/**\n\t        \t * 2nd attempt \n\t        \t */\n\t          newKey = configurationObj.lines[indexLine].columns[numcolumn].control.type + '-' + Date.now();\n\t        }\n\t      }                                                                     \n\t    \tconfigurationObj.lines[indexLine].columns[numcolumn].control.edited = true;\n\t  \t}\n\n\t  \tfunction applyConfigToSelectedControl(nyaSelectObj){\n\t\t  \t/**\n\t\t  \t * used in modal (edit control) \n\t\t  \t */\n\t\t    for (var i = nyaSelectObj.controls.length - 1; i >= 0; i--) {\n\t\t      if (nyaSelectObj.controls[i].id === nyaSelectObj.selectedControl) {\n\n\t\t          nyaSelectObj.controls[i].formlyLabel \t\t\t\t\t\t\t\t= nyaSelectObj.temporyConfig.formlyLabel;\n\t\t          nyaSelectObj.controls[i].formlyRequired \t\t\t\t\t\t= nyaSelectObj.temporyConfig.formlyRequired;\n\t\t          nyaSelectObj.controls[i].formlyDesciption \t\t\t\t\t= nyaSelectObj.temporyConfig.formlyDesciption;\n\t\t          nyaSelectObj.controls[i].formlyPlaceholder \t\t\t\t\t= nyaSelectObj.temporyConfig.formlyPlaceholder;\n\t\t          nyaSelectObj.controls[i].formlyOptions \t\t\t\t\t\t\t= nyaSelectObj.temporyConfig.formlyOptions;\n\n\t\t          if (nyaSelectObj.controls[i].id ==='Date' ) {\n\t\t          \tnyaSelectObj.controls[i].datepickerPopup \t\t\t\t\t= nyaSelectObj.temporyConfig.datepickerPopup;\n\t\t          }\n\t\t        \n\t\t       }\n\t\t    }\n\t\t  }\n\n\t\t  function resetTemporyConfig(){\n\t\t    return {\n\t              formlyLabel: '', \n\t              formlyRequired: false, \n\t              formlyPlaceholder: '',\n\t              formlyDesciption: '',\n\t              formlyOptions: []\n\t            }; \t\t  \t\n\t\t  }\n\n\n\n\t    /**\n\t     * init object : return true (if not true, you may have problem^^)\n\t     */\n\t\t  function resetNyaSelect(nyaSelectObj){\n\t\t    var newNyaSelectObj = {\n\n\t\t                    controls : [\n\t\t                                {\n\t\t                                \tid: 'empty',  \n\t\t                                \tname: 'no control', \n\t\t                                \tsubtitle: 'no control', \n\t\t                                \tgroup: 'Blank', \n\t\t                                \tformlyType: 'blank', \n\t\t                                \tformlySubtype: '', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '', \n\t\t                                \tformlyOptions: [] , \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t                                \tformlyValidators: {}, \n\t\t                                \tformlyValidation: {} \n\t\t                                },\n\n\t\t                                {id: 'Header',  name: 'Header', subtitle: 'no control', group: 'Decoration', formlyType: 'header', formlySubtype: '', formlyLabel: '', formlyRequired: false, formlyDesciption: '', formlyOptions: [] , formlyExpressionProperties: {}, formlyValidators: {}, formlyValidation: {}},\n\t\t                                {id: 'Subtitle',  name: 'Subtitle', subtitle: 'no control', group: 'Decoration', formlyType: 'subTitle', formlySubtype: '', formlyLabel: '', formlyRequired: false, formlyDesciption: '', formlyOptions: [] , formlyExpressionProperties: {}, formlyValidators: {}, formlyValidation: {}},\n\n\t\t                                {\n\t\t                                \tid: 'TextInput',  \n\t\t                                \tname: 'Text input', \n\t\t                                \tsubtitle: 'Text input', \n\t\t                                \tgroup: 'input', \n\t\t                                \tformlyType: 'input', \n\t\t                                \tformlySubtype: '', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '', \n\t\t                                \tformlyOptions: [] , \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t                                \tformlyValidators: {}, \n\t\t                                \tformlyValidation: {\n\t\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this Text input field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                                },\n\n\t\t                                {\n\t\t                                \tid: 'Password',  \n\t\t                               \t \tname: 'Password', \n\t\t                                \tsubtitle: 'Password', \n\t\t                                \tgroup: 'input', \n\t\t                                \tformlyType: 'input', \n\t\t                                \tformlySubtype: 'password', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '', \n\t\t                                \tformlyOptions: [] , \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t                                \tformlyValidators: {}, \n\t                                \t\tformlyValidation: {\n\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this Password field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                              },\n\t\t                                \n\t\t                                {\n\t\t                                \tid \t\t\t\t\t\t\t\t\t\t\t\t\t: 'Email',  \n\t\t                                \tname \t\t\t\t\t\t\t\t\t\t\t\t: 'Email', \n\t\t                                \tsubtitle \t\t\t\t\t\t\t\t\t\t: 'Email', \n\t\t                                \tgroup \t\t\t\t\t\t\t\t\t\t\t: 'input', \n\t\t                                \tformlyType\t\t\t\t\t\t\t\t\t: 'input', \n\t\t                                \tformlySubtype \t\t\t\t\t\t\t: 'email', \n\t\t                                \tformlyLabel \t\t\t\t\t\t\t\t: '', \n\t\t                                \tformlyRequired \t\t\t\t\t\t\t: false, \n\t\t                                \tformlyDesciption \t\t\t\t\t\t: '', \n\t\t                                \tformlyOptions \t\t\t\t\t\t\t: [], \n\t\t                                \tformlyExpressionProperties \t: {}, \n\n\t\t                                \tformlyValidators \t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                                \t\temailShape : {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\texpression : function(viewValue, modelValue) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar value = modelValue || viewValue;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn /^[a-z]+[a-z0-9._]+@[a-z]+\\.[a-z.]{2,5}$/.test(value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\tmessage: '$viewValue + \\' is not a valid email\\''\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          \t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                        },\n\n\t\t                                \tformlyValidation: {\n\t\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this Email field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//check if validation is really dued to require validation \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//and not another validation like emailShape validator\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tif (scope.to.required) return returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                                },\n\t\t                                \n\t\t                                {\n\t\t                                \tid: 'Date',  \n\t\t                                \tname: 'Date', \n\t\t                                \tsubtitle: 'Date', \n\t\t                                \tgroup: 'input', \n\t\t                                \tformlyType: 'datepicker', \n\t\t                                \tformlySubtype: '', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '', \n\t\t                                \tformlyOptions: [], \n\t\t                                \tdatepickerPopup: 'dd-MMMM-yyyy', \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t                                \tformlyValidators: {}, \n\t\t                                \tformlyValidation: {\n\t\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this Date field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                                },\n\n\t\t                                {\n\t\t                                \tid: 'Texarea', \n\t\t                                \tname: 'Textarea', \n\t\t                                \tsubtitle: 'Textarea', \n\t\t                                \tgroup: 'Textarea', \n\t\t                                \tformlyType: 'textarea', \n\t\t                                \tformlySubtype: '', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '', \n\t\t                                \tformlyOptions: [], \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t                                \tformlyValidators: {}, \n\t\t                                \tformlyValidation: {\n\t\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this Textarea field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                                },\n\n\t\t                                {\n\t\t                                \tid: 'RichTextEditor', \n\t\t                                \tname: 'RichTextEditor', \n\t\t                                \tsubtitle: 'RichTextEditor', \n\t\t                                \tgroup: 'Textarea', \n\t\t                                \tformlyType: 'richEditor', \n\t\t                                \tformlySubtype: '', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '', \n\t\t                                \tformlyOptions: [], \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t   \n\t\t                                \tformlyValidators \t\t\t\t\t\t: {},\n\n\t\t                                \tformlyValidation: {\n\t\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this RichTextEditor field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                                },\n\n\t\t                                {\n\t\t                                \tid: 'Radio', \n\t\t                                \tname: 'Radio', \n\t\t                                \tsubtitle: 'Radio', \n\t\t                                \toptions: [], \n\t\t                                \tgroup: 'Radio', \n\t\t                                \tformlyType: 'radio', \n\t\t                                \tformlySubtype: '', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '' , \n\t\t                                \tformlyOptions: [], \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t                                \tformlyValidators: {}, \n\t                                \t\tformlyValidation: {\n\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this Password field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                                },\n\n\t\t                                {\n\t\t                                \tid: 'Checkbox', \n\t\t                                \tname: 'Checkbox', \n\t\t                                \tsubtitle: 'Checkbox', \n\t\t                                \tgroup: 'Checkbox', \n\t\t                                \tformlyType: 'checkbox', \n\t\t                                \tformlySubtype: '', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '', \n\t\t                                \tformlyOptions: [], \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t                                \tformlyValidators: {}, \n\t                                \t\tformlyValidation: {\n\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this Checkbox field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                                },\n\n\t\t                                {\n\t\t                                \tid: 'BasicSelect', \n\t\t                                \tname: 'Basic select', \n\t\t                                \tsubtitle: 'Basic select',\n\t\t                                \toptions: [], \n\t\t                                \tgroup: 'Select', \n\t\t                                \tformlyType: 'basicSelect', \n\t\t                                \tformlySubtype: '', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '', \n\t\t                                \tformlyOptions: [], \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t                                \tformlyValidators: {}, \n\t                                \t\tformlyValidation: {\n\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this Basic select field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                                },\n\n\t\t                                {\n\t\t                                \tid: 'GroupedSelect', \n\t\t                                \tname: 'Grouped Select', \n\t\t                                \tsubtitle: 'Grouped Select',\n\t\t                                \toptions: [], \n\t\t                                \tgroup: 'Select', \n\t\t                                \tformlyType: 'groupedSelect', \n\t\t                                \tformlySubtype: '', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '',\n\t\t                                \tformlyOptions: [], \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t                                \tformlyValidators: {}, \n\t                                \t\tformlyValidation: {\n\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this Grouped Select field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                                }\n\t\t                              ],\n\n\t\t                      selectedControl : 'none' ,\n\t\t                      temporyConfig : {\n\t\t                                        selectedControl: 'none',\n\t\t                                        formlyLabel: 'label', \n\t\t                                        formlyRequired: false, \n\t\t                                        formlyDesciption: '',\n\t\t                                        formlyPlaceholder: '',\n\t\t                                        formlyOptions : [],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          //expressions/validation fields\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          formlyExpressionProperties: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          formlyValidators: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          formlyValidation: {}                                        \n\t\t                                      } \n\n\t\t    };\n\n\t\t    //reset\n\t\t  \tangular.copy(newNyaSelectObj, nyaSelectObj);\n\t\t    return true;\n\t\t  }\n\t\t  /**\n\t\t   * data passed back to parent controller \n\t\t   * after control being finsihed editing in modal\n\t\t   */\n\t\t  function returnControlFromAddCtrlModalModel(CtrlModalModel){\n\n\t\t    var modelToReturn = {\n\t\t          selectedControl:'none', \n\t\t          formlyType : 'none',\n\t\t          formlySubtype: 'none',\n\t\t          formlyLabel: '',\n\t\t          formlyRequired : false,\n\t\t          formlyDesciption: '',\n\t\t          formlyPlaceholder: '',\n\t\t          formlyOptions: [],\n\t\t          //validation fields\n\t\t          formlyExpressionProperties: {},\n\t\t          formlyValidators: {},\n\t\t          formlyValidation: {}\n\t\t    };\n\n\n\t\t    for (var i = CtrlModalModel.controls.length - 1; i >= 0; i--) {\n\t\t      if (CtrlModalModel.selectedControl === CtrlModalModel.controls[i].id) {\n\t\t        modelToReturn.selectedControl \t\t= CtrlModalModel.selectedControl;\n\t\t        modelToReturn.formlyType \t\t\t\t\t= CtrlModalModel.controls[i].formlyType;\n\t\t        modelToReturn.formlySubtype \t\t\t= CtrlModalModel.controls[i].formlySubtype;\n\t\t        modelToReturn.formlyLabel \t\t\t\t= CtrlModalModel.controls[i].formlyLabel;\n\t\t        modelToReturn.formlyRequired \t\t\t= CtrlModalModel.controls[i].formlyRequired;\n\t\t        modelToReturn.formlyDesciption \t\t= CtrlModalModel.controls[i].formlyDesciption;\n\t\t        modelToReturn.formlyPlaceholder \t= CtrlModalModel.controls[i].formlyPlaceholder;\n\t\t        modelToReturn.formlyOptions \t\t\t= CtrlModalModel.controls[i].formlyOptions;\n\n\t\t        modelToReturn.formlyExpressionProperties \t= angular.copy(CtrlModalModel.controls[i].formlyExpressionProperties);\n\t\t        modelToReturn.formlyValidators \t\t\t\t\t\t= angular.copy(CtrlModalModel.controls[i].formlyValidators);\n\t\t        modelToReturn.formlyValidation \t\t\t\t\t\t= angular.copy(CtrlModalModel.controls[i].formlyValidation);\n\n\t\t        //particular properties \n\t\t        //datetpicker format\n\t\t        if (CtrlModalModel.controls[i].formlyType === 'datepicker') {\n\t\t\t\t\tmodelToReturn.datepickerPopup \t\t\t\t\t\t\t= CtrlModalModel.controls[i].datepickerPopup;   \n\t\t\t\t\t  \t\n\t\t        }\n\t\t      }\n\t\t    }\n\t\t    return modelToReturn;\n\t\t  }\n\t\t\t/**\n\t\t\t * validKeyUniqueness\n\t\t\t * to be sure the \"keys\" are unique (in same formly field model)\n\t\t\t */\n\t\t  function validKeyUniqueness(thisKey, configurationObj){\n\t\t    var isUnique = true;\n\t\t    //each lines\n\t\t    for (var i = configurationObj.lines.length - 1; i >= 0; i--) {\n\t\t      //each columns\n\t\t      for (var j = configurationObj.lines[i].columns.length - 1; j >= 0; j--) {\n\t\t        if (configurationObj.lines[i].columns[j].control.key === thisKey) {\n\t\t          isUnique = false;\n\t\t        }\n\t\t          \n\t\t      }\n\t\t      \n\t\t    }\n\n\t\t    return isUnique;  \n\t\t  }  \n\n\t\t}\n\n})(); \n\n/**\n *  ------------------------------------------------------\n *  service : formFieldManage\n *  ------------------------------------------------------\n *\n *         MOST IMPORTANT service to manage formly field model \n *  (the presentation model and the back model or configuration model)\n * \n *\n *  - \"formlyModel\" is the model exposed to view or html \"fields model\" (= an array of objects)\n *    This model is the one you can see in all well documented examples here : http://angular-formly.com\n *    -> in your view or html : <formly-form model=\"dataModel\" fields=\"formlyModel\">\n *\n *  - \"configurationModel\" is the model on which editing a form will work\n *    before applying results to \"formlyModel\"\n *\n *\n * NOTE : if you save a form to database, you will save \"configurationModel\" rather than \"formlyModel\".\n *        Why? : \n *          since as you plan to create a form generator you can't create a finite model\n *          since you may want to be able to save the generated form even if it is not a finite model\n *          since \"formlyModel\" objects will be populated with a lot of properties you don't need to store contrary to \"configurationModel\" which contains only what you need\n *          since \"formlyModel\" can't be JSON.stringify when you want to use advanced layout (1 column/2/3 columns template?)\n *          since it is better approach to use a backgroundModel (async operation ...) that is bind to presentation model only when it is fully ready or filled.\n *\n *\n * NOTE : \n * - if you want to manage more columns templates (right now only manage up to 3 columns), just inspire from existing code\n * - if you want to extend easy form generator, be sure to be a minimum comfortable with \"angular formly\": http://angular-formly.com\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n\n;(function () {\n  'use strict';\n\n\n\n\n  angular\n    .module('ngwfApp.services.formFieldManage', [])\n    .factory('formFieldManage', formFieldManage);\n\n    formFieldManage.$inject = [];\n\n    function formFieldManage(){\n\n      var service = {\n        initConfigurationEditFromScratch : initConfigurationEditFromScratch,\n        bindConfigurationLines           : bindConfigurationLines,\n        applyConfigurationToformlyModel  : applyConfigurationToformlyModel \n      };\n      return service;\n\n\n      function initConfigurationEditFromScratch(configurationModel){\n        var configurationModelInit = {\n          activeLine: 1,   \n          listConfigStep: [\n                            'init',\n                            'first',\n                            'second',\n                            'third'\n                          ],\n          stepIndicators:  [\n                              true,\n                              false,\n                              false,\n                              false\n                            ], \n          configStepCounter : 0, \n          submitButtonText  : 'submit',\n          cancelButtonText  : 'cancel',\n          lines: [\n                  {\n                    line:1,                                       \n                    activeColumn : 1,\n                    columns: [\n                              {  \n                                numColumn: 1,\n                                exist:true, \n                                control: {\n                                            type:'none',\n                                            key: 'none',\n                                            // templateOptions: {\n                                            //                     label: 'none',\n                                            //                     placeholder: 'none',\n                                            //                     required: false,\n                                            //                     description: 'Descriptive text'\n                                            //                   }\n                                          }\n                                }\n                              ]\n                   }                                 \n              ]\n        };\n        angular.copy(configurationModelInit, configurationModel);                         \n      }\n\n      function bindConfigurationLines(configurationModel, lines){\n        if( Object.prototype.toString.call(lines) === '[object Array]' ) {\n          var configurationModelResult = {\n            activeLine: 1,   \n            listConfigStep: [\n                              'init',\n                              'first',\n                              'second',\n                              'third'\n                            ],\n            stepIndicators:  [\n                                true,\n                                false,\n                                false,\n                                false\n                              ], \n            configStepCounter: 0, \n            submitButtonText : 'submit',\n            cancelButtonText: 'cancel',\n            lines: []\n          };\n          configurationModelResult.lines = [].concat(lines);  \n                    \n          angular.copy(configurationModelResult, configurationModel);                                         \n\n          return getMessageObject('configuration model is bound','lines are bound to configuration model.');\n        }else{\n          return getErrorObject('lines is not an array', 'Checks lines type, it is not an array.');\n        }\n      }\n\n      function applyConfigurationToformlyModel(configurationModel, formlyModel, formlyDataModel){\n        resetFormlyModel(formlyModel);\n        resetDataModel(formlyDataModel);\n        /**\n         * manage header here line0 \n         */\n        var lineNumber = configurationModel.lines.length;\n        for (var i = 0; i < lineNumber; i++) {\n            //1 column line control\n            if (configurationModel.lines[i].columns.length === 1) {\n              //test if template control = header\n              if (configurationModel.lines[i].columns[0].control.type === 'header') {\n                addOneColumnHeader(formlyModel, configurationModel, i);\n              }else{\n                addOneColumnControl(formlyModel, configurationModel, i);  \n              }          \n            }\n            if (configurationModel.lines[i].columns.length === 2) {\n              addTwoColumnControl(formlyModel, configurationModel,i);\n            }\n            if (configurationModel.lines[i].columns.length === 3) {\n              addThreeColumnControl(formlyModel, configurationModel,i);\n            }\n        }\n      }\n\n      function resetFormlyModel(formlyModel){\n        var resetformly = [];\n        angular.copy(resetformly, formlyModel);\n      }\n\n\n\n      function addOneColumnHeader(formlyModel, configurationModel,lineIndex){\n        /**\n         * text header is stored in \"description\" in templateOtion model \n         */\n        var headerTemplateCol0 = '<div class=\"row\"><div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\"><h2 class=\"text-center\">' + extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[0].control) + '<h2></div></div><hr/>';\n\n        formlyModel.push(\n          {\n            template: typeof configurationModel\n                                    .lines[lineIndex]\n                                    .columns[0]\n                                    .control\n                                    .type !== 'undefined' ? (configurationModel.lines[lineIndex].columns[0].control.type === 'header' ? headerTemplateCol0 : '<div></div>') : '<div></div>'\n          }\n        );\n      }\n\n      function addDatepickerPopupProperty(fieldToPush, configurationModel,lineIndex){\n          fieldToPush.templateOptions.datepickerPopup = extractTemplateOptionDatepickerPopup(configurationModel.lines[lineIndex].columns[0].control);\n      }\n\n      function addOneColumnControl(formlyModel, configurationModel,lineIndex){\n        var fieldToPush = {\n          className: 'col-xs-12',\n          type: typeof configurationModel.lines[lineIndex].columns[0].control.type !== 'undefined' ? (configurationModel.lines[lineIndex].columns[0].control.type === 'none' ? 'blank': configurationModel.lines[lineIndex].columns[0].control.type): 'blank',\n          key: typeof configurationModel.lines[lineIndex].columns[0].control.key !== 'undefined' ?  configurationModel.lines[lineIndex].columns[0].control.key : 'blank' + Date.now(),\n          templateOptions: {\n            type                  : extractTemplateOptionType(configurationModel.lines[lineIndex].columns[0].control),\n            label                 : extractTemplateOptionLabel(configurationModel.lines[lineIndex].columns[0].control),\n            required              : extractTemplateOptionRequired(configurationModel.lines[lineIndex].columns[0].control),\n            placeholder           : extractTemplateOptionPlaceholder(configurationModel.lines[lineIndex].columns[0].control),\n            description           : extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[0].control),\n            options               : extractTemplateOptionOptions(configurationModel.lines[lineIndex].columns[0].control)\n          },\n          expressionProperties  : extractFormlyExpressionProperties(configurationModel.lines[lineIndex].columns[0].control),\n          validators            : extractFormlyValidators(configurationModel.lines[lineIndex].columns[0].control),\n          validation            : extractFormlyValidation(configurationModel.lines[lineIndex].columns[0].control)\n        };\n        //////////////////////////////////////////////                  \n        //datepicker additionnal particular property  \n        //////////////////////////////////////////////                  \n        if (configurationModel.lines[lineIndex].columns[0].control.type === 'datepicker') {\n          addDatepickerPopupProperty(fieldToPush, configurationModel,lineIndex);\n        }     \n\n        formlyModel.push( \n          fieldToPush\n        );\n      }    \n\n      function addTwoColumnControl(formlyModel, configurationModel,lineIndex){\n\n        //text header is stored in \"description\" in templateOtion model\n        var headerTemplateCol0 =  {\n                                    className: 'col-xs-6',\n                                    template : '<div class=\"row\"><div class=\"\"><h2 class=\"text-center\">' + extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[0].control) + '<h2><hr/></div></div>'\n                                  };\n\n        var headerTemplateCol1 =  {\n                                    className: 'col-xs-6',\n                                   template:'<div class=\"row\"><div class=\"\"><h2 class=\"text-center\">' + extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[1].control) + '<h2><hr/></div></div>'\n                                  };\n\n        var controlCol0 =     {\n            className: 'col-xs-6',\n            type: typeof configurationModel.lines[lineIndex].columns[0].control.type !== 'undefined' ? (configurationModel.lines[lineIndex].columns[0].control.type === 'none' ? 'blank': configurationModel.lines[lineIndex].columns[0].control.type): 'blank',\n            key: typeof configurationModel.lines[lineIndex].columns[0].control.key !== 'undefined' ?  configurationModel.lines[lineIndex].columns[0].control.key : 'blank' + Date.now(),\n            templateOptions: {\n                type: extractTemplateOptionType(configurationModel.lines[lineIndex].columns[0].control),\n                label: extractTemplateOptionLabel(configurationModel.lines[lineIndex].columns[0].control),\n                required : extractTemplateOptionRequired(configurationModel.lines[lineIndex].columns[0].control),\n                placeholder : extractTemplateOptionPlaceholder(configurationModel.lines[lineIndex].columns[0].control),\n                description : extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[0].control),\n                options : extractTemplateOptionOptions(configurationModel.lines[lineIndex].columns[0].control)\n            },\n                expressionProperties : extractFormlyExpressionProperties(configurationModel.lines[lineIndex].columns[0].control),\n                validators : extractFormlyValidators(configurationModel.lines[lineIndex].columns[0].control),\n                validation : extractFormlyValidation(configurationModel.lines[lineIndex].columns[0].control)                                  \n          };\n        //////////////////////////////////////////////                  \n        //datepicker additionnal particular property  \n        //////////////////////////////////////////////                  \n        if (configurationModel.lines[lineIndex].columns[0].control.type === 'datepicker') {\n          addDatepickerPopupProperty(controlCol0, configurationModel,lineIndex);\n        }                            \n\n        var controlCol1 =  {\n                  className: 'col-xs-6',\n                  type: typeof configurationModel.lines[lineIndex].columns[1].control.type !== 'undefined' ?  (configurationModel.lines[lineIndex].columns[1].control.type === 'none' ? 'blank': configurationModel.lines[lineIndex].columns[1].control.type) : 'blank',\n                  key: typeof configurationModel.lines[lineIndex].columns[1].control.key !== 'undefined' ?  configurationModel.lines[lineIndex].columns[1].control.key : 'blank' + Date.now(),\n                  templateOptions: {\n                      type: extractTemplateOptionType(configurationModel.lines[lineIndex].columns[1].control),\n                      label: extractTemplateOptionLabel(configurationModel.lines[lineIndex].columns[1].control),\n                      required : extractTemplateOptionRequired(configurationModel.lines[lineIndex].columns[1].control),\n                      placeholder : extractTemplateOptionPlaceholder(configurationModel.lines[lineIndex].columns[1].control),\n                      description : extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[1].control),\n                      options : extractTemplateOptionOptions(configurationModel.lines[lineIndex].columns[1].control)\n                  },\n                      expressionProperties : extractFormlyExpressionProperties(configurationModel.lines[lineIndex].columns[1].control),\n                      validators : extractFormlyValidators(configurationModel.lines[lineIndex].columns[1].control),\n                      validation : extractFormlyValidation(configurationModel.lines[lineIndex].columns[1].control)                                  \n          };\n\n        //////////////////////////////////////////////                  \n        //datepicker additionnal particular property  \n        //////////////////////////////////////////////                  \n        if (configurationModel.lines[lineIndex].columns[1].control.type === 'datepicker') {\n          addDatepickerPopupProperty(controlCol1, configurationModel,lineIndex);\n        }                                \n\n        var FieldGroup = [];\n\n        if (configurationModel.lines[lineIndex].columns[0].control.type === 'header') {\n          FieldGroup.push(headerTemplateCol0);\n        }else{\n          FieldGroup.push(controlCol0);\n        }\n         \n        if (configurationModel.lines[lineIndex].columns[1].control.type === 'header') {\n          FieldGroup.push(headerTemplateCol1);\n        }else{\n          FieldGroup.push(controlCol1);\n        }    \n\n        formlyModel.push(\n           {\n              className: 'row', \n              fieldGroup: FieldGroup\n            }\n        );\n      }\n\n      function addThreeColumnControl(formlyModel, configurationModel,lineIndex){\n        //text header is stored in \"description\" in templateOtion model\n        var headerTemplateCol0 =  {\n                                    className: 'col-xs-4',\n                                    template : '<div class=\"row\"><div class=\"\"><h2 class=\"text-center\">' + extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[0].control) + '<h2><hr/></div></div>'\n                                  };\n\n        var headerTemplateCol1 =  {\n                                    className: 'col-xs-4',\n                                   template:'<div class=\"row\"><div class=\"\"><h2 class=\"text-center\">' + extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[1].control) + '<h2><hr/></div></div>'\n                                  };\n\n        var headerTemplateCol2 =  {\n                                    className: 'col-xs-4',\n                                   template:'<div class=\"row\"><div class=\"\"><h2 class=\"text-center\">' + extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[2].control) + '<h2><hr/></div></div>'\n                                  };\n      \n        var controlCol0 =     {\n                                  className: 'col-xs-4',\n                                  type: typeof configurationModel.lines[lineIndex].columns[0].control.type !== 'undefined' ? (configurationModel.lines[lineIndex].columns[0].control.type === 'none' ? 'blank': configurationModel.lines[lineIndex].columns[0].control.type): 'blank',\n                                  key: typeof configurationModel.lines[lineIndex].columns[0].control.key !== 'undefined' ?  configurationModel.lines[lineIndex].columns[0].control.key : 'blank' + Date.now(),\n                                  templateOptions: {\n                                      type: extractTemplateOptionType(configurationModel.lines[lineIndex].columns[0].control),\n                                      label: extractTemplateOptionLabel(configurationModel.lines[lineIndex].columns[0].control),\n                                      required : extractTemplateOptionRequired(configurationModel.lines[lineIndex].columns[0].control),\n                                      placeholder : extractTemplateOptionPlaceholder(configurationModel.lines[lineIndex].columns[0].control),\n                                      description : extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[0].control),\n                                      options : extractTemplateOptionOptions(configurationModel.lines[lineIndex].columns[0].control)                                              \n                                  },\n                                      expressionProperties : extractFormlyExpressionProperties(configurationModel.lines[lineIndex].columns[0].control),\n                                      validators : extractFormlyValidators(configurationModel.lines[lineIndex].columns[0].control),\n                                      validation : extractFormlyValidation(configurationModel.lines[lineIndex].columns[0].control)                                   \n                                };\n        //////////////////////////////////////////////                  \n        //datepicker additionnal particular property  \n        //////////////////////////////////////////////                  \n        if (configurationModel.lines[lineIndex].columns[0].control.type === 'datepicker') {\n          addDatepickerPopupProperty(controlCol0, configurationModel,lineIndex);\n        }                             \n\n        var controlCol1 =  {\n                                  className: 'col-xs-4',\n                                  type: typeof configurationModel.lines[lineIndex].columns[1].control.type !== 'undefined' ?  (configurationModel.lines[lineIndex].columns[1].control.type === 'none' ? 'blank': configurationModel.lines[lineIndex].columns[1].control.type) : 'blank',\n                                  key: typeof configurationModel.lines[lineIndex].columns[1].control.key !== 'undefined' ?  configurationModel.lines[lineIndex].columns[1].control.key : 'blank' + Date.now(),\n                                  templateOptions: {\n                                      type: extractTemplateOptionType(configurationModel.lines[lineIndex].columns[1].control),\n                                      label: extractTemplateOptionLabel(configurationModel.lines[lineIndex].columns[1].control),\n                                      required : extractTemplateOptionRequired(configurationModel.lines[lineIndex].columns[1].control),\n                                      placeholder : extractTemplateOptionPlaceholder(configurationModel.lines[lineIndex].columns[1].control),\n                                      description : extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[1].control),\n                                      options : extractTemplateOptionOptions(configurationModel.lines[lineIndex].columns[1].control)                                               \n                                  },\n                                      expressionProperties : extractFormlyExpressionProperties(configurationModel.lines[lineIndex].columns[1].control),\n                                      validators : extractFormlyValidators(configurationModel.lines[lineIndex].columns[1].control),\n                                      validation : extractFormlyValidation(configurationModel.lines[lineIndex].columns[1].control)                                  \n                          };\n        //////////////////////////////////////////////                  \n        //datepicker additionnal particular property  \n        //////////////////////////////////////////////                  \n        if (configurationModel.lines[lineIndex].columns[1].control.type === 'datepicker') {\n          addDatepickerPopupProperty(controlCol1, configurationModel,lineIndex);\n        }                       \n        var controlCol2 =  {\n                                  className: 'col-xs-4',\n                                  type: typeof configurationModel.lines[lineIndex].columns[2].control.type !== 'undefined' ?  (configurationModel.lines[lineIndex].columns[2].control.type === 'none' ? 'blank': configurationModel.lines[lineIndex].columns[2].control.type) : 'blank',\n                                  key: typeof configurationModel.lines[lineIndex].columns[2].control.key !== 'undefined' ?  configurationModel.lines[lineIndex].columns[2].control.key : 'blank' + Date.now(),\n                                  templateOptions: {\n                                      type: extractTemplateOptionType(configurationModel.lines[lineIndex].columns[2].control),\n                                      label: extractTemplateOptionLabel(configurationModel.lines[lineIndex].columns[2].control),\n                                      required : extractTemplateOptionRequired(configurationModel.lines[lineIndex].columns[2].control),\n                                      placeholder : extractTemplateOptionPlaceholder(configurationModel.lines[lineIndex].columns[2].control),\n                                      description : extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[2].control),\n                                      options : extractTemplateOptionOptions(configurationModel.lines[lineIndex].columns[2].control)                                              \n                                  },\n                                      expressionProperties : extractFormlyExpressionProperties(configurationModel.lines[lineIndex].columns[2].control),\n                                      validators : extractFormlyValidators(configurationModel.lines[lineIndex].columns[2].control),\n                                      validation : extractFormlyValidation(configurationModel.lines[lineIndex].columns[2].control)                                   \n                          };\n        //////////////////////////////////////////////                  \n        //datepicker additionnal particular property  \n        //////////////////////////////////////////////                  \n        if (configurationModel.lines[lineIndex].columns[2].control.type === 'datepicker') {\n          addDatepickerPopupProperty(controlCol2, configurationModel,lineIndex);\n        }     \n\n        var FieldGroup = [];\n\n        if (configurationModel.lines[lineIndex].columns[0].control.type === 'header') {\n          FieldGroup.push(headerTemplateCol0);\n        }else{\n          FieldGroup.push(controlCol0);\n        }\n         \n        if (configurationModel.lines[lineIndex].columns[1].control.type === 'header') {\n          FieldGroup.push(headerTemplateCol1);\n        }else{\n          FieldGroup.push(controlCol1);\n        }    \n\n        if (configurationModel.lines[lineIndex].columns[2].control.type === 'header') {\n          FieldGroup.push(headerTemplateCol2);\n        }else{\n          FieldGroup.push(controlCol2);\n        }    \n\n\n        formlyModel.push(\n           {\n              className: 'row', \n              fieldGroup: FieldGroup\n            }\n        );\n      }\n\n      function isTemplateOptionDefined(obj){\n        return typeof obj.templateOptions !== 'undefined' ? true : false;\n      }\n\n      function extractTemplateOptionLabel(obj){\n       return  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.label !== 'undefined'? obj.templateOptions.label: '') : '';\n      }\n\n\n      function extractTemplateOptionDatepickerPopup(obj){\n        return  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.datepickerPopup !== 'undefined'? obj.templateOptions.datepickerPopup: '') : '';\n      }\n\n      function extractFormlyExpressionProperties(obj){\n        return  typeof obj.formlyExpressionProperties !== 'undefined' ? angular.copy(obj.formlyExpressionProperties) : {};\n      }\n\n      function extractFormlyValidators(obj){\n        return  typeof obj.formlyValidators !== 'undefined' ? angular.copy(obj.formlyValidators): {};\n      }\n\n      function extractFormlyValidation(obj){\n        return  typeof obj.formlyValidation !== 'undefined' ?  angular.copy(obj.formlyValidation) : {};\n      }\n\n      function extractTemplateOptionRequired(obj){\n        return  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.required !== 'undefined'? obj.templateOptions.required: '') : '';\n      }\n\n      function extractTemplateOptionOptions(obj){\n        return  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.options !== 'undefined'? obj.templateOptions.options: '') : '';\n      }\n\n      function extractTemplateOptionType(obj){\n        return  typeof obj.subtype !== 'undefined'? obj.subtype: '';\n      }\n\n      function extractTemplateOptionPlaceholder(obj){\n        return  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.placeholder !== 'undefined'? obj.templateOptions.placeholder: '') : '';\n      }\n\n      function extractTemplateOptionDescription(obj){\n        return  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.description !== 'undefined'? obj.templateOptions.description: '') : '';\n      }\n\n      function resetDataModel(obj){\n        var emptyDataModel = {};\n        angular.copy(emptyDataModel, obj);\n        return true;\n      }\n\n      function getErrorObject(errorTitle, errorMessage){\n\n        var messageObj = {\n          noError : false,\n          title: '',\n          Message: ''  \n        };\n\n        messageObj.noError = false;\n        messageObj.title = errorTitle;\n        messageObj.Message = errorMessage;\n        return messageObj;\n      }\n\n      function getMessageObject(messageTitle, messageBody){\n        var messageObj = {\n          noError : false,\n          title: '',\n          Message: ''  \n        };\n\n        messageObj.noError = true;\n        messageObj.title = messageTitle;\n        messageObj.Message = messageBody;\n        return messageObj;\n      }    \n\n\n    }\n\n\n\n})(); \n\n/**\n *  ------------------------------------------------------\n *  service to manage select options (used in modal to edit control)\n *  ------------------------------------------------------\n *\n *  module = \"service\"  selectOptionManage (manage : selects, radio...)\n *\n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n\n;(function() {\n  'use strict';\n\n\n  angular\n    .module('ngwfApp.services.selectOptionManage', [])\n    .factory('selectOptionManage', selectOptionManage);\n\n    selectOptionManage.$inject = [];\n    function selectOptionManage(){\n      var service = {\n        testMe                    : testMe,\n        initModel                 : initModel,\n        isOptionUnique            : isOptionUnique,\n        isOptionValidFormat       : isOptionValidFormat,\n        addNewOptionRadio         : addNewOptionRadio,\n        addNewOptionBasicSelect   : addNewOptionBasicSelect,\n        addNewOptionGroupedSelect : addNewOptionGroupedSelect,\n        removeOption              : removeOption,\n        upthisOption              : upthisOption,\n        downthisOption            : downthisOption,\n      };\n      return service;\n\n      /**\n       * just a test function\n       */\n      function testMe(){\n        return 'selectOptionManage is here.';\n      }\n      /**\n       * reset model\n       */\n      function initModel(selectObj){\n        resetModel(selectObj);\n      }\n\n      function isOptionUnique(selectObj, textValue){\n        for (var i = selectObj.rows.length - 1; i >= 0; i--) {\n          if (selectObj.rows[i].option === textValue) return false;\n        }\n        return true;\n      }\n\n      function isOptionValidFormat(textValue){\n        if (textValue !== '')  return true;\n        return false;\n      }\n\n      function addNewOptionRadio(selectObj, newOptionText){\n        var fullResponse = {\n                              resultFlag : false,\n                              details : ''\n                            };\n\n        var checkResult = validOption(selectObj, newOptionText);  \n        if (checkResult.resultFlag === true){\n\n            var newOption = {\n                                option: newOptionText,\n                                order: selectObj.rows.length\n                            };\n\n            selectObj.rows.push(newOption);\n            fullResponse.resultFlag = true;\n            fullResponse.details = '';\n            return fullResponse;\n        }else{\n              angular.copy(checkResult, fullResponse);                    \n              return fullResponse;                        \n        }\n      }\n\n      function addNewOptionBasicSelect(selectObj, newOptionText){\n          var fullResponse = {\n                                resultFlag : false,\n                                details : ''\n                              };\n\n          var checkResult = validOption(selectObj, newOptionText);  \n          if (checkResult.resultFlag === true){\n\n              var newOption = {\n                                  option: newOptionText,\n                                  order: selectObj.rows.length\n                              };\n\n              selectObj.rows.push(newOption);\n              fullResponse.resultFlag = true;\n              fullResponse.details = '';\n              return fullResponse;\n          }else{\n                angular.copy(checkResult, fullResponse);                    \n                return fullResponse;                        \n          }\n      }\n\n      function addNewOptionGroupedSelect(selectObj, newOptionText, newOptionGroup){\n        var fullResponse = {\n                              resultFlag : false,\n                              details : ''\n                            };\n\n        var checkResult = validOption(selectObj, newOptionText);  \n    \n        if (checkResult.resultFlag === true){\n\n            var newOption = {\n                                option: newOptionText,\n                                group: newOptionGroup,\n                                order: selectObj.rows.length\n                            };\n\n            selectObj.rows.push(newOption);\n            fullResponse.resultFlag = true;\n            fullResponse.details = '';\n            return fullResponse;\n        }else{\n              angular.copy(checkResult, fullResponse);                    \n              return fullResponse;                        \n        }\n      }\n\n      function removeOption(selectObj, AtIndex) {\n        var fullResponse = {\n                            resultFlag : false,\n                            details : ''\n                          };\n\n        if (AtIndex !== -1) {\n            selectObj.rows.splice(AtIndex, 1);\n            fullResponse.resultFlag = true;\n            fullResponse.details= '';\n            return fullResponse;\n        }else{\n            fullResponse.resultFlag = false;\n            fullResponse.details= 'Option index not valid';\n            return fullResponse;\n        }\n      }\n\n      function upthisOption(selectObj, indexOption){\n          var fullResponse = {\n                              resultFlag : false,\n                              details : ''\n                            };  \n\n          if (indexOption > -1) {\n            if (indexOption > 0) {\n              if (selectObj.rows[indexOption - 1]) {\n                var currentOption = selectObj.rows[indexOption];\n                selectObj.rows.splice(indexOption , 1);\n                selectObj.rows.splice((indexOption - 1), 0, currentOption); \n                fullResponse.resultFlag = true;\n                fullResponse.details = '';\n                return fullResponse;\n              }else{\n                fullResponse.resultFlag = false;\n                fullResponse.details = 'Can\\'t retreive option from option index';\n                return fullResponse;\n              }\n            }else{\n                fullResponse.resultFlag = true;\n                fullResponse.details = '';\n                return fullResponse;\n            }  \n          }else{\n            fullResponse.resultFlag = false;\n            fullResponse.details = 'Option index not valid';\n            return fullResponse;\n          }\n      }\n\n      function downthisOption(selectObj, indexOption){\n          var fullResponse = {\n                              resultFlag : false,\n                              details : ''\n                            };\n\n          if (indexOption > -1) {\n            if (indexOption < selectObj.rows.length - 1){\n              if (selectObj.rows[indexOption + 1]) {\n                var currentOption = selectObj.rows[indexOption];\n                selectObj.rows.splice(indexOption , 1);\n                selectObj.rows.splice((indexOption + 1), 0, currentOption);  \n                fullResponse.resultFlag = true;\n                fullResponse.details = '';\n                return fullResponse;  \n              }else{\n                fullResponse.resultFlag = false;\n                fullResponse.details = 'Can\\'t retreive option from option index';\n                return fullResponse;\n              }\n            }else{ \n                fullResponse.resultFlag = true;\n                fullResponse.details = '';\n              return fullResponse;\n            }\n          }else{\n            fullResponse.resultFlag = false;\n            fullResponse.details = 'Option index not valid';\n            return fullResponse;\n          }\n      }\n\n\n\n\n\n\n      function validOption(selectObj, newOptionText){\n          var fullResponse = {\n                                resultFlag  : false,\n                                details     : ''\n                              };\n\n          if (typeof newOptionText === 'undefined') {\n              fullResponse.resultFlag = false;\n              fullResponse.details    = 'Entered option is empty';\n              return fullResponse;\n          }\n\n          if (newOptionText !== '') {\n                for (var i = selectObj.rows.length - 1; i >= 0; i--) {\n                  if (selectObj.rows[i].option === newOptionText) {\n                    fullResponse.resultFlag = false;\n                    fullResponse.details    = 'Entered option is not unique';\n                    return fullResponse;\n                  }\n                }\n                fullResponse.resultFlag = true;\n                fullResponse.details    = '';\n                return fullResponse;\n          }\n          fullResponse.resultFlag = false;     \n          fullResponse.details    = 'Entered option is empty';\n          return fullResponse;\n      }\n\n      function resetModel(selectObj){\n        var zeroModel = { rows:[] };\n        angular.copy(zeroModel, selectObj);\n      }\n  }\n\n\n})(); \n\n    //}\n\n\n    // .factory('selectOptionManage', [ function(){\n    \n\n    //   return {\n              // testMe: function() {\n              //     return 'selectOptionManage is here.';\n              // },\n\n              // initModel: function(selectObj){\n              //   resetModel(selectObj);\n              // },\n          \n              // isOptionUnique: function(selectObj, textValue){\n              //   for (var i = selectObj.rows.length - 1; i >= 0; i--) {\n\n              //     if (selectObj.rows[i].option === textValue) {\n              //       return false;\n              //     }\n                  \n              //   }\n              //   return true;\n              // },\n\n              //test if not empty string (= full space string is not conidered as valid)\n              // isOptionValidFormat: function(textValue){\n              //   if (textValue !== '') {\n              //     return true;\n              //   }\n              //   return false;                    \n              // },\n\n              // addNewOptionRadio: function(selectObj, newOptionText){\n              //   var fullResponse = {\n              //                         resultFlag : false,\n              //                         details : ''\n              //                       };\n\n              //   var checkResult = validOption(selectObj, newOptionText);  \n\n              //   //console.info(checkResult);\n\n              //   if (checkResult.resultFlag === true){\n\n              //       var newOption = {\n              //                           option: newOptionText,\n              //                           order: selectObj.rows.length\n              //                       };\n\n              //       selectObj.rows.push(newOption);\n              //       fullResponse.resultFlag = true;\n              //       fullResponse.details = \"\";\n              //       return fullResponse;\n              //   }else{\n\n              //         angular.copy(checkResult, fullResponse);                    \n              //         return fullResponse;                        \n              //   }\n\n\n              // },\n\n\n              // addNewOptionBasicSelect: function(selectObj, newOptionText){\n              //   var fullResponse = {\n              //                         resultFlag : false,\n              //                         details : ''\n              //                       };\n\n              //   var checkResult = validOption(selectObj, newOptionText);  \n\n              //   //console.info(checkResult);\n\n              //   if (checkResult.resultFlag === true){\n\n              //       var newOption = {\n              //                           option: newOptionText,\n              //                           order: selectObj.rows.length\n              //                       };\n\n              //       selectObj.rows.push(newOption);\n              //       fullResponse.resultFlag = true;\n              //       fullResponse.details = '';\n              //       return fullResponse;\n              //   }else{\n\n              //         angular.copy(checkResult, fullResponse);                    \n              //         return fullResponse;                        \n              //   }\n\n\n              // },\n\n              // addNewOptionGroupedSelect: function(selectObj, newOptionText, newOptionGroup){\n              //   var fullResponse = {\n              //                         resultFlag : false,\n              //                         details : ''\n              //                       };\n\n              //   // if (typeof newOptionGroup === \"undefined\") {\n\n              //   //     fullResponse.resultFlag = false;\n              //   //     fullResponse.details = \"Group option is undefined\";\n              //   //     return fullResponse;\n              //   // }\n\n              //   // if (newOptionGroup === \"\") {\n\n              //   //     fullResponse.resultFlag = false;\n              //   //     fullResponse.details = \"Group option is undefined\";\n              //   //     return fullResponse;\n              //   // }\n\n              //   var checkResult = validOption(selectObj, newOptionText);  \n\n            \n              //   if (checkResult.resultFlag === true){\n\n              //       var newOption = {\n              //                           option: newOptionText,\n              //                           group: newOptionGroup,\n              //                           order: selectObj.rows.length\n              //                       };\n\n              //       selectObj.rows.push(newOption);\n              //       fullResponse.resultFlag = true;\n              //       fullResponse.details = '';\n              //       return fullResponse;\n              //   }else{\n\n              //         angular.copy(checkResult, fullResponse);                    \n              //         return fullResponse;                        \n              //   }\n\n              // },\n\n\n              // removeOption:  function(selectObj, AtIndex) {\n              //   var fullResponse = {\n              //                       resultFlag : false,\n              //                       details : ''\n              //                     };\n\n              //   if (AtIndex !== -1) {\n              //       selectObj.rows.splice(AtIndex, 1);\n              //       fullResponse.resultFlag = true;\n              //       fullResponse.details= '';\n              //       return fullResponse;\n              //   }else{\n              //       fullResponse.resultFlag = false;\n              //       fullResponse.details= 'Option index not valid';\n              //       return fullResponse;\n              //   }\n              // },\n\n            //   upthisOption : function(selectObj, indexOption){\n            //     var fullResponse = {\n            //                         resultFlag : false,\n            //                         details : ''\n            //                       };  \n\n            //     if (indexOption > -1) {\n\n            //       if (indexOption > 0) {\n\n            //         if (selectObj.rows[indexOption - 1]) {\n            //           var currentOption = selectObj.rows[indexOption];\n            //           selectObj.rows.splice(indexOption , 1);\n            //           selectObj.rows.splice((indexOption - 1), 0, currentOption); \n\n            //           fullResponse.resultFlag = true;\n            //           fullResponse.details = '';\n            //           return fullResponse;\n            //         }else{\n            //           fullResponse.resultFlag = false;\n            //           fullResponse.details = 'Can\\'t retreive option from option index';\n            //           return fullResponse;\n            //         }\n            //       }else{\n            //           fullResponse.resultFlag = true;\n            //           fullResponse.details = '';\n            //           return fullResponse;\n            //       }  \n\n            //     }else{\n            //       fullResponse.resultFlag = false;\n            //       fullResponse.details = 'Option index not valid';\n            //       return fullResponse;\n            //     }\n            // },\n\n            // downthisOption : function(selectObj, indexOption){\n            //     var fullResponse = {\n            //                         resultFlag : false,\n            //                         details : ''\n            //                       };\n\n            //     if (indexOption > -1) {\n    \n\n            //       if (indexOption < selectObj.rows.length - 1){\n                    \n\n            //         if (selectObj.rows[indexOption + 1]) {\n                      \n\n            //           var currentOption = selectObj.rows[indexOption];\n                      \n            //           selectObj.rows.splice(indexOption , 1);\n            //           selectObj.rows.splice((indexOption + 1), 0, currentOption);  \n\n            //           fullResponse.resultFlag = true;\n            //           fullResponse.details = '';\n            //           return fullResponse;  \n\n            //         }else{\n            //           fullResponse.resultFlag = false;\n            //           fullResponse.details = 'Can\\'t retreive option from option index';\n            //           return fullResponse;\n            //         }\n            //       }else{\n\n                    \n            //           fullResponse.resultFlag = true;\n            //           fullResponse.details = '';\n            //         return fullResponse;\n            //       }\n\n\n            //     }else{\n            //       fullResponse.resultFlag = false;\n            //       fullResponse.details = 'Option index not valid';\n            //       return fullResponse;\n            //     }\n\n            // }\n\n        \n\n\n\n  //         };\n\n\n\n\n  // function validOption(selectObj, newOptionText){\n  //     var fullResponse = {\n  //                           resultFlag : false,\n  //                           details : \"\"\n  //                         };\n\n  //     if (typeof newOptionText === 'undefined') {\n  //         fullResponse.resultFlag = false;\n  //         fullResponse.details = 'Entered option is empty';\n  //         return fullResponse;\n  //     }\n\n  //     if (newOptionText !== '') {\n  //           for (var i = selectObj.rows.length - 1; i >= 0; i--) {\n  //             if (selectObj.rows[i].option === newOptionText) {\n  //               fullResponse.resultFlag = false;\n  //               fullResponse.details = 'Entered option is not unique';\n  //               return fullResponse;\n  //             }\n  //           }\n  //           fullResponse.resultFlag = true;\n  //           fullResponse.details = '';\n  //           return fullResponse;\n  //     }\n  //     fullResponse.resultFlag = false;     \n  //     fullResponse.details = 'Entered option is empty';\n  //     return fullResponse;\n  // }\n\n  // function resetModel(selectObj){\n  //   var zeroModel = { \n  //                       rows:\n  //                       [\n  //                       ]\n  //                     };\n\n    \n  //   angular.copy(zeroModel, selectObj);\n  // }\n\n  \n\n  // }]);\n\n\n\n\n\n\n\n\n\n/**\n *  ------------------------------------------------------\n *  module = \"services\" container\n *  ------------------------------------------------------\n *\n * contains all app services\n *\n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n\n;(function () {\n\t'use strict';\n\n\tangular.module(\n\t\t\t\t\t\t\t\t\t'ngwfApp.services', [\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'ngwfApp.services.formFieldManage',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'ngwfApp.services.selectOptionManage',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'ngwfApp.services.ngwfWfFormsServices',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'ngwfApp.services.ngwfEditCtrlControllerModalProxy'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t);\n\n})(); \n\n\n/**\n *  ------------------------------------------------------\n *  form API : suppose you have your RESTful backend \n *  ------------------------------------------------------\n *\n *  \n *\n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n\n(function(){\n\n\t'use strict';\n\t\n\tangular\n\t\t.module('ngwfApp.services.ngwfWfFormsServices', ['ngResource'])\n\t\t.factory('WfFormsByIdServices', WfFormsByIdServices);\n\n\t\tWfFormsByIdServices.$inject = ['$resource'];\n\t\tfunction WfFormsByIdServices($resource){\n\t\t\treturn $resource('/api/wfedit/:id', {id: '@id'}, {});\n\t\t}\n\n\n})();\n/**\n *  ------------------------------------------------------\n *  filters container\n *  ------------------------------------------------------\n *\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n\n;(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('ngwfApp.filters', []);\n\n})(); \n\n\n\n})(this);"],"sourceRoot":"/source/"}
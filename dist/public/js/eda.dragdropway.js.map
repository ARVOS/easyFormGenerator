{"version":3,"sources":["eda.dragdropway.js"],"names":["runfct","$templateCache","validEditFooterTpl","join","editPanelBlankCtrlTpls","validEditFooter","editPanelHeaderCtrlTpl","editPanelSubTitleCtrlTpl","editPanelTextInputCtrlTpl","editPanelPasswordCtrlTpl","editPanelDateCtrlTpl","editPanelTextareaCtrlTpl","editPanelRichTextEditorCtrlTpl","editPanelRadioCtrlTpl","editPanelCheckboxCtrlTpl","editPanelBasicSelectCtrlTpl","editPanelGroupedSelectCtrlTpl","put","angular","module","value","run","$inject","config","dragDropConfigProvider","setItemsNotTocount","itemBeingDragged","formlyConfigProvider","EasyFormGenFormlyBindingModelsProvider","camelize","string","replace","match","chr","toUpperCase","toLowerCase","setType","name","template","addEasyFormControlToList","id","subtitle","group","formlyType","formlySubtype","formlyLabel","formlyRequired","formlyDesciption","formlyOptions","addControlToDragDropPresentationModel","label","control","cssClass","addToGroupCtrl","subTitleTemplate","attributes","bindings","ngModelAttrs","forEach","attr","attribute","binding","bound","angularUIDatePickerTemplate","wrapper","controller","$scope","open","$event","preventDefault","stopPropagation","opened","defaultOptions","templateOptions","addonLeft","class","onClick","options","isOpen","onFocus","$viewValue","$modelValue","scope","to","datepickerOptions","datepickerPopup","richTexEditorTemplate","basicSelectTemplate","groupedSelectTemplate","provider","addToGroupControl","thisControl","thisGroup","_dragDropPresentationModel","length","_dragDropConfigModel","containerConfig","decoration","missingGroupNumber","i","push","groupConfig","groupId","WhenIndex","_listDragDropItemCssClasses","numberItemPerRow","dropZoneConfig","ApplycssClass","fontAwesomeIcon","title","verboseMode","isCollapsed","collapseEnabled","collapseCtrl","atIndex","collapse","itemConfig","_itemsNotToCountFoReal","this","setListItemCssClass","fromConfig","concat","getItemsNotTocount","copy","controlToAdd","groupToAdd","getDragDropPresentationModel","$get","Service","getListItemCssClass","getItemsNotToCount","getItemCssDependingNumberItemsInRow","numberOfItems","classToReturn","getDistinctItemCssClass","distinctCssClass","valueRef","cssClassRef","canAdd","valueProc","cssClassProc","getDragDropConfigModel","setDragDropConfigContainerDecorationCollapse","dragDropConfigModel","indexValue","isCollapsedBool","parseInt","_easyFormListControls","controls","selectedControl","temporyConfig","formlyPlaceholder","_easyFormEmptyConfigurationLineModel","line","activeColumn","columns","numColumn","exist","type","key","_emptyControlFieldModel","_easyFormInitialStateConfigurationModel","submitButtonText","cancelButtonText","lines","_easyFormInitialStateConfigurationModelAddOnForStepWay","activeLine","listConfigStep","stepIndicators","configStepCounter","_easyFormReloadConfigurationModel","_headerTemplates","textContent","html_part1","selectedClass","html_part2","html_part3","html_part4","simpleHtml1","simpleHtml2","_formlyControlTemplates","className","required","placeholder","description","_particularControlProperties","controlType","properties","isRoot","isTemplateOptions","getAllParticularControlProperties","addParticularControlProperties","newParticularControlProperty","isAnUpdate","controlProp","getEasyFormListControls","controlDeclaration","getHeaderTemplates","addHeaderTemplateCssClass","cssClassToAdd","getFormlyControlTemplate","addformlyControlTemplatesCssClass","setFormlyControlTemplate","newFormlyControlTemplate","getEasyFormInitialStateConfigurationModel","addStepWayProperties","initialConfigurationModel","extend","getEasyFormReloadConfigurationModel","getEasyFormEmptyConfigurationLineModel","getEasyFormConfigurationEmptyControlModel","getRawHeaderTemplates","getHeaderTemplateForNcolumnLine","nbColInLines","headerToReturn","getRawFormlyControlTemplates","getFormlyControlTemplateForNcolumnLine","controlToReturn","aPropToAdd","easyFormGenVersion","$filter","$anchorScroll","toaster","$timeout","$modal","$log","formFieldManage","formsByIdService","controllerModalProxy","dragDropItemDecorationService","dragDropConfig","ddModelConfModelProxyService","ddItemRightClickedManager","onSubmit","pop","timeout","body","vm","model","showCloseButton","addNewline","applyConfigurationToformlyModel","configuration","wfFormFields","wfFormFieldsOnlyNeededProperties","easyFormGeneratorVERSION","tab","editTab","active","previewTab","ihm","preview","formlyModelViewExpanded","formlyFieldsViewExpanded","customizeFormButtonsExpanded","saveThisFormExpanded","easyFormDragDropProperties","dragDropModel","numberOfColumns","MaxNumberOfColumns","MinNumberOfColumns","initConfigurationEditFromScratch","initProxyModel","collapseAllGroupControl","allExceptThisGroupIndex","resetToZeroModel","splice","countConfigurationModelLines","setActiveLineNumber","lineNumber","upThisLine","indexLine","currentLineObj","downThisLine","removeThisLine","index","increaseNumberOfColumns","newNumberOfColumns","decreaseNumberOfColumns","indexColumn","saveThisForm","formName","wfForm","formlyField","JSON","stringify","clear","nyaSelect","initNyaSelect","animationsEnabled","showModalAddCtrlToColumn","size","numcolumn","modalInstance","animation","templateUrl","resolve","getNyASelectFromSelectedLineColumn","result","then","modalAddCtrlModel","bindConfigurationModelFromModalReturn","info","Date","dragoverCallbackContainer","parentparentIndex","parentIndex","dropCallback","event","item","external","allowedType","isArray","timerRefreshDDToConfig","refreshAllConfigurationFromDragAndDropModel","refreshControlsKeys","$on","cancel","dndItemMoved","parentParentIndex","itemIndex","dragoverCallbackItems","ParentParentIndex","disableItemDropIf","dropCallbackItems","realIndex","parentParentParentIndex","setUnRightClicked","editPanelModel","toggle","saveFromEditPanel","bindSpecialCtrlTemporyModelsToProxyModel","bindConfigurationModelFromProxyModel","getEditPanelModelLineIndex","getEditPanelModelColumnIndex","setEditPanelModelToggle","getEditPanelModelToggle","resetAllDragDropItemSelectedState","closeEditPanel","debugProxyModel","ProxyModel","setRightClicked","previousState","rightCliked","toggleEditPanel","lineIndex","colIndex","getEditPanelModelControl","equals","timerCloseOpenedEditPanel","setEditPanelModelLineIndex","setEditPanelModelColumnIndex","setEditPanelModelControl","setProxyModelFromConfigurationSelection","insertNewLine","$modalInstance","selectOptionManage","bindRadioFromNYA","newOption","option","order","radioRowCollection","rows","bindRadioToNya","resetNyASelectOptions","bindBasicSelectFromNYA","basicSelectRowCollection","bindBasicSelectToNya","bindGroupedSelectFromNYA","groupedSelectRowCollection","filteredgroup","_","uniq","pluck","GroupedSelectGroups","list","bindGroupedSelectToNya","initDatePicker","demodt","formats","resetTemporyConfig","initOptionModel","newOptionRadio","saisie","addNewOptionRadio","resultFlag","details","removeRadioRow","removeOption","upThisRadioRow","upthisOption","downThisRadioRow","downthisOption","newOptionBasicSelect","addNewOptionBasicSelect","removeRow","upThisRow","downThisRow","newOptionGroupedSelect","newGroupGroupedSelect","groupSelectGroupClick","showList","showGroupListToChoose","addNewGroupToGroupedSelect","addNewOptionGroupedSelect","removeGroupedSelectRow","upThisGroupedSelectRow","downThisGroupedSelectRow","today","dt","dateOptions","formatYear","startingDay","showWeeks","initDate","modelNyaSelect","selectThisControl","controlName","ok","applyConfigToSelectedControl","close","dismiss","self","proxyModel","resetAllTemporyModels","modelproxyModel","bindBasicSelectFromProxyModel","bindGroupedSelectFromProxyModel","bindRadioFromProxyModel","updateSpecialControl","resetControl","directive","dragDropItemCounterService","valueWhenPlaceholder","valueWhendragging","fullModel","currentIndex","forceRefresh","restrict","link","element","timer","$watch","children","newValue","oldValue","newRealCount","listClassForThisRow","isHtmlElementToCount","classList","isReal","contentRealCount","updateLineItemCss","console","warn","htmlTemplate","styleParam","isStillCollapsed","collpaseAll","transclude","isEnabled","collapseFct","exceptThisOne","icons","closedClass","currentIconClass","attrs","ctrl","verboseModeActive","verbose","lowercase","dir","whoAmI","verbodeMode","$parent","$index","ParentIndex","columnindex","newVal","oldVal","currentTitle","contentClone","childDiv","append","addNewLineFct","headerConfig","HeaderButtonVisible","affixAttr","affixEnabled","currentFontAwesome","lineItemsCount","listClass","css","removeClass","addClass","removeLine","deleteLine","readyToDelete","dblClickCount","removeMe","cancelDelete","on","$parse","fn","edaRightClick","columnIndex","edaRightClickColIndex","fctSetRightclicked","edaSetRightClicked","$apply","ratio","factory","_modelItemRealCounter","_itemsNotToCount","getModelItemsRealCounter","htmlvalue","isToCount","classes","listCssToApply","columIndex","realCount","j","dragDropModelItem","_listItemClass","getListClass","getCssClassWhenNumberItemsInRowIs","thisNumber","applyCssClassWholeLine","numberItems","restrictToThisIndexColumn","updateCssClassWholeColumn","cpt","EasyFormGenFormlyBindingModels","getFormlyDetailedControlModelFromDragDropObject","dragDrapCtrlModel","controlModel","listControl","controlsListGetter","ctrlListValue","validKeyUniqueness","thisKey","configurationObj","isUnique","createUniqueKey","baseKeyValue","newKey","now","applyThisLine","linevalue","configModel","aLineValue","aLineKey","bindConfigCtrlModelFromFormlyDetailedCtrlModel","formlyDetailCtrlModel","configurationCtrlModel","assign","ddModel","lineValue","keyValue","colValue","controlToBind","formlyDetailedControlModel","configModelControl","newClassName","aConfigLine","aConfigLineIndex","aConfigControl","aConfigControlIndex","when","configModel is ","dragDropModel is ","resetNyaSelect","nyaSelectObj","newNyaSelectObj","resetProxyModel","newProxyModel","returnControlFromAddCtrlModalModel","CtrlModalModel","modelToReturn","getSelectedProxyModel","configurationSelectedCtrl","selectedProxyModelControl","listProxyModelCTRL","subtype","extractedProps","edited","thisProxyModelToInit","getProxyModel","getEditPanelModelAllModel","newEditPanelModel","successfullDone","newColumnIndex","newLineIndex","newControl","newToggleValue","bindBasicSelectToProxyModel","bindGroupedSelectToProxyModel","bindRadioToProxyModel","resetproxyModelOptions","resetFormlyModel","formlyModel","resetformly","AddNColumnControl","configurationModel","indexFormlyModel","fieldGroup","column","controlTemplate","headerTextContent","resetDataModel","obj","emptyDataModel","getErrorObject","errorTitle","errorMessage","messageObj","noError","Message","getMessageObject","messageTitle","messageBody","configurationModelInit","bindConfigurationLines","Object","prototype","toString","call","configurationModelResult","formlyDataModel","$resource","validOption","selectObj","newOptionText","fullResponse","resetModel","zeroModel","testMe","initModel","isOptionUnique","textValue","isOptionValidFormat","checkResult","newOptionGroup","AtIndex","indexOption","currentOption","filter","$sce","trustAs"],"mappings":"CAOE,WACA,YA8CA,SAASA,GAAOC,GAoBd,QAASC,KACR,OACI,6BAGA,4CACO,4CACA,6CACA,aAGP,8CACO,0EACA,6CACA,aAEP,UACCC,KAAK,IAQX,QAASC,KACR,OACI,oCACA,+BAEA,yBACA,mCACA,4FACA,kBACA,eAGA,yBACA,mCACA,0EACA,kBACA,cACA,YACAC,EACA,UACCF,KAAK,IAQX,QAASG,KACR,OACQ,oCACA,+BAEA,wBACA,kCACA,sGACA,iBACA,cAGA,8CAEA,wBACA,uCACA,iCAEA,iIACA,+BACA,2LACA,uBAEA,gBACA,qBACA,aAEA,WACAD,EACA,WACEF,KAAK,IAQjB,QAASI,KACR,OACM,oCACA,+BAEA,wBACA,kCACA,sGACA,iBACA,cAGA,8CAEA,wBACA,uCAEA,iCAEA,mIACA,+BACA,+LACA,uBAEA,gBAEA,qBACA,aAEA,WACAF,EACA,WACCF,KAAK,IAQb,QAASK,KACR,OACK,oCACA,+BAEA,wBACA,kCACA,sGACA,iBACA,cAGA,8CAGA,wBACA,uCAEA,iCAES,2HACA,+BACA,uLACA,uBAET,gBAEA,qBACA,aAEA,8CAGA,wBACA,uCAEA,iCAES,iIACA,+BACA,sMACA,uBAET,gBAEA,qBACA,aAEA,8CAGA,wBACA,uCAEA,wBAES,oIACA,uCACA,kEACA,gIACA,uBAET,gBAEA,qBACA,aAGA,8CAGA,wBACA,uCAEA,iCAES,iIACA,+BACA,gMACA,uBAET,gBAEA,qBACA,aAGA,WACAH,EACA,WACCF,KAAK,IAQZ,QAASM,KACR,OACM,oCACA,+BAEA,wBACA,kCACA,sGACA,iBACA,cAGA,8CAGA,wBACA,uCAEA,iCAEU,2HACA,+BACA,uLACA,uBAEV,gBAEA,qBACA,aAEA,8CAGA,wBACA,uCAEA,iCAEU,wHACA,+BACA,sMACA,uBAEV,gBAEA,qBACA,aAEA,8CAGA,wBACA,uCAEA,wBAEU,2HACA,uCACA,kEACA,uHACA,uBAEV,gBAEA,qBACA,aAEA,8CAGA,wBACA,uCAEA,iCAEU,wHACA,+BACA,uLACA,uBAEV,gBAEA,qBACA,aAGA,WACAJ,EACA,WACCF,KAAK,IAQb,QAASO,KACR,OACK,oCACA,+BAEA,wBACA,kCACA,sGACA,iBACA,cAGA,8CAGS,uFACA,uBACA,4JACA,6GACA,oCACA,kBACA,gBACA,eAGT,8CAGA,wBACA,uCAEA,iCAES,2HACA,+BACA,uLACA,uBAET,gBAEA,qBACA,aAEA,8CAGA,wBACA,uCAEA,wBAES,2HACA,uCACA,kEACA,uHACA,uBAET,gBAEA,qBACA,aAEA,8CAGA,wBACA,uCAEA,iCAES,wHACA,+BACA,uLACA,uBAET,gBAEA,qBACA,aAGA,WACAL,EACA,WACCF,KAAK,IAQZ,QAASQ,KACR,OACK,oCACA,+BAEA,wBACA,kCACA,sGACA,iBACA,cAGA,8CAGA,wBACA,uCAEA,iCAES,2HACA,+BACA,uLACA,uBAET,gBAEA,qBACA,aAEA,8CAGA,wBACA,uCAEA,wBAES,2HACA,uCACA,kEACA,uHACA,uBAET,gBAEA,qBACA,aAEA,8CAGA,wBACA,uCAEA,iCAES,wHACA,+BACA,uLACA,uBAET,gBAEA,qBACA,aAGA,WACAN,EACA,WACCF,KAAK,IAQZ,QAASS,KACR,OACK,oCACA,+BAEA,wBACA,kCACA,sGACA,iBACA,cAGA,8CAGA,wBACA,uCAEA,iCAES,wHACA,+BACA,uLACA,uBAET,gBAEA,qBACA,aAGA,WACAP,EACA,WACCF,KAAK,IAQZ,QAASU,KACR,OACK,oCACA,+BAEA,wBACA,kCACA,sGACA,iBACA,cAIA,8CAGS,sBACA,0CACA,sHACA,cACA,WACA,sBACA,cACA,qCACA,kEACA,wJACA,uBACA,kEACA,sGACA,uBACA,mBACA,eACA,WACA,sBACA,0CACA,0HACA,cACA,WACA,sBACA,oCAEA,sEACA,4CACA,mFACA,+GACA,iCACA,6GACA,oCACA,iCACA,6DACA,8DACA,wDACA,kCACA,iCACA,wDACA,mDACA,gJACA,sCACA,wDACA,kCACA,qCACA,sCACA,4HACA,sEACA,+EACA,uDACA,iEACA,4JACA,oKACA,2JACA,gDACA,0CACA,sCACA,qCACA,iCACA,2BACA,uBAEA,kBACA,WAGT,8CAGA,wBACA,uCAEA,iCAES,2HACA,+BACA,uLACA,uBAET,gBAEA,qBACA,aAEA,8CAGA,wBACA,uCAEA,wBAES,2HACA,uCACA,kEACA,uHACA,uBAET,gBAEA,qBACA,aAEA,8CAGA,wBACA,uCAEA,iCAES,wHACA,+BACA,uLACA,uBAET,gBAEA,qBACA,aAGA,WACAR,EACA,WACCF,KAAK,IAQZ,QAASW,KACR,OACK,oCACA,+BAEA,wBACA,kCACA,sGACA,iBACA,cAGA,8CAGA,wBACA,uCAEA,iCAES,2HACA,+BACA,uLACA,uBAET,gBAEA,qBACA,aAEA,8CAGA,wBACA,uCAEA,wBAES,2HACA,uCACA,kEACA,uHACA,uBAET,gBAEA,qBACA,aAEA,8CAGA,wBACA,uCAEA,iCAES,wHACA,+BACA,uLACA,uBAET,gBAEA,qBACA,aAGA,WACAT,EACA,WACCF,KAAK,IAQZ,QAASY,KACR,OACK,oCACA,+BAEA,wBACA,kCACA,sGACA,iBACA,cAGA,8CAIS,sBACA,0CACA,8HACA,cACA,WACA,sBACA,cACA,qCACA,kEACA,+JACA,uBACA,kEACA,4GACA,uBACA,mBACA,eACA,WAGA,qBACA,0CACA,oGACA,cACA,WACA,sBACA,oCACA,kEACA,wCACA,mFACA,uGACA,2BACA,+GACA,gCACA,6BACA,yDACA,0DACA,oDACA,8BACA,6BACA,oDACA,+CACA,wJACA,kCACA,oDACA,8BACA,iCACA,gCACA,4IACA,8DACA,6EACA,+CACA,yDACA,6IACA,iJACA,4IACA,wCACA,kCACA,8BACA,iCACA,6BACA,uBACA,mBACA,kBACA,WAGA,4CAGT,wBACA,uCACA,iCACS,wHACA,+BACA,uLACA,uBACT,gBACA,qBACA,aAEA,WACAV,EACA,WACCF,KAAK,IAQZ,QAASa,KACR,OACK,oCACA,+BAEA,wBACA,kCACA,sGACA,iBACA,cAGA,8CAGS,sBACA,0CACA,+HACA,cACA,WACA,sBACA,cACA,qCACA,kEACA,mKACA,uBACA,kEACA,8GACA,uBACA,kBACA,eACA,YAGA,sBACA,0CACA,+HACA,cACA,WACA,sBACA,cACA,qCACA,kEACA,kNACA,uBACA,kEACA,+GACA,uBACA,mBACA,eACA,WAGA,sBACA,0CACA,0GACA,cACA,WACA,sBACA,oCACA,kEACA,wCACA,qFACA,uGACA,2BACA,iHACA,gCACA,6BACA,yDACA,yDACA,0DACA,oDACA,8BACA,6BACA,oDACA,oDACA,+CACA,oJACA,kCACA,oDACA,8BACA,iCACA,gCACA,oJACA,8DACA,+CACA,4FACA,0FACA,4FACA,uCACA,wFACA,uMACA,4FACA,iKACA,sEACA,4CACA,0CACA,uCACA,uCACA,6FACA,2DACA,uCACA,kCACA,+EACA,+CACA,yDACA,4JACA,gKACA,6JACA,2JACA,wCACA,kCACA,8BACA,iCACA,6BACA,uBACA,mBACA,kBACA,WAGT,8CAGA,wBACA,uCAEA,iCAES,wHACA,+BACA,uLACA,uBAET,gBAEA,qBACA,aAGA,WACAX,EACA,WACCF,KAAK,IA3gCV,GAAIE,GAAkBH,GACtBD,GAAegB,IAAI,+BAAgCb,KACnDH,EAAegB,IAAI,gCAAiCX,KACpDL,EAAegB,IAAI,kCAAmCV,KACtDN,EAAegB,IAAI,mCAAoCT,KACvDP,EAAegB,IAAI,kCAAoCR,KACvDR,EAAegB,IAAI,8BAA+BP,KAClDT,EAAegB,IAAI,kCAAmCN,KACtDV,EAAegB,IAAI,wCAAyCL,KAC5DX,EAAegB,IAAI,+BAAgCJ,KACnDZ,EAAegB,IAAI,kCAAmCH,KACtDb,EAAegB,IAAI,qCAAsCF,KACzDd,EAAegB,IAAI,uCAAwCD,KAxChEE,QACGC,OAAO,UACc,mBACZ,qBACA,kBACA,iBACA,oBACA,cACA,mBACA,YACA,UACA,SACA,kBACA,eACA,uBACY,WACA,uBACA,wBAGrBC,MAAM,qBAAsB,UAC5BC,IAAIrB;AAILA,EAAOsB,SAAW,kBA+hCpBJ,QACEC,OAAO,UACPI,QAAQ,yBAET,SAAUC,GAEPA,EAAuBC,oBAEqBC,iBAAsB,yBAkBtER,QACEC,OAAO,UACPI,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CbH,KAAc,WACdI,SAAgB,WAChBC,MAAc,WACdC,WAAiB,WACjBC,cAAkB,GAClBC,YAAiB,GACjBC,gBAAmB,EACnBC,iBAAoB,GACpBC,mBAWHxB,EAAuByB,uCAGpBC,OACM,0BACA,yBACA,8BACA,uEACA,kEACA,qDACA,aACA,SACA,mDACA,UACC/C,KAAK,IACXgD,QAAU,WACVC,SAAU,cAGXC,eAAiB,cASpB,IAAIkC,IACU,qEACA,6CACA,kBACA,8DACA,2FACA,+BACA,YACA,WACCpF,KAAK,GAEpBwB,GAAqBS,SAEnBC,KAAU,cACVC,SAAYiD,IAId3D,EAAuCW,0BAEpCC,GAAa,cACbH,KAAc,eACdI,SAAgB,eAChBoC,WACAnC,MAAc,SACdC,WAAiB,cACjBC,cAAkB,GAClBC,YAAiB,GACjBC,gBAAmB,EACnBC,iBAAoB,GACpBC,mBAWHxB,EAAuByB,uCAEpBC,OACM,0BACA,+BAEA,sEACA,0HACA,sCACA,6BACA,6EACA,4CACA,mDACA,YACA,sCACA,YAEA,aACA,UACC/C,KAAK,IACXgD,QAAU,cACVC,SAAU,cAGXC,eAAiB,WASlB,IAAImC,IACU,sEACA,+CACA,iCACA,iEACA,gGACA,0DACA,cACA,yCACA,oEACA,eACA,cACA,WACIrF,KAAK,IACzBwB,GAAqBS,SAEnBC,KAAW,gBACXC,SAAYkD,IAId5D,EAAuCW,0BAEpCC,GAAa,gBACbH,KAAc,iBACdI,SAAgB,iBAChBoC,WACAnC,MAAc,SACdC,WAAiB,gBACjBC,cAAkB,GAClBC,YAAiB,GACjBC,gBAAmB,EACnBC,iBAAoB,GACpBC,mBAWHxB,EAAuByB,uCAEpBC,OACM,0BACA,+BAEA,sEACA,0HACA,sCACA,6BACA,6EACA,4CACA,qDACA,YACA,sCACA,YAEA,aACA,UACC/C,KAAK,IACZgD,QAAU,gBACVC,SAAU,cAGVC,eAAiB,eAQtBnC,QAAQC,OAAO,UAAUE,KAAK,iBAAkB,SAASpB,GAAiBA,EAAegB,IAAI,yBAAyB,gCAgBtHC,QACGC,OAAO,8CACPsE,SAAS,kBAER,WA2QE,QAASC,GAAkBC,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","file":"eda.dragdropway.js","sourcesContent":["/** \n  *easyFormGenerator — drag and drop way — version \n  *Version 1.1.3 \n  *Author : Erwan Datin (MacKentoch) \n  *Link: https://github.com/MacKentoch/easyFormGenerator \n  *License : MIT (2015) \n **/ \n ;(function(){\n \t'use strict';\n/// <reference path=\"../../../typings/lodash/lodash.d.ts\"/>\n/// <reference path=\"../../../typings/angularjs/angular.d.ts\"/>\n/**\n *  -----------------------------------------------------------------------\n *  application module of the drag and drop version of easy form generator\n *  -----------------------------------------------------------------------\n *\n *  This version is not finished and is under heavy developments\n *  \n *   \n *     - do not use as production -\n *\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n\nangular\n  .module('edaApp', [\n                        'edaApp.providers',\t\n\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.controllers',\n\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.services', \n\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.filters',\n\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.directives',\n\t\t\t\t\t\t\t\t\t\t\t\t'textAngular',\n\t\t\t\t\t\t\t\t\t\t\t\t'textAngularSetup',\n\t\t\t\t\t\t\t\t\t\t\t\t'ngAnimate',\n\t\t\t\t\t\t\t\t\t\t\t\t'toaster',\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t'formly', \n\t\t\t\t\t\t\t\t\t\t\t\t'formlyBootstrap',\n\t\t\t\t\t\t\t\t\t\t\t\t'ui.bootstrap',\n\t\t\t\t\t\t\t\t\t\t\t\t'nya.bootstrap.select',\n                        'dndLists',\n                        'mgcrea.ngStrap.affix',\n                        'pageslide-directive'\n\t                     ])\n\n  .value('easyFormGenVersion', 'v1.1.3')\n  .run(runfct);\n\n\n\n  runfct.$inject = ['$templateCache'];\n  function runfct($templateCache){\n  \t\t\n  \t\t var validEditFooter = validEditFooterTpl();\n  \t\t $templateCache.put('editPanelBlankCtrl-tpls.html', editPanelBlankCtrlTpls());\n  \t\t $templateCache.put('editPanelHeaderCtrl-tpls.html', editPanelHeaderCtrlTpl());\n  \t\t $templateCache.put('editPanelSubTitleCtrl-tpls.html', editPanelSubTitleCtrlTpl());\n  \t\t $templateCache.put('editPanelTextInputCtrl-tpls.html', editPanelTextInputCtrlTpl());\n  \t\t $templateCache.put('editPanelPasswordCtrl-tpls.html', \teditPanelPasswordCtrlTpl());\n  \t\t $templateCache.put('editPanelDateCtrl-tpls.html', editPanelDateCtrlTpl());\t\n  \t\t $templateCache.put('editPanelTextareaCtrl-tpls.html', editPanelTextareaCtrlTpl());\n  \t\t $templateCache.put('editPanelRichTextEditorCtrl-tpls.html', editPanelRichTextEditorCtrlTpl());\n  \t\t $templateCache.put('editPanelRadioCtrl-tpls.html', editPanelRadioCtrlTpl());\n  \t\t $templateCache.put('editPanelCheckboxCtrl-tpls.html', editPanelCheckboxCtrlTpl());\n  \t\t $templateCache.put('editPanelBasicSelectCtrl-tpls.html', editPanelBasicSelectCtrlTpl());\n  \t\t $templateCache.put('editPanelGroupedSelectCtrl-tpls.html', editPanelGroupedSelectCtrlTpl());\n\n  \t\t/**\n  \t\t * commun to all control edit templates\n  \t\t *  -> footer valid button\n  \t\t */\n  \t\tfunction validEditFooterTpl() {\n  \t\t\treturn\t[\n\t\t\t\t\t\t\t\t\t'<div class=\"modal-footer\">',\n\n\t\t\t\t\t\t\t\t\t//reset button\n\t\t\t\t\t\t\t\t\t'\t<button class=\"btn btn-danger pull-left\"',\n\t\t              '\t        ng-click=\"panel.resetControl()\">',\n\t\t              ' \t<i class=\"fa fa-refresh\"></i>&nbsp;Reset',\n\t\t              ' </button>',\n\n\t\t\t\t\t\t\t\t\t//save button\n\t\t\t\t\t\t\t\t\t'\t<button class=\"btn btn-success pull-right\"',\n\t\t              '\t        ng-click=\"panel.updateSpecialControl(); saveFromEditPanel();\">',\n\t\t              ' \t<i class=\"fa fa-floppy-o\"></i>&nbsp;Save',\n\t\t              ' </button>',\n\t\t              //\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t'</div>'\n\t\t\t\t\t\t\t\t].join('');\n  \t\t} \n\n\t\t\t/**\n  \t\t * register template cache for side edit control panel\n  \t\t * \n  \t\t * control : \"blank\"\n  \t\t */\n  \t\tfunction editPanelBlankCtrlTpls() {\n  \t\t\treturn\t[\n\t\t\t\t\t\t\t\t\t'<div class=\"panel panel-default\">',\n\t\t\t\t\t\t\t\t\t'    <div class=\"panel-body\">',\n\n\t\t\t\t\t\t\t\t\t'\t    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'\t        <div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t'\t            <h5 class=\"greyText\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp; Edit :</h5>',\n\t\t\t\t\t\t\t\t\t'\t        </div>',\n\t\t\t\t\t\t\t\t\t'\t    </div> ',\n\t\t\t\t\t\t\t\t\t//'\t    <hr/>',\n\n\t\t\t\t\t\t\t\t\t'\t    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'\t        <div class=\"col-sm-12\">',\n\t\t\t\t\t\t\t\t\t'\t            <h5 class=\"text-center greyText\">Column will be blank</h5>',\n\t\t\t\t\t\t\t\t\t'\t        </div>',\n\t\t\t\t\t\t\t\t\t'\t    </div>',\n\t\t\t\t\t\t\t\t\t'   </div>',\n\t\t\t\t\t\t\t\t\tvalidEditFooter,\n\t\t\t\t\t\t\t\t\t'</div>'\n\t\t\t\t\t\t\t\t].join('');\n\t\t\t}\n\n  \t\t/**\n  \t\t * register template cache for side edit control panel\n  \t\t * \n  \t\t * control : \"Header\"\n  \t\t */\n  \t\tfunction editPanelHeaderCtrlTpl(){\n  \t\t\treturn   \t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t'<div class=\"panel panel-default\">',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'    <div class=\"panel-body\">',\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'        <div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'            <h5 class=\"greyText\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp; Edit properties :</h5>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'        </div>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'    </div> ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t//'    <hr/>',\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t'              <label for=\"inputTextDescriptionUpdate\" class=\"control-label greyText editPropertiesLabel\">Header text :</label>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'              <div class=\"\">',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyDesciption\" id=\"inputHeaderTextUpdate\" placeholder=\"Add / edit header text here\">',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'              </div>',\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'    </div>',\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t'  </div>',\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidEditFooter,\n\t\t\t\t\t\t\t\t\t\t\t\t\t'</div> '\n  \t\t\t\t\t\t\t\t\t\t\t].join('');\n  \t\t}  \n\n\t \t\t/**\n\t\t\t * register template cache for side edit control panel\n\t\t\t * \n\t\t\t * control : \"SubTitle\"\n\t\t\t */\n\t\t\tfunction editPanelSubTitleCtrlTpl(){\n\t\t\t\treturn \t[\n\t\t\t\t\t\t\t\t\t\t'<div class=\"panel panel-default\">',\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"panel-body\">',\n\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t\t'        <div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t\t'            <h5 class=\"greyText\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp; Edit properties :</h5>',\n\t\t\t\t\t\t\t\t\t\t'        </div>',\n\t\t\t\t\t\t\t\t\t\t'    </div> ',\n\t\t\t\t\t\t\t\t\t\t//'    <hr/>',\n\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n\t\t\t\t\t\t\t\t\t\t'              <label for=\"inputTextDescriptionUpdate\" class=\"control-label greyText editPropertiesLabel\">Subtitle text :</label>',\n\t\t\t\t\t\t\t\t\t\t'              <div class=\"\">',\n\t\t\t\t\t\t\t\t\t\t'                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyDesciption\" id=\"inputSubtitleTextUpdate\" placeholder=\"Add / edit subtitle text here\">',\n\t\t\t\t\t\t\t\t\t\t'              </div>',\n\n\t\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t\t'    </div>',\n\n\t\t\t\t\t\t\t\t\t\t'  </div>',\n\t\t\t\t\t\t\t\t\t\tvalidEditFooter,\n\t\t\t\t\t\t\t\t\t\t'</div> '\n\t\t\t\t\t\t\t\t\t].join('');\n\t\t\t} \n\n\t \t\t/**\n\t\t\t * register template cache for side edit control panel\n\t\t\t * \n\t\t\t * control : \"TextInput\"\n\t\t\t */\n\t\t\tfunction editPanelTextInputCtrlTpl(){\n\t\t\t\treturn \t[\n\t\t\t\t\t\t\t\t\t'<div class=\"panel panel-default\">',\n\t\t\t\t\t\t\t\t\t'    <div class=\"panel-body\">',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'        <div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t'            <h5 class=\"greyText\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp; Edit properties :</h5>',\n\t\t\t\t\t\t\t\t\t'        </div>',\n\t\t\t\t\t\t\t\t\t'    </div> ',\n\t\t\t\t\t\t\t\t\t//'    <hr/>',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//label text\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                  '              <label for=\"inputTextLabelUpdate\" class=\" control-label greyText editPropertiesLabel\">Label text :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyLabel\" id=\"inputTextLabelUpdate\" placeholder=\"Add / edit control label here\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//placeholder\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                  '              <label for=\"inputTextplaceholderUpdate\" class=\"control-label greyText editPropertiesLabel\">placeholder :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyPlaceholder\" id=\"inputTextplaceholderUpdate\" placeholder=\"Add / edit placeholder text here\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\t\t\t\t\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//required\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"\">',\n\n                  '              <label for=\"inputTextRequiredUpdate\" class=\"col-md-4 control-label greyText editPropertiesLabel\">Required :</label>',\n                  '              <div class=\"col-md-8\">',\n                  '                <div class=\"checkboxCssCorrection\">&nbsp;</div>',\n                  '                <input type=\"checkbox\" ng-model=\"panel.proxyModel.temporyConfig.formlyRequired\" id=\"inputTextRequiredUpdate\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//description\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                  '              <label for=\"inputTextDescriptionUpdate\" class=\"control-label greyText editPropertiesLabel\">Description :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyDesciption\" id=\"inputTextDescriptionUpdate\" placeholder=\"Add / edit description here\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\n\t\t\t\t\t\t\t\t\t'  </div>',\n\t\t\t\t\t\t\t\t\tvalidEditFooter,\n\t\t\t\t\t\t\t\t\t'</div> '\n\t\t\t\t\t\t\t\t].join('');\n\t\t\t}\n\n\t \t\t/**\n\t\t\t * register template cache for side edit control panel\n\t\t\t * \n\t\t\t * control : \"Password\"\n\t\t\t */\n\t\t\tfunction editPanelPasswordCtrlTpl(){\n\t\t\t\treturn [\n\t\t\t\t\t\t\t\t\t\t'<div class=\"panel panel-default\">',\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"panel-body\">',\n\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t\t'        <div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t\t'            <h5 class=\"greyText\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp; Edit properties :</h5>',\n\t\t\t\t\t\t\t\t\t\t'        </div>',\n\t\t\t\t\t\t\t\t\t\t'    </div> ',\n\t\t\t\t\t\t\t\t\t\t//'    <hr/>',\n\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t\t//label text\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                    '              <label for=\"inputTextLabelUpdate\" class=\" control-label greyText editPropertiesLabel\">Label text :</label>',\n                    '              <div class=\"\">',\n                    '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyLabel\" id=\"inputTextLabelUpdate\" placeholder=\"Add / edit control label here\">',\n                    '              </div>',\n\n\t\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t\t'    </div>',\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t\t//placeholder\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                    '              <label for=\"placeholderUpdate\" class=\"control-label greyText editPropertiesLabel\">placeholder :</label>',\n                    '              <div class=\"\">',\n                    '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyPlaceholder\" id=\"inputTextplaceholderUpdate\" placeholder=\"Add / edit placeholder text here\">',\n                    '              </div>',\n\n\t\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t\t'    </div>',\t\t\t\t\t\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t\t//required\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"\">',\n\n                    '              <label for=\"RequiredUpdate\" class=\"col-md-4 control-label greyText editPropertiesLabel\">Required :</label>',\n                    '              <div class=\"col-md-8\">',\n                    '                <div class=\"checkboxCssCorrection\">&nbsp;</div>',\n                    '                <input type=\"checkbox\" ng-model=\"panel.proxyModel.temporyConfig.formlyRequired\" id=\"RequiredUpdate\">',\n                    '              </div>',\n\n\t\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t\t//description\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                    '              <label for=\"DescriptionUpdate\" class=\"control-label greyText editPropertiesLabel\">Description :</label>',\n                    '              <div class=\"\">',\n                    '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyDesciption\" id=\"DescriptionUpdate\" placeholder=\"Add / edit description here\">',\n                    '              </div>',\n\n\t\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\n\t\t\t\t\t\t\t\t\t\t'  </div>',\n\t\t\t\t\t\t\t\t\t\tvalidEditFooter,\n\t\t\t\t\t\t\t\t\t\t'</div> '\n\t\t\t\t\t\t\t\t\t].join('');\n\t\t\t} \n\n\t \t\t/**\n\t\t\t * register template cache for side edit control panel\n\t\t\t * \n\t\t\t * control : \"Date\"\n\t\t\t */\n\t\t\tfunction editPanelDateCtrlTpl(){\n\t\t\t\treturn \t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t'<div class=\"panel panel-default\">',\n\t\t\t\t\t\t\t\t\t'    <div class=\"panel-body\">',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'        <div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t'            <h5 class=\"greyText\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp; Edit properties :</h5>',\n\t\t\t\t\t\t\t\t\t'        </div>',\n\t\t\t\t\t\t\t\t\t'    </div> ',\n\t\t\t\t\t\t\t\t\t//'    <hr/>',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//date format\n                  '     <label class=\"control-label greyText editPropertiesLabel\">Date format :</label>',\n                  '      <div class=\"\">',\n                  '        <ol class=\"nya-bs-select col-sm-12 col-xs-12 col-md-12 col-lg12\" ng-model=\"panel.proxyModel.temporyConfig.datepickerPopup\" id=\"dateformatSelect\">',\n                  '          <li class=\"nya-bs-option\" nya-bs-option=\"dateformat in panel.demodt.formats\" value=\"dateformat\">',\n                  '            <a>{{dateformat}}</a>',\n                  '          </li>',\n                  '        </ol>',\n                  '      </div>',\n\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//label text\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                  '              <label for=\"inputTextLabelUpdate\" class=\" control-label greyText editPropertiesLabel\">Label text :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyLabel\" id=\"inputTextLabelUpdate\" placeholder=\"Add / edit control label here\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//required\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"\">',\n\n                  '              <label for=\"RequiredUpdate\" class=\"col-md-4 control-label greyText editPropertiesLabel\">Required :</label>',\n                  '              <div class=\"col-md-8\">',\n                  '                <div class=\"checkboxCssCorrection\">&nbsp;</div>',\n                  '                <input type=\"checkbox\" ng-model=\"panel.proxyModel.temporyConfig.formlyRequired\" id=\"RequiredUpdate\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//description\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                  '              <label for=\"DescriptionUpdate\" class=\"control-label greyText editPropertiesLabel\">Description :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyDesciption\" id=\"DescriptionUpdate\" placeholder=\"Add / edit description here\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\n\t\t\t\t\t\t\t\t\t'  </div>',\n\t\t\t\t\t\t\t\t\tvalidEditFooter,\n\t\t\t\t\t\t\t\t\t'</div> '\n\t\t\t\t\t\t\t\t].join('');\n\t\t\t}\n\n\t \t\t/**\n\t\t\t * register template cache for side edit control panel\n\t\t\t * \n\t\t\t * control : \"Textarea\"\n\t\t\t */\n\t\t\tfunction editPanelTextareaCtrlTpl(){\n\t\t\t\treturn \t[\n\t\t\t\t\t\t\t\t\t'<div class=\"panel panel-default\">',\n\t\t\t\t\t\t\t\t\t'    <div class=\"panel-body\">',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'        <div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t'            <h5 class=\"greyText\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp; Edit properties :</h5>',\n\t\t\t\t\t\t\t\t\t'        </div>',\n\t\t\t\t\t\t\t\t\t'    </div> ',\n\t\t\t\t\t\t\t\t\t//'    <hr/>',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//label text\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                  '              <label for=\"inputTextLabelUpdate\" class=\" control-label greyText editPropertiesLabel\">Label text :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyLabel\" id=\"inputTextLabelUpdate\" placeholder=\"Add / edit control label here\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//required\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"\">',\n\n                  '              <label for=\"RequiredUpdate\" class=\"col-md-4 control-label greyText editPropertiesLabel\">Required :</label>',\n                  '              <div class=\"col-md-8\">',\n                  '                <div class=\"checkboxCssCorrection\">&nbsp;</div>',\n                  '                <input type=\"checkbox\" ng-model=\"panel.proxyModel.temporyConfig.formlyRequired\" id=\"RequiredUpdate\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//description\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                  '              <label for=\"DescriptionUpdate\" class=\"control-label greyText editPropertiesLabel\">Description :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyDesciption\" id=\"DescriptionUpdate\" placeholder=\"Add / edit description here\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\n\t\t\t\t\t\t\t\t\t'  </div>',\n\t\t\t\t\t\t\t\t\tvalidEditFooter,\n\t\t\t\t\t\t\t\t\t'</div> '\n\t\t\t\t\t\t\t\t].join('');\n\t\t\t} \n\n\t \t\t/**\n\t\t\t * register template cache for side edit control panel\n\t\t\t * \n\t\t\t * control : \"RichTextEditor\"\n\t\t\t */\n\t\t\tfunction editPanelRichTextEditorCtrlTpl(){\n\t\t\t\treturn \t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t'<div class=\"panel panel-default\">',\n\t\t\t\t\t\t\t\t\t'    <div class=\"panel-body\">',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'        <div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t'            <h5 class=\"greyText\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp; Edit properties :</h5>',\n\t\t\t\t\t\t\t\t\t'        </div>',\n\t\t\t\t\t\t\t\t\t'    </div> ',\n\t\t\t\t\t\t\t\t\t//'    <hr/>',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//description\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                  '              <label for=\"DescriptionUpdate\" class=\"control-label greyText editPropertiesLabel\">Description :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyDesciption\" id=\"DescriptionUpdate\" placeholder=\"Add / edit description here\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\n\t\t\t\t\t\t\t\t\t'  </div>',\n\t\t\t\t\t\t\t\t\tvalidEditFooter,\n\t\t\t\t\t\t\t\t\t'</div> '\n\t\t\t\t\t\t\t\t].join('');\n\t\t\t}\n\n\t \t\t/**\n\t\t\t * register template cache for side edit control panel\n\t\t\t * \n\t\t\t * control : \"radio\"\n\t\t\t */\n\t\t\tfunction editPanelRadioCtrlTpl(){\n\t\t\t\treturn \t[\n\t\t\t\t\t\t\t\t\t'<div class=\"panel panel-default\">',\n\t\t\t\t\t\t\t\t\t'    <div class=\"panel-body\">',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'        <div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t'            <h5 class=\"greyText\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp; Edit properties :</h5>',\n\t\t\t\t\t\t\t\t\t'        </div>',\n\t\t\t\t\t\t\t\t\t'    </div> ',\n\t\t\t\t\t\t\t\t\t//'    <hr/>',\n\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//add options\n                  '  <div class=\"row\">',\n                  '      <div class=\"col-lg-12 col-md-12\">',\n                  '        <label for=\"radioRowCollection\" class=\" control-label greyText editPropertiesLabel\">Add new radio :</label>',\n                  '     </div>',\n                  '  </div>',\n                  '  <div class=\"row\">',\n                  '      <div>',\n                  '          <div class=\"form-group\">',\n                  '              <div class=\"col-sm-9 col-xs-9 col-md-9 col-lg-9\">',\n                  '              <input type=\"text\" class=\"form-control\" id=\"inputAddNewRadioOption\" placeholder=\"add new radio\" ng-model=\"panel.newOptionRadio.saisie\">',\n                  '              </div>',\n                  '              <div class=\"col-sm-3 col-xs-3 col-md-3 col-lg-3\">',\n                  '                  <button class=\"btn btn-primary\" ng-click=\"panel.addNewOptionRadio()\">add</button>',\n                  '              </div>',\n                  '          </div>',\n                  '      </div>',\n                  '  </div>',\n                  '  <div class=\"row\">',\n                  '      <div class=\"col-lg-12 col-md-12\">',\n                  '        <label for=\"radioRowCollection\" class=\" control-label greyText editPropertiesLabel\">Edit/Remove radio :</label>',\n                  '     </div>',\n                  '  </div>',\n                  '  <div class=\"row\">',\n                  '         <div class=\"form-group\">',\n\n                  '              <div class-\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">',\n                  '                  <div class=\"container\">',\n                  '                      <div ng-show=\"panel.radioRowCollection.rows.length === 0\">',\n                  '                          <h5 class=\"text-center greyText\"><em>- no radio : add new radio values -</em></h5>',\n                  '                      </div>  ',\n                  '                      <table ng-if=\"panel.radioRowCollection.rows.length > 0\" class=\"table table-striped\">',\n                  '                          <thead>',\n                  '                          <tr>',\n                  '                              <th st-ratio=\"20\">order</th>',\n                  '                              <th st-ratio=\"55\">option</th>',\n                  '                              <th st-ratio=\"25\"></th>',\n                  '                          </tr>',\n                  '                          <tr>',\n                  '                              <th st-ratio=\"20\"></th>',\n                  '                              <th st-ratio=\"55\">',\n                  '                                  <input ng-model=\"radioFilter\" placeholder=\"search for option\" class=\"input-sm form-control\" type=\"search\"/>',\n                  '                              </th>',\n                  '                              <th st-ratio=\"25\"></th>',\n                  '                          </tr>',\n                  '                          </thead>',\n                  '                          <tbody>  ',\n                  '                              <tr ng-repeat=\"radioRow in panel.radioRowCollection.rows | filter:radioFilter as radioRow\">',\n                  '                                  <td st-ratio=\"20\">{{$index}}</td>',\n                  '                                  <td st-ratio=\"55\">{{radioRow.option}}</td>',\n                  '                                  <td st-ratio=\"25\">',\n                  '                                      <div class=\"pull-right\">',\n                  '                                          <button class=\"btn btn-primary\" ng-click=\"panel.upThisRadioRow($index)\"><i class=\"fa fa-arrow-up\"></i></button>',\n                  '                                          <button class=\"btn btn-primary\" ng-click=\"panel.downThisRadioRow($index)\"><i class=\"fa fa-arrow-down\"></i></button>    ',\n                  '                                          <button class=\"btn btn-danger\"  ng-click=\"panel.removeRadioRow($index)\"><i class=\"fa fa-trash-o\"></i></button>',\n                  '                                       </div>',   \n                  '                                  </td>',\n                  '                              </tr>',\n                  '                          </tbody>',\n                  '                      </table>',\n                  '                  </div>',\n                  '              </div>',\n\n                  '         </div>',\n                  '  </div>',\n\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//label text\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                  '              <label for=\"inputTextLabelUpdate\" class=\" control-label greyText editPropertiesLabel\">Label text :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyLabel\" id=\"inputTextLabelUpdate\" placeholder=\"Add / edit control label here\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//required\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"\">',\n\n                  '              <label for=\"RequiredUpdate\" class=\"col-md-4 control-label greyText editPropertiesLabel\">Required :</label>',\n                  '              <div class=\"col-md-8\">',\n                  '                <div class=\"checkboxCssCorrection\">&nbsp;</div>',\n                  '                <input type=\"checkbox\" ng-model=\"panel.proxyModel.temporyConfig.formlyRequired\" id=\"RequiredUpdate\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//description\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                  '              <label for=\"DescriptionUpdate\" class=\"control-label greyText editPropertiesLabel\">Description :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyDesciption\" id=\"DescriptionUpdate\" placeholder=\"Add / edit description here\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\n\t\t\t\t\t\t\t\t\t'  </div>',\n\t\t\t\t\t\t\t\t\tvalidEditFooter,\n\t\t\t\t\t\t\t\t\t'</div> '\n\t\t\t\t\t\t\t\t].join('');\n\t\t\t} \n\n\t \t\t/**\n\t\t\t * register template cache for side edit control panel\n\t\t\t * \n\t\t\t * control : \"Checkbox\"\n\t\t\t */\n\t\t\tfunction editPanelCheckboxCtrlTpl(){\n\t\t\t\treturn \t[\n\t\t\t\t\t\t\t\t\t'<div class=\"panel panel-default\">',\n\t\t\t\t\t\t\t\t\t'    <div class=\"panel-body\">',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'        <div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t'            <h5 class=\"greyText\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp; Edit properties :</h5>',\n\t\t\t\t\t\t\t\t\t'        </div>',\n\t\t\t\t\t\t\t\t\t'    </div> ',\n\t\t\t\t\t\t\t\t\t//'    <hr/>',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//label text\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                  '              <label for=\"inputTextLabelUpdate\" class=\" control-label greyText editPropertiesLabel\">Label text :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyLabel\" id=\"inputTextLabelUpdate\" placeholder=\"Add / edit control label here\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//required\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"\">',\n\n                  '              <label for=\"RequiredUpdate\" class=\"col-md-4 control-label greyText editPropertiesLabel\">Required :</label>',\n                  '              <div class=\"col-md-8\">',\n                  '                <div class=\"checkboxCssCorrection\">&nbsp;</div>',\n                  '                <input type=\"checkbox\" ng-model=\"panel.proxyModel.temporyConfig.formlyRequired\" id=\"RequiredUpdate\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//description\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                  '              <label for=\"DescriptionUpdate\" class=\"control-label greyText editPropertiesLabel\">Description :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyDesciption\" id=\"DescriptionUpdate\" placeholder=\"Add / edit description here\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\n\t\t\t\t\t\t\t\t\t'  </div>',\n\t\t\t\t\t\t\t\t\tvalidEditFooter,\n\t\t\t\t\t\t\t\t\t'</div> '\n\t\t\t\t\t\t\t\t].join('');\n\t\t\t} \n\n\t \t\t/**\n\t\t\t * register template cache for side edit control panel\n\t\t\t * \n\t\t\t * control : \"Basic Select\"\n\t\t\t */\n\t\t\tfunction editPanelBasicSelectCtrlTpl(){\n\t\t\t\treturn \t[\n\t\t\t\t\t\t\t\t\t'<div class=\"panel panel-default\">',\n\t\t\t\t\t\t\t\t\t'    <div class=\"panel-body\">',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'        <div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t'            <h5 class=\"greyText\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp; Edit properties :</h5>',\n\t\t\t\t\t\t\t\t\t'        </div>',\n\t\t\t\t\t\t\t\t\t'    </div> ',\n\t\t\t\t\t\t\t\t\t//'    <hr/>',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t//add option input\n                  '  <div class=\"row\">',\n                  '      <div class=\"col-lg-12 col-md-12\">',\n                  '        <label for=\"basicSelectRowCollection\" class=\" control-label greyText editPropertiesLabel\">Add new options :</label>',\n                  '     </div>',\n                  '  </div>',\n                  '  <div class=\"row\">',\n                  '      <div>',\n                  '          <div class=\"form-group\">',\n                  '              <div class=\"col-sm-9 col-xs-9 col-md-9 col-lg-9\">',\n                  '              <input type=\"text\" class=\"form-control\" id=\"inputAddNewBasicOption\" placeholder=\"add new option\" ng-model=\"panel.newOptionBasicSelect.saisie\">',\n                  '              </div>',\n                  '              <div class=\"col-sm-3 col-xs-3 col-md-3 col-lg-3\">',\n                  '                  <button class=\"btn btn-primary\" ng-click=\"panel.addNewOptionBasicSelect()\">add</button>',\n                  '              </div>',\n                  '          </div>',\n                  '      </div>',\n                  '  </div>',                            \n\n                  //options table\n                  ' <div class=\"row\">',\n                  '      <div class=\"col-lg-12 col-md-12\">',\n                  '        <label  class=\" control-label greyText editPropertiesLabel\">Edit/Remove options :</label>',  \n                  '     </div>',\n                  '  </div>',\n                  '  <div class=\"row\">',\n                  '         <div class=\"form-group\">',\n                  '          <div class-\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">',\n                  '              <div class=\"container\">',\n                  '                  <div ng-if=\"panel.basicSelectRowCollection.rows.length === 0\">',\n                  '                      <h5 class=\"text-center greyText\"><em>- no option : add new options -</em></h5>',\n                  '                  </div>',  \n                  '                  <table ng-if=\"panel.basicSelectRowCollection.rows.length > 0\" class=\"table table-striped\">',\n                  '                      <thead>',\n                  '                      <tr>',\n                  '                          <th st-ratio=\"20\">order</th>',\n                  '                          <th st-ratio=\"55\">option</th>',\n                  '                          <th st-ratio=\"25\"></th>',\n                  '                      </tr>',\n                  '                      <tr>',\n                  '                          <th st-ratio=\"20\"></th>',\n                  '                          <th st-ratio=\"55\">',\n                  '                              <input ng-model=\"panel.basicSelectFilter\" placeholder=\"search for option\" class=\"input-sm form-control\" type=\"search\"/>',\n                  '                          </th>',\n                  '                          <th st-ratio=\"25\"></th>',\n                  '                      </tr>',\n                  '                      </thead>',\n                  '                      <tbody>',\n                  '                      <tr ng-repeat=\"basicSelectRow in panel.basicSelectRowCollection.rows | filter:basicSelectFilter as basicSelectRow\">',\n                  '                          <td st-ratio=\"20\">{{$index}}</td>',\n                  '                          <td st-ratio=\"55\">{{basicSelectRow.option}}</td>',\n                  '                          <td st-ratio=\"25\">',\n                  '                              <div class=\"pull-right\">',\n                  '                                <button class=\"btn btn-primary\" ng-click=\"panel.upThisRow($index)\"><i class=\"fa fa-arrow-up\"></i></button>',\n                  '                                <button class=\"btn btn-primary\" ng-click=\"panel.downThisRow($index)\"><i class=\"fa fa-arrow-down\"></i></button>',\n                  '                                \t<button class=\"btn btn-danger\" ng-click=\"panel.removeRow($index)\"><i class=\"fa fa-trash-o\"></i></button>',\n                  '                               </div>',   \n                  '                          </td>',\n                  '                      </tr>',\n                  '                      </tbody>',\n                  '                  </table>',\n                  '              </div>',\n                  '          </div>',\n                  '         </div>',\n                  '  </div>',\n\t\n\n                  '  <div class=\"marginTopFivepixels\"></div>',\n                    \n                  //description\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n                  '              <label for=\"DescriptionUpdate\" class=\"control-label greyText editPropertiesLabel\">Description :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyDesciption\" id=\"DescriptionUpdate\" placeholder=\"Add / edit description here\">',\n                  '              </div>',\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\t\t\t\t\t\t\t\t\t'  </div>',\n\t\t\t\t\t\t\t\t\tvalidEditFooter,\n\t\t\t\t\t\t\t\t\t'</div> '\n\t\t\t\t\t\t\t\t].join('');\n\t\t\t}\n\n\t \t\t/**\n\t\t\t * register template cache for side edit control panel\n\t\t\t * \n\t\t\t * control : \"Grouped Select\"\n\t\t\t */\n\t\t\tfunction editPanelGroupedSelectCtrlTpl(){\n\t\t\t\treturn \t[\n\t\t\t\t\t\t\t\t\t'<div class=\"panel panel-default\">',\n\t\t\t\t\t\t\t\t\t'    <div class=\"panel-body\">',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'        <div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t'            <h5 class=\"greyText\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp; Edit properties :</h5>',\n\t\t\t\t\t\t\t\t\t'        </div>',\n\t\t\t\t\t\t\t\t\t'    </div> ',\n\t\t\t\t\t\t\t\t\t//'    <hr/>',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//add options input  \n                  '  <div class=\"row\">',\n                  '      <div class=\"col-lg-12 col-md-12\">',\n                  '        <label for=\"groupedSelectRowCollection\" class=\"control-label greyText editPropertiesLabel\">Add new options :</label>',\n                  '     </div>',\n                  '  </div>',\n                  '  <div class=\"row\">',\n                  '      <div>',\n                  '          <div class=\"form-group\">',\n                  '              <div class=\"col-sm-9 col-xs-9 col-md-9 col-lg-9\">',\n                  '              <input type=\"text\" class=\"form-control\" id=\"inputAddNewGroupedOption\" placeholder=\"add new option\" ng-model=\"panel.newOptionGroupedSelect.saisie\">',\n                  '              </div>',\n                  '              <div class=\"col-sm-3 col-xs-3 col-md-3 col-lg-3\">',\n                  '                  <button class=\"btn btn-primary\" ng-click=\"panel.addNewOptionGroupedSelect()\">add</button>',\n                  '              </div>',\n                  '         </div>',\n                  '      </div>',\n                  '  </div> ',\n\n                  //add group input\n                  '  <div class=\"row\">',\n                  '      <div class=\"col-lg-12 col-md-12\">',\n                  '        <label for=\"groupedSelectRowCollection\" class=\" control-label greyText editPropertiesLabel\">Add new groups :</label>',\n                  '     </div>',\n                  '  </div>',\n                  '  <div class=\"row\">',\n                  '      <div>',\n                  '          <div class=\"form-group\">',\n                  '              <div class=\"col-sm-9 col-xs-9 col-md-9 col-lg-9\">',\n                  '                  <input  id=\"inputAddNewGroupGroupedOption\" type=\"text\" class=\"form-control\" ng-model=\"panel.newGroupGroupedSelect.saisie\" id=\"inputTextLabelUpdateGroupedSelect\" placeholder=\"Add new group\">',\n                  '              </div>',\n                  '              <div class=\"col-sm-3 col-xs-3 col-md-3 col-lg-3\">',\n                  '                  <button class=\"btn btn-primary\" ng-click=\"panel.addNewGroupToGroupedSelect()\">add</button>',\n                  '              </div>',\n                  '          </div>',\n                  '      </div>',\n                  '  </div>',\n\n                  //options/groups table\n                  '  <div class=\"row\">',\n                  '      <div class=\"col-lg-12 col-md-12\">',\n                  '        <label  class=\" control-label greyText editPropertiesLabel\">Edit/Remove options/groups:</label>',\n                  '     </div>',\n                  '  </div>',\n                  '  <div class=\"row\">',\n                  '         <div class=\"form-group\">',\n                  '          <div class-\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">',\n                  '              <div class=\"container\">',\n                  '                  <div ng-if=\"panel.groupedSelectRowCollection.rows.length === 0\">',\n                  '                      <h5 class=\"text-center greyText\"><em>- no option : add new options -</em></h5>',\n                  '                  </div>',  \n                  '                  <table ng-if=\"panel.groupedSelectRowCollection.rows.length > 0\" class=\"table table-striped\">',\n                  '                      <thead>',\n                  '                      <tr>',\n                  '                          <th st-ratio=\"20\">order</th>',\n                  '                          <th st-ratio=\"25\">group</th>',\n                  '                          <th st-ratio=\"30\">option</th>',\n                  '                          <th st-ratio=\"25\"></th>',\n                  '                      </tr>',\n                  '                      <tr>',\n                  '                          <th st-ratio=\"20\"></th>',\n                  '                          <th st-ratio=\"25\"></th>',\n                  '                          <th st-ratio=\"30\">',\n                  '                              <input ng-model=\"groupedSelectFilter\" placeholder=\"search for option\" class=\"input-sm form-control\" type=\"search\"/>',\n                  '                          </th>',\n                  '                          <th st-ratio=\"25\"></th>',\n                  '                      </tr>',\n                  '                      </thead>',\n                  '                      <tbody>',\n                  '                      <tr ng-repeat=\"groupedSelectRow in panel.groupedSelectRowCollection.rows | filter:groupedSelectFilter as groupedSelectRow\">',\n                  '                          <td st-ratio=\"20\">{{$index}}</td>',\n                  '                          <td st-ratio=\"25\">',\n                  '                              <div ng-if=\"panel.groupSelectGroupClick.showList === true\">',\n                  '                              <div ng-if=\"panel.GroupedSelectGroups.list.length === 0\">',\n                  '                                  <p class=\"text-left noGroupText\">- add new groups -</p>',\n                  '                              </div>',\n                  '                              <div ng-if=\"panel.GroupedSelectGroups.list.length > 0\">',\n                  '                                  <ol class=\"nya-bs-select col-sm-12 col-xs-12 col-md-12 col-lg12 editGroupedSelectnyaSelect\" ng-model=\"groupedSelectRow.group\" id=\"modelGroupedOptionGroupedChoose\"',\n                  '                                  disabled=\"panel.GroupedSelectGroups.list.length === 0\">',\n                  '                                    <li class=\"nya-bs-option\" nya-bs-option=\"GroupedSelectGroup in panel.GroupedSelectGroups.list\" value=\"GroupedSelectGroup\">',\n                  '                                      <a>{{GroupedSelectGroup}}</a>',\n                  '                                    </li>',\n                  '                                  </ol>',\n                  '                              </div>',\n                  '                              </div>',\n                  '                              <div ng-if=\"panel.groupSelectGroupClick.showList === false\">',\n                  '                              {{groupedSelectRow.group}}',\n                  '                              </div>',\n                  '                          </td>',\n                  '                          <td st-ratio=\"30\">{{groupedSelectRow.option}}</td>',\n                  '                          <td st-ratio=\"25\">',\n                  '                              <div class=\"pull-right\">',\n                  '                                  <button class=\"btn btn-primary\" ng-click=\"panel.upThisGroupedSelectRow($index)\"><i class=\"fa fa-arrow-up\"></i></button>',\n                  '                                  <button class=\"btn btn-primary\" ng-click=\"panel.downThisGroupedSelectRow($index)\"><i class=\"fa fa-arrow-down\"></i></button>',\n                  '                                  <button class=\"btn btn-warning\" ng-click=\"panel.showGroupListToChoose()\"><i class=\"fa fa-pencil-square-o\"></i> </button>',\n                  '                                  <button class=\"btn btn-danger\"  ng-click=\"panel.removeGroupedSelectRow($index)\"><i class=\"fa fa-trash-o\"></i></button>',\n                  '                               </div>',   \n                  '                          </td>',\n                  '                      </tr>',\n                  '                      </tbody>',\n                  '                  </table>',\n                  '              </div>',\n                  '          </div>',\n                  '         </div>',\n                  '  </div>',\n\t\t\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//description\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                  '              <label for=\"DescriptionUpdate\" class=\"control-label greyText editPropertiesLabel\">Description :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyDesciption\" id=\"DescriptionUpdate\" placeholder=\"Add / edit description here\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\n\t\t\t\t\t\t\t\t\t'  </div>',\n\t\t\t\t\t\t\t\t\tvalidEditFooter,\n\t\t\t\t\t\t\t\t\t'</div> '\n\t\t\t\t\t\t\t\t].join('');\n\t\t\t} \n\n  }\n\n/**\n *  ------------------------------------------------------\n *  configuration edaDragAndDropConfig\n *  ------------------------------------------------------\n *\n * configuration related to drag and drop\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n\t.module('edaApp')\n\t.config(['dragDropConfigProvider',\n\t\n\tfunction (dragDropConfigProvider) {\n\n    dragDropConfigProvider.setItemsNotTocount({\n                                                //placeholder :         '',\n                                                itemBeingDragged :    'dndDraggingSource'    \n                                              });\n \n\t}]);\n\n\n/**\n *  ------------------------------------------------------\n *  configuration edaFormlyConfig\n *  ------------------------------------------------------\n *\n *  formly configuration\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n\t.module('edaApp')\n\t.config([\t'formlyConfigProvider',\n\t\t\t\t\t\t'EasyFormGenFormlyBindingModelsProvider',\n\t\t\t\t\t\t'dragDropConfigProvider',\n\n\tfunction (formlyConfigProvider, EasyFormGenFormlyBindingModelsProvider, dragDropConfigProvider) {\n\t\t\n\n\t\t/**\n\t\t * Add blanck control\n\t\t *\n\t\t * 1- in formlyConfigProvider\n\t\t * 2- in EasyFormGenFormlyBindingModelsProvider\n\t\t */\n\t\tformlyConfigProvider.setType(\n\t\t \t{\n\t\t\t\tname  \t\t: 'blank',\n\t\t\t\ttemplate \t: '<div></div>'\n\t\t  }\n\t\t);\n\n\t\tEasyFormGenFormlyBindingModelsProvider.addEasyFormControlToList(\n\t\t\t\t{\n\t\t\t\t\t\tid \t\t\t\t\t\t\t\t: 'empty',  \n\t\t\t\t\t\tname \t\t\t\t\t\t\t: 'no control', \n\t\t\t\t\t\tsubtitle \t\t\t\t\t: 'no control', \n\t\t\t\t\t\tgroup \t\t\t\t\t\t: 'Blank', \n\t\t\t\t\t\tformlyType \t\t\t\t: 'blank', \n\t\t\t\t\t\tformlySubtype \t\t: '', \n\t\t\t\t\t\tformlyLabel \t\t\t: '', \n\t\t\t\t\t\tformlyRequired \t\t: false, \n\t\t\t\t\t\tformlyDesciption \t: '', \n\t\t\t\t\t\tformlyOptions \t\t: []\n\t\t\t\t}\n\t\t);\n\n\t\t/**\n\t\t * drag and drop control template\n\t\t *\n\t\t * @PARAM 1 : control template object (drag an drop)\n\t\t * @PARAM 2 : object to indicates in which group of control it will be inserted\n\t\t * \t\t\t\t\t\t(related to _dragDropConfigModel.containerConfig.decoration in dragDropConfig provider)\n\t\t *\n\t\t */\n\t\tdragDropConfigProvider.addControlToDragDropPresentationModel(\n\t\t\t\t{\n          label \t: [  \n\t\t\t                  '<div class=\"col-md-12\">',\n\t\t\t                  '    <div class=\"form-group\">',                                          \n\t\t\t                  '      <div class=\"\">',\n\t\t\t                  '      </div>',\n\t\t\t                  '    </div>',\n\t\t\t                  '</div>'\n\t                   ].join(''),          \n          control : 'empty',\n          cssClass: 'col-xs-12'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\taddToGroupCtrl : 'blank'\n\t\t\t\t}\n\t\t);\t\n\n\t\t/**\n\t\t * Add header\n\t\t *\n\t\t * note : formly header template already exists\n\t\t * no need to create a custom one\n\t\t *\n\t\t * just declare in EasyFormGenFormlyBindingModelsProvider\n\t\t * \n\t\t */\n\t\tEasyFormGenFormlyBindingModelsProvider.addEasyFormControlToList(\n\t\t\t\t{\n\t\t\t\t\tid \t\t\t\t\t\t\t\t: 'Header',  \n\t\t\t\t\tname \t\t\t\t\t\t\t: 'Header', \n\t\t\t\t\tsubtitle \t\t\t\t\t: 'no control', \n\t\t\t\t\tgroup \t\t\t\t\t\t: 'Decoration', \n\t\t\t\t\tformlyType \t\t\t\t: 'header', \n\t\t\t\t\tformlySubtype \t\t: '', \n\t\t\t\t\tformlyLabel \t\t\t: '', \n\t\t\t\t\tformlyRequired \t\t: false, \n\t\t\t\t\tformlyDesciption \t: '', \n\t\t\t\t\tformlyOptions \t\t: []\n\t\t\t\t}\n\t\t);\n\t\t/**\n\t\t * drag and drop header control template\n\t\t *\n\t\t *\n\t\t * @PARAM 1 : control template object (drag an drop)\n\t\t * @PARAM 2 : object to indicates in which group of control it will be inserted\n\t\t *  \t\t\t\t\t(related to _dragDropConfigModel.containerConfig.decoration in dragDropConfig provider)\n\t\t */\n\t\tdragDropConfigProvider.addControlToDragDropPresentationModel(\n\t\t\t\t{\n          label \t: [  \n\t\t\t                  '<div class=\"col-md-12\">',\n\t\t\t                  '    <div class=\"form-group\">',                                          \n\t\t\t                  '      <div class=\"\">',\n\t\t\t                  '        <h2 class=\"text-center\">Header</h2>',\n\t\t\t                  '        <hr/>',\n\t\t\t                  '      </div>',\n\t\t\t                  '    </div>',\n\t\t\t                  '</div>'\n\t                   ].join(''),          \n          control : 'Header',\n          cssClass: 'col-xs-12'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\taddToGroupCtrl : 'headers'\n\t\t\t\t}\t\t\t\t\n\t\t);\n\n\t\t/**\n\t\t * Add subTitle control\n\t\t *\n\t\t * 1- in formlyConfigProvider\n\t\t * 2- in EasyFormGenFormlyBindingModelsProvider\n\t\t */\n\t\tvar subTitleTemplate =\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'<div class=\"row\">', \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'  <div class=\"\">', \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'    <h4 class=\"text-center\">{{options.templateOptions.placeholder}}<h4>', \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'    <hr/>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'  </div>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'</div>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t].join(' ');\n\n\t\tformlyConfigProvider.setType(\n\t\t \t{\n\t\t\t\tname \t\t\t: 'subTitle',\n\t\t\t\ttemplate \t: subTitleTemplate\n\t\t  }\n\t\t);\n\n\t\tEasyFormGenFormlyBindingModelsProvider.addEasyFormControlToList(\n\t\t\t\t{\n\t\t\t\t\tid \t\t\t\t\t\t\t\t: 'Subtitle',  \n\t\t\t\t\tname \t\t\t\t\t\t\t: 'Subtitle', \n\t\t\t\t\tsubtitle \t\t\t\t\t: 'no control', \n\t\t\t\t\tgroup \t\t\t\t\t\t: 'Decoration', \n\t\t\t\t\tformlyType \t\t\t\t: 'subTitle', \n\t\t\t\t\tformlySubtype \t\t: '', \n\t\t\t\t\tformlyLabel \t\t\t: '', \n\t\t\t\t\tformlyRequired \t\t: false, \n\t\t\t\t\tformlyDesciption \t: '', \n\t\t\t\t\tformlyOptions \t\t: []\n\t\t\t\t}\n\t\t);\n\t\t/**\n\t\t * drag and drop subtitles control template\n\t\t *\n\t\t *\n\t\t * @PARAM 1 : control template object (drag an drop)\n\t\t * @PARAM 2 : object to indicates in which group of control it will be inserted\n\t\t * \t\t\t\t\t\t(related to _dragDropConfigModel.containerConfig.decoration in dragDropConfig provider)\n\t\t */\t\n\t\tdragDropConfigProvider.addControlToDragDropPresentationModel(\n        {\n          'label' \t: [  \n\t\t\t                  '<div class=\"col-md-12\">',\n\t\t\t                  '    <div class=\"form-group\">',                                          \n\t\t\t                  '      <div class=\"\">',\n\t\t\t                  '        <h4 class=\"text-center\">SubTitle</h4>',\n\t\t\t                  '        <hr/>',\n\t\t\t                  '      </div>',\n\t\t\t                  '    </div>',\n\t\t\t                  '</div>'\n\t                    ].join(''),\n          'control'\t: 'Subtitle',\n          'cssClass': 'col-xs-12'\n        },\n\t\t\t\t{\n\t\t\t\t\taddToGroupCtrl : 'headers'\n\t\t\t\t}        \n\t\t);\t\t\n\n\t\t/**\n\t\t * Add text input (basic)\n\t\t *\n\t\t * note : formly template already exists\n\t\t * no need to create a custom one\n\t\t *\n\t\t * just declare in EasyFormGenFormlyBindingModelsProvider\n\t\t */\n\t\tEasyFormGenFormlyBindingModelsProvider.addEasyFormControlToList(\n\t\t\t\t{\n\t\t\t\t\tid \t\t\t\t\t\t\t\t: 'TextInput',  \n\t\t\t\t\tname \t\t\t\t\t\t\t: 'Text input', \n\t\t\t\t\tsubtitle \t\t\t\t\t: 'Text input', \n\t\t\t\t\tgroup \t\t\t\t\t\t: 'input', \n\t\t\t\t\tformlyType \t\t\t\t: 'input', \n\t\t\t\t\tformlySubtype \t\t: '', \n\t\t\t\t\tformlyLabel \t\t\t: '', \n\t\t\t\t\tformlyRequired \t\t: false, \n\t\t\t\t\tformlyDesciption \t: '', \n\t\t\t\t\tformlyOptions \t\t: []\n\t\t\t\t}\n\t\t);\n\t\t/**\n\t\t * drag and drop text input (basic) control template\n\t\t *\n\t\t *\n\t\t * @PARAM 1 : control template object (drag an drop)\n\t\t * @PARAM 2 : object to indicates in which group of control it will be inserted\n\t\t *  \t\t\t\t\t(related to _dragDropConfigModel.containerConfig.decoration in dragDropConfig provider)\n\t\t */\t\n\t\tdragDropConfigProvider.addControlToDragDropPresentationModel(\n\t      {\n\t        'label' \t: [  \n\t\t\t                  '<div class=\"col-md-12\">',\n\t\t\t                  '<div class=\"form-group\">',\n\t\t\t                  '  <label for=\"inputText\" class=\"control-label textControlLabel pull-left\">',\n\t\t\t                  '   title for text input<span class=\"textControlLabel ng-scope\">*</span>',\n\t\t\t                  '  </label>',\n\t\t\t                  '  <div class=\"\">',\n\t\t\t                  '    <input type=\"text\" disabled class=\"form-control fakeControl\" id=\"inputText\" placeholder=\"basic input\">',\n\t\t\t                  '    <p class=\"help-block pull-left\">Description</p>',\n\t\t\t                  '  </div>',\n\t\t\t                  '</div>',\n\t\t\t                  '</div>'\n\t                  \t].join(''),\n\n\t        'control'\t: 'TextInput',\n\t        'cssClass': 'col-xs-12'\n\t      },\n\t\t\t\t{\n\t\t\t\t\taddToGroupCtrl : 'inputs'\n\t\t\t\t}  \t      \n\t\t);\t\t\t\n\n\t\t/**\n\t\t * Add text input (Password)\n\t\t *\n\t\t * note : formly template already exists\n\t\t * no need to create a custom one\n\t\t *\n\t\t * just declare in EasyFormGenFormlyBindingModelsProvider\n\t\t */\n\t\tEasyFormGenFormlyBindingModelsProvider.addEasyFormControlToList(\n\t\t\t\t{\n\t\t\t\t\tid \t\t\t\t\t\t\t\t: 'Password',  \n\t\t\t\t\tname \t\t\t\t\t\t\t: 'Password', \n\t\t\t\t\tsubtitle \t\t\t\t\t: 'Password', \n\t\t\t\t\tgroup \t\t\t\t\t\t: 'input', \n\t\t\t\t\tformlyType \t\t\t\t: 'input', \n\t\t\t\t\tformlySubtype \t\t: 'password', \n\t\t\t\t\tformlyLabel \t\t\t: '', \n\t\t\t\t\tformlyRequired \t\t: false, \n\t\t\t\t\tformlyDesciption \t: '', \n\t\t\t\t\tformlyOptions \t\t: []\n\t\t\t\t}\n\t\t);\n\t\t/**\n\t\t * drag and drop text input — password —control template\n\t\t *\n\t\t *\n\t\t * @PARAM 1 : control template object (drag an drop)\n\t\t * @PARAM 2 : object to indicates in which group of control it will be inserted\n\t\t *  \t\t\t\t\t(related to _dragDropConfigModel.containerConfig.decoration in dragDropConfig provider)\n\t\t */\t\n\t\tdragDropConfigProvider.addControlToDragDropPresentationModel(\n        {\n\n          'label' \t: [\n\t\t                    '<div class=\"col-md-12\">',\n\t\t                    '<div class=\"form-group\">',\n\t\t                    '  <label for=\"inputPass\" class=\"control-label textControlLabel ng-binding pull-left\">',\n\t\t                    '   title for password input<span class=\"textControlLabel ng-scope\">*</span>',\n\t\t                    '  </label>',\n\t\t                    '  <div class=\"\">',\n\t\t                    '    <input type=\"password\" disabled class=\"form-control fakeControl\" id=\"inputPass\" placeholder=\"password input\">',\n\t\t                    '    <p class=\"help-block ng-binding pull-left\">Description</p>',\n\t\t                    '  </div>',\n\t\t                    '</div>',\n\t\t                    '</div>'\n\t                    ].join(''),\n\n          'control'\t: 'Password',\n          'cssClass': 'col-xs-12'\n        },\n\t\t\t\t{\n\t\t\t\t\taddToGroupCtrl : 'inputs'\n\t\t\t\t} \n\n\t\t);\t\t\n\t\t\n\t\t/**\n\t\t * Add angular UI date picker\n\t\t *\n\t\t * thx Kent C. Dodds for formly config template (since it was a huge config)\n\t\t */\n\t\tvar attributes =\t[\n\t\t\t\t\t\t\t\t\t\t\t\t'date-disabled',\n\t\t\t\t\t\t\t\t\t\t\t\t'custom-class',\n\t\t\t\t\t\t\t\t\t\t\t\t'show-weeks',\n\t\t\t\t\t\t\t\t\t\t\t\t'starting-day',\n\t\t\t\t\t\t\t\t\t\t\t\t'init-date',\n\t\t\t\t\t\t\t\t\t\t\t\t'min-mode',\n\t\t\t\t\t\t\t\t\t\t\t\t'max-mode',\n\t\t\t\t\t\t\t\t\t\t\t\t'format-day',\n\t\t\t\t\t\t\t\t\t\t\t\t'format-month',\n\t\t\t\t\t\t\t\t\t\t\t\t'format-year',\n\t\t\t\t\t\t\t\t\t\t\t\t'format-day-header',\n\t\t\t\t\t\t\t\t\t\t\t\t'format-day-title',\n\t\t\t\t\t\t\t\t\t\t\t\t'format-month-title',\n\t\t\t\t\t\t\t\t\t\t\t\t'year-range',\n\t\t\t\t\t\t\t\t\t\t\t\t'shortcut-propagation',\n\t\t\t\t\t\t\t\t\t\t\t\t'datepicker-popup',\n\t\t\t\t\t\t\t\t\t\t\t\t'show-button-bar',\n\t\t\t\t\t\t\t\t\t\t\t\t'current-text',\n\t\t\t\t\t\t\t\t\t\t\t\t'clear-text',\n\t\t\t\t\t\t\t\t\t\t\t\t'close-text',\n\t\t\t\t\t\t\t\t\t\t\t\t'close-on-date-selection',\n\t\t\t\t\t\t\t\t\t\t\t\t'datepicker-append-to-body'\n\t\t\t\t\t\t\t\t\t\t\t];\n\n\t\tvar bindings =\t[\n\t\t\t\t\t\t\t\t\t\t\t'datepicker-mode',\n\t\t\t\t\t\t\t\t\t\t\t'min-date',\n\t\t\t\t\t\t\t\t\t\t\t'max-date'\n\t\t\t\t\t\t\t\t\t\t];\n\n\t\tvar ngModelAttrs = {};\n\n\t\tangular.forEach(attributes, function(attr) {\n\t\t  ngModelAttrs[camelize(attr)] = {attribute: attr};\n\t\t});\n\n\t\tangular.forEach(bindings, function(binding) {\n\t\t  ngModelAttrs[camelize(binding)] = {bound: binding};\n\t\t});\n\n\t  function camelize(string) {\n\t    string = string.replace(/[\\-_\\s]+(.)?/g, function(match, chr) {\n\t      return chr ? chr.toUpperCase() : '';\n\t    });\n\t    // Ensure 1st char is always lowercase\n\t    return string.replace(/^([A-Z])/, function(match, chr) {\n\t      return chr ? chr.toLowerCase() : '';\n\t    });\n\t  } \t\t\n\n\t  var angularUIDatePickerTemplate =\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'<input ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'      id=\"{{id}}\" ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'      class=\"form-control\" ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'      ng-click=\"open($event)\"',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'      ng-model=\"model[options.key || index]\" is-open=\"to.isOpen\"',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'      ng-click=\"to.isOpen = true\" ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'      datepicker-options=\"to.datepickerOptions\"',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'/>'\n\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].join(' ');\n \n\t\tformlyConfigProvider.setType({\n\t\t  name \t\t\t\t: 'datepicker',\n\t\t  template \t\t: angularUIDatePickerTemplate,\n\t\t  wrapper \t\t: ['bootstrapLabel', 'bootstrapHasError'],\n\t\t  controller \t: [\t'$scope', \n\t\t  \t\t\t\t\t\t\t\tfunction($scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t     $scope.open = function($event) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t      $event.preventDefault();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t      $event.stopPropagation();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t      $scope.opened = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    };\n\t\t   \t\t\t\t\t\t\t\t}\n\t\t   \t\t\t\t\t\t\t],\n\t\t  defaultOptions : {\n\t\t\t\t\t\t\t\t\t\t    ngModelAttrs \t\t: ngModelAttrs,\n\t\t\t\t\t\t\t\t\t\t    templateOptions : {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t      addonLeft: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t        class: 'glyphicon glyphicon-calendar',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t        onClick: function(options) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          options.templateOptions.isOpen = !options.templateOptions.isOpen;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t        }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t      },       \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t      onFocus: function($viewValue, $modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t        scope.to.isOpen = !scope.to.isOpen;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t      },\n\t\t\t\t\t\t\t\t\t\t\t      \t\t\t\t\t\t\t\tdatepickerOptions: {}\n\t\t\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t}\n\t\t  }\n\t\t});\n\n\t\tEasyFormGenFormlyBindingModelsProvider.addEasyFormControlToList(\n\t\t\t\t{\n\t\t\t\t\tid \t\t\t\t\t\t\t\t: 'Date',  \n\t\t\t\t\tname \t\t\t\t\t\t\t: 'Date', \n\t\t\t\t\tsubtitle \t\t\t\t\t: 'Date', \n\t\t\t\t\tgroup \t\t\t\t\t\t: 'input', \n\t\t\t\t\tformlyType \t\t\t\t: 'datepicker', \n\t\t\t\t\tformlySubtype \t\t: '', \n\t\t\t\t\tformlyLabel \t\t\t: '', \n\t\t\t\t\tformlyRequired \t\t: false, \n\t\t\t\t\tformlyDesciption \t: '', \n\t\t\t\t\tformlyOptions \t\t: [], \n\t\t\t\t\tdatepickerPopup \t: 'dd-MMMM-yyyy'\n\t\t\t\t}\n\t\t);\n\t\t/**\n\t\t * drag and drop text input — date — control template (using angular UI datepicker)\n\t\t *\n\t\t *\n\t\t * @PARAM 1 : control template object (drag an drop)\n\t\t * @PARAM 2 : object to indicates in which group of control it will be inserted\n\t\t *  \t\t\t\t\t(related to _dragDropConfigModel.containerConfig.decoration in dragDropConfig provider)\n\t\t */\t\n\t\tdragDropConfigProvider.addControlToDragDropPresentationModel(\n\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel \t: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'<div class=\"col-md-12\">',        \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'<div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t          \t'  <label for=\"inputDate\" class=\"control-label textControlLabel ng-binding pull-left\">',\n\t\t\t\t                    \t'   title for date input<span class=\"textControlLabel ng-scope\">*</span>',\n\t\t\t\t                    \t'  </label>',\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'          <div class=\"col-xs-12 col-sm-12 col-md-12 demoddDatepicker\">',  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'  \t\t\t\t\t<div class=\"input-group\">',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'    \t\t\t\t\t<span class=\"input-group-addon\"><span class=\"glyphicon glyphicon-calendar\"></span></span>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'    \t\t\t\t\t<input type=\"text\" disabled class=\"form-control fakeControl\">',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'  \t\t\t\t\t</div>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'           <p class=\"help-block pull-left\">description</p>',\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'</div>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'</div>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t].join(''),\n\t\t\t\t          control\t: 'Date',\n\t\t\t\t          cssClass: 'col-xs-12'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\taddToGroupCtrl : 'inputs'\n\t\t\t\t} \t\t\t\t\n\t\t);\n\n\t\t/**\n\t\t * Add textarea\n\t\t *\n\t\t * note : formly template already exists\n\t\t * no need to create a custom one\n\t\t *\n\t\t * just declare in EasyFormGenFormlyBindingModelsProvider\n\t\t */\n\t\tEasyFormGenFormlyBindingModelsProvider.addEasyFormControlToList(\n\t\t\t\t{\n\t\t\t\t\tid \t\t\t\t\t\t\t\t: 'Texarea', \n\t\t\t\t\tname \t\t\t\t\t\t\t: 'Textarea', \n\t\t\t\t\tsubtitle \t\t\t\t\t: 'Textarea', \n\t\t\t\t\tgroup \t\t\t\t\t\t: 'Textarea', \n\t\t\t\t\tformlyType \t\t\t\t: 'textarea', \n\t\t\t\t\tformlySubtype \t\t: '', \n\t\t\t\t\tformlyLabel \t\t\t: '', \n\t\t\t\t\tformlyRequired \t\t: false, \n\t\t\t\t\tformlyDesciption \t: '', \n\t\t\t\t\tformlyOptions \t\t: []\n\t\t\t\t}\n\t\t);\n\t\t/**\n\t\t * drag and drop textarea control template\n\t\t *\n\t\t *\n\t\t * @PARAM 1 : control template object (drag an drop)\n\t\t * @PARAM 2 : object to indicates in which group of control it will be inserted\n\t\t *  \t\t\t\t\t(related to _dragDropConfigModel.containerConfig.decoration in dragDropConfig provider)\n\t\t */\t\n\t\tdragDropConfigProvider.addControlToDragDropPresentationModel(\n        {\n          'label' \t: [\n                        '<div class=\"col-md-12\">',\n                        '    <div class=\"form-group\">', \n                        '      <label for=\"textArea\" class=\"control-label ',\n                        '\t\t\t\t\t\t\ttextControlLabel pull-left\">title for textarea <span class=\"textControlLabel\">*</span></label>', \n                        '      <div class=\"\">',\n                        '        <textarea disabled class=\"form-control dragItemtextarea fakeControl\" ng-model=\"model[options.key]\" rows=\"1\" id=\"textArea\"></textarea>',\n                        '        <p class=\"help-block pull-left\">description</p>',          \n                        '      </div>',\n                        '    </div>',                    \n                        '</div>'                                  \n                    \t].join(''),\n          'control'\t: 'Texarea',\n          'cssClass': 'col-xs-12'          \n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\taddToGroupCtrl : 'textareas'\n\t\t\t\t}\t\t\t\t\t\n\t\t);\t\t\t\t\n\n\t\t/**\n\t\t * Add rich text editor control (using textAngular)\n\t\t *\n\t\t */\n\t\tvar richTexEditorTemplate =\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'<text-angular name=\"{{id}}\" ', \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'              class=\"richTextAngular\" ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'              ng-model=\"model[options.key || index]\">', \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'</text-angular>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].join(' ');\n\t\tformlyConfigProvider.setType(\n\t\t  {\n\t\t\t\tname     \t: 'richEditor',\n\t\t\t\ttemplate \t: richTexEditorTemplate\n\t\t  }\n\t\t);\n\n\t\tEasyFormGenFormlyBindingModelsProvider.addEasyFormControlToList(\n\t\t\t\t{\n\t\t\t\t\tid \t\t\t\t\t\t\t\t: 'RichTextEditor', \n\t\t\t\t\tname \t\t\t\t\t\t\t: 'RichTextEditor', \n\t\t\t\t\tsubtitle \t\t\t\t\t: 'RichTextEditor', \n\t\t\t\t\tgroup \t\t\t\t\t\t: 'Textarea', \n\t\t\t\t\tformlyType \t\t\t\t: 'richEditor', \n\t\t\t\t\tformlySubtype \t\t: '', \n\t\t\t\t\tformlyLabel \t\t\t: '', \n\t\t\t\t\tformlyRequired \t\t: false, \n\t\t\t\t\tformlyDesciption \t: '', \n\t\t\t\t\tformlyOptions \t\t: []\n\t\t\t\t}\n\t\t);\n\t\t/**\n\t\t * drag and drop rich text editor control template (using textAngular)\n\t\t *\n\t\t *\n\t\t * @PARAM 1 : control template object (drag an drop)\n\t\t * @PARAM 2 : object to indicates in which group of control it will be inserted\n\t\t *  \t\t\t\t\t(related to _dragDropConfigModel.containerConfig.decoration in dragDropConfig provider)\n\t\t */\t\n\t\tdragDropConfigProvider.addControlToDragDropPresentationModel(\n\t\t\t\t{\n\t\t\t\t\tlabel \t: [\n\t\t\t\t\t\t\t\t\t\t\t'<div class=\"col-md-12\">', \n\t\t\t\t\t\t\t\t\t\t\t'    <div class=\"form-group\">', \n                      '      <label for=\"textArea\" class=\"control-label ',\n                      '\t\t\t\t\t\t\ttextControlLabel pull-left\">title for rich text editor <span class=\"textControlLabel\">*</span></label>', \n\t\t\t\t\t\t\t\t\t\t\t'      <div class=\"\">',\n\t\t\t\t\t\t\t\t\t\t\t'        <textarea disabled class=\"form-control dragItemtextarea fakeControl\" ng-model=\"model[options.key]\" rows=\"1\" id=\"textArea\"></textarea>',\n\t\t\t\t\t\t\t\t\t\t\t'        <p class=\"help-block\">description</p>',\n\t\t\t\t\t\t\t\t\t\t\t'      </div>',\n\t\t\t\t\t\t\t\t\t\t\t'    </div>',\n\t\t\t\t\t\t\t\t\t\t\t'</div>'\n\t\t\t\t\t\t\t\t\t\t].join(''),\n\t\t\t    control\t: 'RichTextEditor',\n\t\t\t    cssClass: 'col-xs-12'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\taddToGroupCtrl : 'textareas'\n\t\t\t\t}\t\t\t\t\n\t\t);\n\n\t\t/**\n\t\t * Add radio\n\t\t *\n\t\t * note : formly template already exists\n\t\t * no need to create a custom one\n\t\t *\n\t\t * just declare in EasyFormGenFormlyBindingModelsProvider\n\t\t */\n\t\tEasyFormGenFormlyBindingModelsProvider.addEasyFormControlToList(\n\t\t\t\t{\n\t\t\t\t\tid \t\t\t\t\t\t\t\t: 'Radio', \n\t\t\t\t\tname \t\t\t\t\t\t\t: 'Radio', \n\t\t\t\t\tsubtitle \t\t\t\t\t: 'Radio', \n\t\t\t\t\toptions \t\t\t\t\t: [], \n\t\t\t\t\tgroup \t\t\t\t\t\t: 'Radio', \n\t\t\t\t\tformlyType \t\t\t\t: 'radio', \n\t\t\t\t\tformlySubtype \t\t: '', \n\t\t\t\t\tformlyLabel \t\t\t: '', \n\t\t\t\t\tformlyRequired \t\t: false, \n\t\t\t\t\tformlyDesciption \t: '' , \n\t\t\t\t\tformlyOptions \t\t: []\n\t\t\t\t}\n\t\t);\n\t\t/**\n\t\t * drag and drop radio control template (using textAngular)\n\t\t *\n\t\t *\n\t\t * @PARAM 1 : control template object (drag an drop)\n\t\t * @PARAM 2 : object to indicates in which group of control it will be inserted\n\t\t *  \t\t\t\t\t(related to _dragDropConfigModel.containerConfig.decoration in dragDropConfig provider)\n\t\t */\n\t\tdragDropConfigProvider.addControlToDragDropPresentationModel(\n        {\n          'label' \t: [\n                        '<div class=\"col-md-12\">',        \n                        '  <div class=\"form-group\">',\n                        '    <label for=\"vertRadio\" class=\"control-label textControlLabel pull-left\">title for radio <span class=\"textControlLabel\">*</span></label>',\n                        '    <div class=\"interligne\"></div>',\n                        '    <div class=\"pull-left\">',\n                        '      <div class=\"radio\">',\n                        '        <label class=\"fakeCheck\">',\n                        '          <input type=\"radio\" disabled name=\"optionsRadios\" class=\"fakeCheck\" id=\"optionsRadio-0\" value=\"verticalRadio0\" checked=\"\">',\n                        '          option1',\n                        '        </label>',\n                        '      </div><div class=\"radio\">',\n                        '        <label class=\"fakeCheck\">',\n                        '          <input type=\"radio\" disabled name=\"optionsRadios\" class=\"fakeCheck\"  id=\"optionsRadio-1\" value=\"verticalRadio1\" checked=\"\">',\n                        '          option2',\n                        '        </label>',\n                        '      </div>',\n                        '      <p class=\"help-block pull-left\">description</p>',\n                        '    </div>',\n                        '  </div>',                            \n                        '</div>'\n                      ].join(''),\n          'control'\t: 'Radio',\n          'cssClass': 'col-xs-12'            \n        },\n\t\t\t\t{\n\t\t\t\t\taddToGroupCtrl : 'radios'\n\t\t\t\t}\t\n\t\t);\t\t\t\t\n\n\t\t/**\n\t\t * Add checkbox\n\t\t *\n\t\t * note : formly template already exists\n\t\t * no need to create a custom one\n\t\t *\n\t\t * just declare in EasyFormGenFormlyBindingModelsProvider\n\t\t */\n\t\tEasyFormGenFormlyBindingModelsProvider.addEasyFormControlToList(\n\t\t\t\t{\n\t\t\t\t\tid \t\t\t\t\t\t\t\t: 'Checkbox', \n\t\t\t\t\tname \t\t\t\t\t\t\t: 'Checkbox', \n\t\t\t\t\tsubtitle \t\t\t\t\t: 'Checkbox', \n\t\t\t\t\tgroup \t\t\t\t\t\t: 'Checkbox', \n\t\t\t\t\tformlyType \t\t\t\t: 'checkbox', \n\t\t\t\t\tformlySubtype \t\t: '', \n\t\t\t\t\tformlyLabel \t\t\t: '', \n\t\t\t\t\tformlyRequired \t\t: false, \n\t\t\t\t\tformlyDesciption \t: '', \n\t\t\t\t\tformlyOptions \t\t: []\n\t\t\t\t}\n\t\t);\n\t\t/**\n\t\t * drag and drop checkbox control template (using textAngular)\n\t\t *\n\t\t *\n\t\t * @PARAM 1 : control template object (drag an drop)\n\t\t * @PARAM 2 : object to indicates in which group of control it will be inserted\n\t\t *  \t\t\t\t\t(related to _dragDropConfigModel.containerConfig.decoration in dragDropConfig provider)\n\t\t */\n\t\tdragDropConfigProvider.addControlToDragDropPresentationModel(\n\t\t\t\t{\n\n\t\t\t\t\tlabel \t: [\n\t\t\t\t\t\t\t\t\t\t\t'<div class=\"col-md-12\">',                               \n\t\t\t\t\t\t\t\t\t\t\t'<div class=\"checkbox\">',\n\t\t\t\t\t\t\t\t\t\t\t'  <label class=\"fakeCheck\">',\n\t\t\t\t\t\t\t\t\t\t\t'    <input type=\"checkbox\" disabled class=\"fakeCheck\" id=\"checkBox\">',\n\t\t\t\t\t\t\t\t\t\t\t'\t\t<span class=\"blackText ng-binding\">label for checkbox </span>',\n\t\t\t\t\t\t\t\t\t\t\t'\t\t<span class=\"textControlLabel ng-scope\">*</span>',\n\t\t\t\t\t\t\t\t\t\t\t'  </label>', \n\t\t\t\t\t\t\t\t\t\t\t'</div>',\n\t\t\t\t\t\t\t\t\t\t\t'<p class=\"help-block ng-binding\">description</p>',\n\t\t\t\t\t\t\t\t\t\t\t'</div>' \n\t\t\t\t\t\t\t\t\t\t].join(''),\n\t\t\t\t  control\t: 'Checkbox',\n\t\t\t\t  cssClass: 'col-xs-12' \n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\taddToGroupCtrl : 'checkboxes'\n\t\t\t\t}\t\t\t\t\t\n\t\t);\n\n\t\t/**\n\t\t * Add basic Select control\n\t\t *\n\t\t * using nya-bs-select\n\t\t */\n\t\tvar basicSelectTemplate =\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' <ol class=\"nya-bs-select col-sm-12 col-xs-12 col-md-12 col-lg12\" ', \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\t\tng-model=\"model[options.key || index]\"  ', \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\t\tid=\"{{id}}\"  ', \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\t\tdisabled=\"options.templateOptions.options.length === 0\"> ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'   <li class=\"nya-bs-option\" nya-bs-option=\"option in options.templateOptions.options\"> ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'     <a>{{option.name}}</a> ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'   </li> ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' </ol> '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].join(''); \t\n\n\t\tformlyConfigProvider.setType(\n\t\t \t{\n\t\t\t\tname \t\t\t: 'basicSelect',\n\t\t\t\ttemplate \t: basicSelectTemplate\n\t\t  }\n\t\t);\n\n\t\tEasyFormGenFormlyBindingModelsProvider.addEasyFormControlToList(\n\t\t\t\t{\n\t\t\t\t\tid \t\t\t\t\t\t\t\t: 'BasicSelect', \n\t\t\t\t\tname \t\t\t\t\t\t\t: 'Basic select', \n\t\t\t\t\tsubtitle \t\t\t\t\t: 'Basic select',\n\t\t\t\t\toptions \t\t\t\t\t: [], \n\t\t\t\t\tgroup \t\t\t\t\t\t: 'Select', \n\t\t\t\t\tformlyType \t\t\t\t: 'basicSelect', \n\t\t\t\t\tformlySubtype \t\t: '', \n\t\t\t\t\tformlyLabel \t\t\t: '', \n\t\t\t\t\tformlyRequired \t\t: false, \n\t\t\t\t\tformlyDesciption \t: '', \n\t\t\t\t\tformlyOptions \t\t: []\n\t\t\t\t}\n\t\t);\t\n\t\t/**\n\t\t * drag and drop basic select control template (using textAngular)\n\t\t *\n\t\t *\n\t\t * @PARAM 1 : control template object (drag an drop)\n\t\t * @PARAM 2 : object to indicates in which group of control it will be inserted\n\t\t *  \t\t\t\t\t(related to _dragDropConfigModel.containerConfig.decoration in dragDropConfig provider)\n\t\t */\n\t\tdragDropConfigProvider.addControlToDragDropPresentationModel(\n\t\t\t\t{\n\t\t\t\t\tlabel \t: [\n\t\t\t\t\t\t\t\t\t\t\t'<div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t\t\t'    <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t\t\t'<div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 selectfordemo\">',\n\t\t\t\t\t\t\t\t\t\t\t'<ol class=\"nya-bs-select col-xs-12 col-sm-12 col-md-12 col-lg-12 ng-valid btn-group ng-dirty ng-valid-parse ng-touched\"', \n\t\t\t\t\t\t\t\t\t\t\t'\tng-model=\"fakeModelNyaSelectBasic\"', \n\t\t\t\t\t\t\t\t\t\t\t'\tdata-live-search=\"false\">',\n\t\t\t\t\t\t\t\t\t\t\t'   <button class=\"btn btn-default dropdown-toggle\" disabled type=\"button\">',\n\t\t\t\t\t\t\t\t\t\t\t'\t\t <span class=\"pull-left filter-option\">',\n\t\t\t\t\t\t\t\t\t\t\t'\t\t\t <span class=\"ng-binding\">Basic select</span>',\n\t\t\t\t\t\t\t\t\t\t\t'\t\t</span>',\n\t\t\t\t\t\t\t\t\t\t\t'\t\t&nbsp;<span class=\"caret\"></span>',\n\t\t\t\t\t\t\t\t\t\t\t'</button>',\n\n\t\t\t\t\t\t\t\t\t\t\t'    </div>',\n\t\t\t\t\t\t\t\t\t\t\t'</div>' \n\t\t\t\t\t\t\t\t\t\t].join(''),\n\t\t\t\t  control\t: 'BasicSelect',\n\t\t\t\t  cssClass: 'col-xs-12' \t\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\taddToGroupCtrl : 'selects'\n\t\t\t\t}\t\t\t\t\t\n\t\t);\t\n\n\t\t/**\n\t\t * Add Grouped Select control\n\t\t *\n\t\t * using nya-bs-select\n\t\t */\n    var groupedSelectTemplate =\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'  <ol class=\"nya-bs-select col-sm-12 col-xs-12 col-md-12 col-lg12\" ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\t\t   ng-model=\"model[options.key || index]\" ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'      data-live-search=\"true\" ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'      disabled=\"options.templateOptions.options.length === 0\">',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'      <li nya-bs-option=\"option in  options.templateOptions.options group by option.group\">  ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'        <span class=\"dropdown-header\">{{$group}}</span>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'        <a>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'          <span>{{option.name}}</span>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'          <span class=\"glyphicon glyphicon-ok check-mark\"></span>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'        </a>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'      </li>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'  </ol>'\n     \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].join(' ');\n\t\tformlyConfigProvider.setType(\n\t\t\t{\n\t\t\t\tname   \t\t: 'groupedSelect',\n\t\t\t\ttemplate \t: groupedSelectTemplate\n\t\t\t}\n\t\t);\n\n\t\tEasyFormGenFormlyBindingModelsProvider.addEasyFormControlToList(\n\t\t\t\t{\n\t\t\t\t\tid \t\t\t\t\t\t\t\t: 'GroupedSelect', \n\t\t\t\t\tname \t\t\t\t\t\t\t: 'Grouped Select', \n\t\t\t\t\tsubtitle \t\t\t\t\t: 'Grouped Select',\n\t\t\t\t\toptions \t\t\t\t\t: [], \n\t\t\t\t\tgroup \t\t\t\t\t\t: 'Select', \n\t\t\t\t\tformlyType \t\t\t\t: 'groupedSelect', \n\t\t\t\t\tformlySubtype \t\t: '', \n\t\t\t\t\tformlyLabel \t\t\t: '', \n\t\t\t\t\tformlyRequired \t\t: false, \n\t\t\t\t\tformlyDesciption \t: '', \n\t\t\t\t\tformlyOptions \t\t: []\n\t\t\t\t}\n\t\t);\n\t\t/**\n\t\t * drag and drop grouped select control template (using textAngular)\n\t\t *\n\t\t *\n\t\t * @PARAM 1 : control template object (drag an drop)\n\t\t * @PARAM 2 : object to indicates in which group of control it will be inserted\n\t\t *  \t\t\t\t\t(related to _dragDropConfigModel.containerConfig.decoration in dragDropConfig provider)\n\t\t */\n\t\tdragDropConfigProvider.addControlToDragDropPresentationModel(\n\t\t\t\t{\n\t\t\t\t\tlabel \t: [\n\t\t\t\t\t\t\t\t\t\t\t'<div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t\t\t'    <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t\t\t'<div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 selectfordemo\">',\n\t\t\t\t\t\t\t\t\t\t\t'<ol class=\"nya-bs-select col-xs-12 col-sm-12 col-md-12 col-lg-12 ng-valid btn-group ng-dirty ng-valid-parse ng-touched\"', \n\t\t\t\t\t\t\t\t\t\t\t'\tng-model=\"fakeModelNyaSelectBasic\"', \n\t\t\t\t\t\t\t\t\t\t\t'\tdata-live-search=\"false\">',\n\t\t\t\t\t\t\t\t\t\t\t'   <button class=\"btn btn-default dropdown-toggle\" disabled type=\"button\">',\n\t\t\t\t\t\t\t\t\t\t\t'\t\t <span class=\"pull-left filter-option\">',\n\t\t\t\t\t\t\t\t\t\t\t'\t\t\t <span class=\"ng-binding\">Grouped select</span>',\n\t\t\t\t\t\t\t\t\t\t\t'\t\t</span>',\n\t\t\t\t\t\t\t\t\t\t\t'\t\t&nbsp;<span class=\"caret\"></span>',\n\t\t\t\t\t\t\t\t\t\t\t'</button>',\n\n\t\t\t\t\t\t\t\t\t\t\t'    </div>',\n\t\t\t\t\t\t\t\t\t\t\t'</div>' \n\t\t\t\t\t\t\t\t\t\t].join(''),\n\t\t\t\t\tcontrol\t: 'GroupedSelect',\n\t\t\t\t\tcssClass: 'col-xs-12' \n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\taddToGroupCtrl : 'selects'\n\t\t\t\t}\t\t\t\t\n\t\t);\t\t\t\n\n \n\t}]);\n\n\nangular.module(\"edaApp\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"editModalTemplate.html\",\"<h1>no use right now</h1>\");}]);\n/**\n *  ------------------------------------------------------\n *   dragDropConfigProvider\n *  ------------------------------------------------------ \n *\n * All customizations to \"easy form generator - drag and drop version - \" will be placed here\n *\n * customize it in your in module_app.config \n * then use service in your application\n *\n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n */\nangular\n  .module('edaApp.providers.dragDropConfigProvider', [])\n  .provider('dragDropConfig', [\n\n    function(){\n\n      /**\n       * default drag drop item classes\n       * \n       * -> by default : up to 3 items per rows\n       */\n      var _listDragDropItemCssClasses = [\n                                            {\n                                                cssClass : 'col-md-12', \n                                                numberItemPerRow: 0\n                                            },\n                                            {\n                                                cssClass : 'col-md-12', \n                                                numberItemPerRow: 1\n                                            },                                        \n                                            {\n                                                cssClass : 'col-md-6', \n                                                numberItemPerRow: 2\n                                            },\n                                            {\n                                                cssClass : 'col-md-4', \n                                                numberItemPerRow: 3\n                                            }\n                                        ]; \n\n      /** easyFormDragDropProperties \n       *\n       * drag and drop appearance configuration properties\n       */\n      var _dragDropConfigModel =  {\n          dropZoneConfig : {\n                                decoration :  [\n                                                {\n                                                  WhenIndex: 0,\n                                                  ApplycssClass: 'col-md-4', \n                                                  fontAwesomeIcon: 'fa fa-level-up',\n                                                  title: 'Drag control from here : '\n                                                },\n                                                {\n                                                  WhenIndex: 1,\n                                                  ApplycssClass: 'col-md-8', \n                                                  fontAwesomeIcon: 'fa fa-level-down',\n                                                  title: 'Drop control into here : '\n                                                }\n                                              ],\n                                verboseMode : false\n                            },\n          containerConfig : {\n                                decoration :    [\n                                                  {\n                                                    WhenIndex     : 0,\n                                                    ApplycssClass : 'col-md-12', \n                                                    title         : 'Blank : ',\n                                                    groupId       : 'blank',\n                                                    isCollapsed   : true \n                                                  },                                \n                                                  {\n                                                    WhenIndex     : 1,\n                                                    ApplycssClass : 'col-md-12', \n                                                    title         : 'Headers : ',\n                                                    groupId       : 'headers',\n                                                    isCollapsed   : true \n                                                  },\n                                                  {\n                                                    WhenIndex     : 2,\n                                                    ApplycssClass : 'col-md-12', \n                                                    title         : 'Text inputs : ',\n                                                    groupId       : 'inputs' ,\n                                                    isCollapsed   : true\n                                                  },\n                                                  {\n                                                    WhenIndex     : 3,\n                                                    ApplycssClass : 'col-md-12',\n                                                    title         : 'Textareas : ',\n                                                    groupId       : 'textareas',\n                                                    isCollapsed   : true \n                                                  },\n                                                  {\n                                                    WhenIndex     : 4,\n                                                    ApplycssClass : 'col-md-12',\n                                                    title         : 'Radios : ',\n                                                    groupId       : 'radios',\n                                                    isCollapsed   : true \n                                                  },\n                                                  {\n                                                    WhenIndex     : 5,\n                                                    ApplycssClass : 'col-md-12',\n                                                    title         : 'Checkboxes : ',\n                                                    groupId       : 'checkboxes',\n                                                    isCollapsed   : true \n                                                  },\n                                                  {\n                                                    WhenIndex     : 6,\n                                                    ApplycssClass : 'col-md-12',\n                                                    title         : 'Selects : ',\n                                                    groupId       : 'selects',\n                                                    isCollapsed   : true \n                                                  } \n                                                ],\n\n                                verboseMode     : false, \n                                collapseEnabled : true,\n                                collapseCtrl    : [\n                                                    {\n                                                      atIndex : 0,\n                                                      collapse : true\n                                                    },\n                                                    {\n                                                      atIndex : 1,\n                                                      collapse : true\n                                                    }\n                                                  ]                                                                  \n                            },\n          itemConfig    :   {\n                              verboseMode : false, \n                            }                  \n                                  };  \n      /**\n       * drag and drop presentation model\n       *\n       * conatain all draggaable items \n       */\n      var _dragDropPresentationModel = [\n                                          //1 column here is control selection column\n                                          [],\n                                          [\n                                            //empty 1st line at initialisation\n                                            []\n                                          ]\n                                       ];\n\n      var _itemsNotToCountFoReal = {\n                                      //placeholder :         '',\n                                      itemBeingDragged :    ''\n                                   };\n      /**\n       * setListItemCssClass : to use in app.config\n       * -> if need to overrides/modify \"_defaultDragDropItemCssClasses\"\n       */\n      this.setListItemCssClass = function(fromConfig){\n                                _listDragDropItemCssClasses = [].concat(fromConfig);\n                                };            \n      \n      this.getItemsNotTocount = function(){\n                                return _itemsNotToCountFoReal;\n                                };          \n      \n      this.setItemsNotTocount = function(fromConfig){\n                                _itemsNotToCountFoReal = angular.copy(fromConfig);\n                                };\n\n      \n      this.addControlToDragDropPresentationModel = function(controlToAdd, groupToAdd){\n                                                      if (typeof controlToAdd !== 'undefined' &&\n                                                          typeof groupToAdd   !== 'undefined') {\n                                                        addToGroupControl(controlToAdd, groupToAdd);\n                                                      }\n                                                    };\n\n      this.getDragDropPresentationModel = function(){\n                                            /**\n                                             * \n                                             */\n                                            return _dragDropPresentationModel;\n                                          };\n\n      this.$get = [\n\n        function(){\n    \n          var Service = {};\n\n          Service.getListItemCssClass = function(){                                               \n                                        return _listDragDropItemCssClasses;\n                                        };\n          /**\n           * when counting items in a line : need to skip placeholder and hidden dragging source\n           * to get the right css to apply visible items\n           */\n          Service.getItemsNotToCount = function(){\n                                      return _itemsNotToCountFoReal;\n                                      }; \n         \n          /**\n           * return css class to apply depending numberOfItems (in line) as input param                 \n           */\n          Service.getItemCssDependingNumberItemsInRow =  function(numberOfItems){\n                                                          if(typeof numberOfItems !== 'undefined'){\n                                                            var classToReturn = '';\n                                                            for (var  i = _listDragDropItemCssClasses.length - 1; \n                                                                      i >= 0; \n                                                                      i--) {\n                                                              if (_listDragDropItemCssClasses[i].numberItemPerRow === numberOfItems) {\n                                                                classToReturn = _listDragDropItemCssClasses[i].cssClass;  \n                                                              }\n                                                            }\n                                                            return classToReturn;\n                                                          }else{\n                                                            return '';\n                                                          }     \n                                                          };                                          \n               \n          Service.getDistinctItemCssClass = function(){\n                                              var distinctCssClass = [];\n                                              angular.forEach(_listDragDropItemCssClasses, function(valueRef){\n\n                                                var cssClassRef = valueRef.cssClass;\n\n                                                if (distinctCssClass.length === 0){\n                                                  distinctCssClass.push(cssClassRef);\n                                                } else {\n                                                  var canAdd = true;\n\n                                                  angular.forEach(distinctCssClass, function(valueProc){\n                                                    var cssClassProc = valueProc;\n\n                                                    if (cssClassRef === cssClassProc) {\n                                                      canAdd = false;\n                                                    }\n\n                                                  });\n\n                                                  if (canAdd) distinctCssClass.push(cssClassRef);\n                                                }\n\n                                              });\n                                              return distinctCssClass;\n                                            };\n          Service.getDragDropConfigModel = function(){\n                                              /**\n                                               * \n                                               */\n                                              return _dragDropConfigModel;\n                                            };\n\n          Service.setDragDropConfigContainerDecorationCollapse = function(dragDropConfigModel, indexValue, isCollapsedBool){\n                                                                    if (typeof indexValue       !== 'undefined' &&\n                                                                        typeof isCollapsedBool  !== 'undefined') {\n\n                                                                      if (indexValue === parseInt(indexValue, 10)) {\n                                                                        dragDropConfigModel.containerConfig.decoration[indexValue].isCollapsed = isCollapsedBool;\n                                                                      }\n\n                                                                    }\n                                                                    return true;\n                                                                  };\n\n          Service.getDragDropPresentationModel = function(){\n                                                  /**\n                                                   * \n                                                   */\n                                                   return _dragDropPresentationModel;\n                                                 };\n\n          return Service;\n        } \n      ];\n\n      /**\n       * addToGroupControl : add control to _dragDropPresentationModel\n       * @param {[type]} thisControl : control to add\n       * @param {[type]} thisGroup   : groupId wher this control should be added\n       *\n       * NOTE : if _dragDropPresentationModel wrong initialized it will create list of group conforming to \n       * configModel\n       */\n      function addToGroupControl(thisControl, thisGroup){\n        /**\n         * search group if already exists\n         */\n        if (_dragDropPresentationModel[0].length > 0) {\n\n          /**\n           * case when _dragDropConfigModel.containerConfig.decoration.length is > to _dragDropPresentationModel[0].length\n           *\n           * for instance : initialization _dragDropPresentationModel[0] in between\n           */\n          if (_dragDropPresentationModel[0].length < _dragDropConfigModel.containerConfig.decoration.length) {\n            var missingGroupNumber = _dragDropConfigModel.containerConfig.decoration.length - _dragDropPresentationModel[0].length;\n\n            for (var i = 0; i < missingGroupNumber; i++) {\n              _dragDropPresentationModel[0].push([]);\n            }\n\n          }\n          /**\n           * push control to right index \n           * (deduced by _dragDropConfigModel.containerConfig.decoration.WhenIndex value for groupId === thisGroup)\n           */\n           _dragDropConfigModel.containerConfig.decoration.forEach(function(groupConfig){\n            if (thisGroup.addToGroupCtrl === groupConfig.groupId) {\n              _dragDropPresentationModel[0][groupConfig.WhenIndex].push(thisControl);\n            }\n           });\n\n        }else{\n          /**\n           * no group no control\n           *\n           * initialize _dragDropConfigModel.containerConfig.decoration list\n           */\n          _dragDropConfigModel.containerConfig.decoration.forEach(function(){\n            _dragDropPresentationModel[0].push([]);\n          });\n\n          /**\n           * push control to right index \n           * (deduced by _dragDropConfigModel.containerConfig.decoration.WhenIndex value for groupId === thisGroup)\n           */\n           _dragDropConfigModel.containerConfig.decoration.forEach(function(groupConfig){\n            if (thisGroup.addToGroupCtrl === groupConfig.groupId) {\n              _dragDropPresentationModel[0][groupConfig.WhenIndex].push(thisControl);\n            }\n           }); \n          \n        }\n      }      \n}]);\n/**\n *  ------------------------------------------------------\n *  provider : EasyFormGenFormlyBindingModels\n *  ------------------------------------------------------\n *\n *  configure all related to bing model (easy form generator - formly)\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/ \nangular\n\t.module('edaApp.providers.EasyFormGenFormlyBindingModels', [])\n\t.provider('EasyFormGenFormlyBindingModels', [\n\n\tfunction(){ \n\t \n\t\t/** \n\t\t * define all controls easy form genearator will manage\n\t\t */\n\t\tvar _easyFormListControls =\t{\n\t\t\t\t\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t\t\t\t\t * easyFormGenerator (no drag drop version) need this array in \n\t\t\t\t\t\t\t\t\t\t\t\t * the modal when adding control to row. \n\t\t\t\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t\t\t\t * drag drop version need this in control editor\n\t\t\t\t\t\t\t\t\t\t\t\t * \n\t\t\t\t\t\t\t\t\t\t\t\t * works in, pair with formlyProvider in case of special \n\t\t\t\t\t\t\t\t\t\t\t\t * control like 'RichTextEditor'\n\t\t\t\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\t\t\t\t//control array should be like :\n\t\t\t\t\t\t\t\t\t\t\t\t//\tcontrols: [\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t// \t{\n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tid \t\t\t\t\t\t\t\t: 'TextInput',  \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tname \t\t\t\t\t\t\t: 'Text input', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tsubtitle \t\t\t\t\t: 'Text input', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tgroup \t\t\t\t\t\t: 'input', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tformlyType \t\t\t\t: 'input', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tformlySubtype \t\t: '', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tformlyLabel \t\t\t: '', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tformlyRequired \t\t: false, \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tformlyDesciption \t: '', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tformlyOptions \t\t: []\n\t\t\t\t\t\t\t\t\t\t\t\t// \t},\t\n\t\t\t\t\t\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tid \t\t\t\t\t\t\t\t: 'Password',  \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tname \t\t\t\t\t\t\t: 'Password', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tsubtitle \t\t\t\t\t: 'Password', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tgroup \t\t\t\t\t\t: 'input', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tformlyType \t\t\t\t: 'input', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tformlySubtype \t\t: 'password', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tformlyLabel \t\t\t: '', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tformlyRequired \t\t: false, \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tformlyDesciption \t: '', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tformlyOptions \t\t: []\n\t\t\t\t\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t\t\t\t\t\t// \t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t//\t] \t\t\t\t\t\t\t\t\t\t\t\t\t\n\t                    \tcontrols : [],\n\n\t                      selectedControl : 'none' ,\n\t                      temporyConfig : {\n\t                                        selectedControl\t\t: 'none',\n\t                                        formlyLabel\t\t\t\t: 'label',  \n\t                                        formlyRequired\t\t: false, \n\t                                        formlyDesciption\t: '',\n\t                                        formlyPlaceholder\t: '',\n\t                                        formlyOptions \t\t: []\n\t                                      } \n\t\t};\n\n\n\t\tvar _easyFormEmptyConfigurationLineModel =                                 \t\t\t\n\t            {\n\t              line \t\t\t\t\t: 1,                                       \n\t              activeColumn \t: 1,\n\t              columns \t\t\t: [\n\t                                {  \n\t                                  numColumn \t: 1,\n\t                                  exist \t\t\t:true, \n\t                                  control \t\t: {\n\t                                                  type:'none',\n\t                                                  key: 'none',\n\t                                                  // templateOptions: {\n\t                                                  //                     label: 'none',\n\t                                                  //                     placeholder: 'none',\n\t                                                  //                     required: false,\n\t                                                  //                     description: 'Descriptive text'\n\t                                                  //                   }\n\t                                                }\n\t                                  }\n\t                               ]\n\t             }                                 \n\t        ;\n\t    var _emptyControlFieldModel = {\n\t                                  control \t\t: {\n\t                                                  type:'none',\n\t                                                  key: 'none',\n\t                                                }\t    \t\n\t    };\n\t\t/**\n\t\t * formly field model (back model = configuration model)\n\t\t * at initial state (1 line empty)\n\t\t *\n\t\t * If need a configuration before loading from database \n\t\t * or loading from saved object better use _easyFormReloadConfigurationModel \n\t\t */\n\t\tvar _easyFormInitialStateConfigurationModel =  {                                \n\t    /**\n\t     * commun all easy form generator ways\t\n\t     */\n\t    submitButtonText \t: 'submit',\n\t    cancelButtonText \t: 'cancel',\n\t    lines : [].concat(_easyFormEmptyConfigurationLineModel)\n    };\n\n    var _easyFormInitialStateConfigurationModelAddOnForStepWay = {\n\t\t\t/**\n\t\t\t * specific easy form generator — step way — (not drag and drop way), needed for wizard management\n\t\t\t */\n\t    activeLine \t\t\t: 1,   \n\t    listConfigStep \t: [\n\t                        'init',\n\t                        'first',\n\t                        'second',\n\t                        'third'\n\t                  \t\t],\n\t    stepIndicators \t: [\n\t                        true,\n\t                        false,\n\t                        false,\n\t                        false\n\t                      ], \n\t    configStepCounter : 0,     \t\n    };\t\n\n\n    var _easyFormReloadConfigurationModel =  {                                \n\t    /**\n\t     * commun all easy form generator ways\t\n\t     *\n\t     * this model when loading as initial state \n\t     * -> when then loading a previous configuration\n\t     * i.e. : loading from database\n\t     *\n\t     * If need a model for intitial state (without loadin data)\n\t     * better use _easyFormInitialStateConfigurationModel\n\t     */\n\t    submitButtonText \t: 'submit',\n\t    cancelButtonText \t: 'cancel',\n\t    lines : []\n    };\n\n    var _headerTemplates = \t{\n    \t\t\t\t\t\t\t\t\t\t\t\t\tcssClass \t\t: ['col-xs-12', 'col-xs-6', 'col-xs-4'],\n    \t\t\t\t\t\t\t\t\t\t\t\t\ttextContent : '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n    \t\t\t\t\t\t\t\t\t\t\t\t\thtml_part1 \t: [\n\t\t                                          //'<div class=\"row\">',\n\t\t                                          '  <div class=\"',\n\n\t\t                                         ].join(''),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectedClass : '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thtml_part2 \t: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\">',\n\t\t                                          '    <h2 class=\"text-center\">'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].join(''),\t\t\t\t\t\t\t \n\t\t                          html_part3  : this.textContent,\n\t\t                          html_part4 \t:  [ \n\t\t                                          '    <h2>',\n\t\t                                          '    <hr/>',\n\t\t                                          '  </div>',\n\t\t                                          //'</div>'\n\t\t                                         ].join(''),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsimpleHtml1 : \t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'<h2 class=\"text-center\">'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].join(''),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsimpleHtml2 : \t[\n\t\t                                          '    <h2>',\n\t\t                                          '    <hr/>',\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].join('')\t\t\t\t\t\t \n    \t\t\t\t\t\t\t\t\t\t\t\t};\n\n    var _formlyControlTemplates =\t{\n\t\t                                className : ['col-xs-12', 'col-xs-6', 'col-xs-4'],\n\t\t                                type      : '',\n\t\t                                key       : '',\n\t\t                                templateOptions: {\n\t\t                                    type        : '',\n\t\t                                    label       : '',\n\t\t                                    required    : '',\n\t\t                                    placeholder : '',\n\t\t                                    description : '',\n\t\t                                    options     : ''    \n\t\t                                }\n\t\t                              };\n\n\t\tvar _particularControlProperties = \t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrolType \t: 'datepicker',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tproperties \t\t: [\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisRoot  \t\t\t\t\t: false, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisTemplateOptions : true, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue \t\t\t\t\t\t: 'datepickerPopup'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t];\n\n\n\n\t\tthis.getAllParticularControlProperties = function(){\n\t\t\t/**\n\t\t\t * \n\t\t\t */\n\t\t\treturn _particularControlProperties;\n\t\t};\n\n\t\tthis.addParticularControlProperties = function(newParticularControlProperty){\n\t\t\t/**\n\t\t\t * test object param has waited properties\n\t\t\t */\n\t\t\tif (('controlType' \tin newParticularControlProperty) &&\n\t\t\t\t\t('properties' \tin newParticularControlProperty)) {\n\t\t\t\t/**\n\t\t\t\t * test controlType does not already exists\n\t\t\t\t *\n\t\t\t\t * here will update properties (correponding controlType) if already exists\n\t\t\t\t */\n\t\t\t\tvar isAnUpdate = false;\n\t\t\t\tif ( _particularControlProperties.length > 0 ) {\n\n\t\t\t\t\t_particularControlProperties.forEach(function(controlProp){\n\n\t\t\t\t\t\tif (controlProp.controlType === newParticularControlProperty.controlType) {\n\t\t\t\t\t\t\tcontrolProp.properties = [].concat(newParticularControlProperty.properties);\n\t\t\t\t\t\t\tisAnUpdate = true;\n\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * it is no update so ; add newParticularControlProperty\n\t\t\t\t */\n\t\t\t\tif (!isAnUpdate) {\n\n\t\t\t\t\t_particularControlProperties.push(newParticularControlProperty);\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t\treturn _particularControlProperties;\t\t\t\n\t\t};\n\n\n\n\n\n\t\tthis.getEasyFormListControls = function(){\n\t\t\t/**\n\t\t\t * \n\t\t\t */\n\t\t\treturn _easyFormListControls;\n\t\t};\n\n\t\tthis.addEasyFormControlToList = function(controlDeclaration){\n\t\t\tif (typeof controlDeclaration !== 'undefined'){\n\t\t\t\t_easyFormListControls.controls.push(controlDeclaration);\n\t\t\t}\n\t\t};\n\n\n\n\t\tthis.getHeaderTemplates = function(){\n\t\t\t/**\n\t\t\t * \n\t\t\t */\n\t\t\treturn _headerTemplates;\n\t\t};\n\n\t\tthis.addHeaderTemplateCssClass = function(cssClassToAdd){\n\t\t\tif (typeof cssClassToAdd !== 'undefined') {\n\t\t\t\t_headerTemplates.cssClass.push(cssClassToAdd);\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\tthis.getFormlyControlTemplate = function(){\n\t\t\t/**\n\t\t\t * \n\t\t\t */\n\t\t\treturn _formlyControlTemplates;\n\t\t};\n\n\t\tthis.addformlyControlTemplatesCssClass = function(cssClassToAdd){\n\t\t\tif (typeof cssClassToAdd !== 'undefined') {\n\t\t\t\t_formlyControlTemplates.className.push(cssClassToAdd);\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * setFormlyControlTemplate : overrides ControlTemplate\n\t\t */\n\t\tthis.setFormlyControlTemplate  = function(newFormlyControlTemplate){\n\t\t\t/**\n\t\t\t * test object param has minimum waited properties\n\t\t\t */\n\t\t\tif (('className'\t\t\t\tin newFormlyControlTemplate) &&\n\t\t\t\t\t('type' \t\t\t\t\t\tin newFormlyControlTemplate) &&\n\t\t\t\t\t('key' \t\t\t\t\t\t\tin newFormlyControlTemplate) &&\n\t\t\t\t\t('templateOptions') in newFormlyControlTemplate) {\n\t\t\t\t_formlyControlTemplates = angular.copy(newFormlyControlTemplate);\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\t/**\n\t\t * TODO : add an extend properties method to _formlyControlTemplates\n\t\t */\n\t\t\n\t\tthis.$get =\t[\n\n\t\t\tfunction(){\n\t\t\t\tvar Service = {};\n\n\t\t\t\tService.getEasyFormListControls = function(){\n\t\t\t\t\treturn _easyFormListControls;\n\t\t\t\t};\n\t\t\t\t/**\n\t\t\t\t * getEasyFormInitialStateConfigurationModel : get configuration model \n\t\t\t\t * (back model equivalent to formly field model) at \"initial state = 1 empty line\"\n\t\t\t\t * \n\t\t\t\t * @param  bool addStepWayProperties  : add or not properties specefic to easy form generator step way\n\t\t\t\t * @return object  configuration model\n\t\t\t\t */\n\t\t\t\tService.getEasyFormInitialStateConfigurationModel = function(addStepWayProperties){\n\t\t\t\t\tvar initialConfigurationModel = angular.copy(_easyFormInitialStateConfigurationModel);\n\t\t\t\t\tif (typeof addStepWayProperties !== 'undefined') {\n\t\t\t\t\t\tif (addStepWayProperties) {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * add properties specific to step way\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tangular.extend(initialConfigurationModel, _easyFormInitialStateConfigurationModelAddOnForStepWay);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn initialConfigurationModel;\n\t\t\t\t};\n\t\t\t\t/**\n\t\t\t\t * getEasyFormInitialStateConfigurationModel : get configuration model \n\t\t\t\t * (back model equivalent to formly field model) at \"initial state = 0 line\"\n\t\t\t\t * => good model to load a previous saved into it (just load lines and buttons names then)\n\t\t\t\t * \n\t\t\t\t * @param  bool addStepWayProperties  : add or not properties specefic to easy form generator step way\n\t\t\t\t * @return object  configuration model\n\t\t\t\t */\n\t\t\t\tService.getEasyFormReloadConfigurationModel = function(addStepWayProperties){\n\t\t\t\t\tvar initialConfigurationModel = angular.copy(_easyFormReloadConfigurationModel);\n\t\t\t\t\tif (typeof addStepWayProperties !== 'undefined') {\n\t\t\t\t\t\tif (addStepWayProperties) {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * add properties specific to step way\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tangular.extend(initialConfigurationModel, _easyFormInitialStateConfigurationModelAddOnForStepWay);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn initialConfigurationModel;\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * getEasyFormEmptyConfigurationLineModel to get \"empty line model template\"\n\t\t\t\t * NOTE : \"empty line\" means no control in this line\n\t\t\t\t */\n\t\t\t\tService.getEasyFormEmptyConfigurationLineModel = function(){\n\t\t\t\t\treturn _easyFormEmptyConfigurationLineModel;\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * get an empty control model from coniguration model\n\t\t\t\t */\n\t\t\t\t Service.getEasyFormConfigurationEmptyControlModel = function(){\n\t\t\t\t \treturn _emptyControlFieldModel;\n\t\t\t\t };\n\n\t\t\t\t/**\n\t\t\t\t *\n\t\t\t\t *\n\t\t\t\t * \n\t\t\t\t * TODO : helpers to improve \"formfielManage Service\"\n\t\t\t\t *\n\t\t\t\t * - objective it to replace Add N ColumnControl methods\n\t\t\t\t * \n\t\t\t\t */\n\n\t\t\t\t/**\n\t\t\t\t * getRawHeaderTemplates : return full headerTemplates object\n\t\t\t\t *\n\t\t\t\t * better use getHeaderTemplateForNcolumnLine to return a particular header template\n\t\t\t\t */\n\t\t\t\tService.getRawHeaderTemplates = function(){\n\t\t\t\t\t/**\n\t\t\t\t\t * \n\t\t\t\t\t */\n\t\t\t\t\treturn _headerTemplates;\n\t\t\t\t};\n\t\t\t\t/**\n\t\t\t\t * [getHeaderTemplateForNcolumnLine : return a particular header template depending n columns in lines\n\t\t\t\t * @param   nbColInLines : an integer reflecting numbers of column template\n\t\t\t\t * @param   textContent  : header's text\n\t\t\t\t * @return  an headerTemplate object\n\t\t\t\t */\n\t\t\t\tService.getHeaderTemplateForNcolumnLine = function(nbColInLines, textContent){\n\t\t\t\t\tif (typeof nbColInLines !== 'undefined' &&\n\t\t\t\t\t\t\ttypeof textContent \t!== 'undefined') {\n\n\t\t\t\t\t\tif (nbColInLines === parseInt(nbColInLines, 10)) {\n\n\t\t\t\t\t\t\tif (nbColInLines <=  _headerTemplates.cssClass.length) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t    \tvar headerToReturn = {};\n\t\t\t\t\t    \theaderToReturn.className = _headerTemplates.cssClass[nbColInLines - 1];\n\t\t\t\t\t    \t/**\n\t\t\t\t\t    \t * header html property depends this property dont forget to set it before reading html property\n\t\t\t\t\t    \t */\n\t\t\t\t\t    \t_headerTemplates.textContent = textContent;\n\t\t\t\t\t\t\t\t_headerTemplates.selectedClass = headerToReturn.className;\n\n\t\t\t\t\t    \t// headerToReturn.template = [\n\t\t\t\t\t    \t// \t\t\t\t\t\t\t\t\t\t\t\t\t\t_headerTemplates.html_part1,\n\t\t\t\t\t\t\t\t// \t\t\t\t\t\t\t\t\t\t\t\t\t\t_headerTemplates.selectedClass,\n\t\t\t\t\t\t\t\t// \t\t\t\t\t\t\t\t\t\t\t\t\t\t_headerTemplates.html_part2,\n\t\t\t\t\t    \t// \t\t\t\t\t\t\t\t\t\t\t\t\t\ttextContent,\n\t\t\t\t\t    \t// \t\t\t\t\t\t\t\t\t\t\t\t\t\t_headerTemplates.html_part4\n\t\t\t\t\t    \t// \t\t\t\t\t\t\t\t\t\t\t\t\t].join('');\n\n\t\t\t\t\t    \theaderToReturn.template = [\n\t\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_headerTemplates.simpleHtml1,\n\t\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextContent,\n\t\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_headerTemplates.simpleHtml2\n\t\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t].join('');\n\n\t\t\t\t\t    \treturn headerToReturn;\n\t\t\t\t    \t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\n\n\n\n\t\t\t\t/**\n\t\t\t\t * getRawFormlyControlTemplates : return full generic control templates object\n\t\t\t\t *\n\t\t\t\t * better use getFormlyControlTemplateForNcolumnLine to return a particular control template\n\t\t\t\t */\n\t\t\t\tService.getRawFormlyControlTemplates = function(){\n\t\t\t\t\treturn _formlyControlTemplates;\n\t\t\t\t};\n\t\t\t\t/**\n\t\t\t\t * [getFormlyControlTemplateForNcolumnLine : return a particular control template depending n columns in lines\n\t\t\t\t * @param   nbColInLines : an integer reflecting numbers of column template\n\t\t\t\t * @return  an empty generic control template object\n\t\t\t\t */\n\t\t\t\tService.getFormlyControlTemplateForNcolumnLine = function(nbColInLines, controlType){\n\t\t\t\t\tif (typeof nbColInLines !== 'undefined') {\n\n\t\t\t\t\t\tif (nbColInLines === parseInt(nbColInLines, 10)) {\n\t\t\t\t\t\t\tif (nbColInLines <=  _formlyControlTemplates.className.length) {\n\n\t\t\t\t\t\t\t\tvar controlToReturn = angular.copy(_formlyControlTemplates);\n\t\t\t\t\t\t\t\tcontrolToReturn.className = _formlyControlTemplates.className[nbColInLines - 1];\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * check controlType: it may require another particular property\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tif (typeof controlType !== 'undefined') {\n\n\t\t\t\t\t\t\t\t\t_particularControlProperties.forEach(function(controlProp){\n\n\t\t\t\t\t\t\t\t\t\tif (controlProp.controlType === controlType) {\n\t\t\t\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t\t\t\t * add all properties this controlType has\n\t\t\t\t\t\t\t\t\t\t\t * \n\t\t\t\t\t\t\t\t\t\t\t * NOTE : dot expression and bracket expression to access object property\n\t\t\t\t\t\t\t\t\t\t\t * http://www.ecma-international.org/ecma-262/5.1/#sec-11.2.1\n\t\t\t\t\t\t\t\t\t\t\t */\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tcontrolProp.properties.forEach(function(aPropToAdd){\n\n\t\t\t\t\t\t\t\t\t\t\t\tif (aPropToAdd.isRoot) controlToReturn[aPropToAdd.value] = '';\n\t\t\t\t\t\t\t\t\t\t\t\tif (aPropToAdd.isTemplateOptions) controlToReturn.templateOptions[aPropToAdd.value] = '';\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t    \treturn controlToReturn;\n\t\t\t\t    \t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\treturn Service;\n\n\t\t\t}\n\n\t\t];\t\n\t\t\n\t}]);\n/**\n *  ------------------------------------------------------\n *  module = \"providers\" container\n *  ------------------------------------------------------\n *      Syntax (convention) :\n *          \"edaApp\" = application\n *          \"edaApp.providers\" = container services module\n *\n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n\nangular\n\t.module('edaApp.providers', [\t'edaApp.providers.dragDropConfigProvider',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.providers.EasyFormGenFormlyBindingModels', \n\tfunction () {\n\t\n\t}]);\n\n/**\n *  ------------------------------------------------------\n *  module = \"controllers\" container\n *  ------------------------------------------------------\n *\n *  This module is a container -> it must be injected in the application -> so it will inject all controllers injected here\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n\t.module('edaApp.controllers', [\t'edaApp.controllers.edaMainController',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.controllers.edaEditController',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.controllers.edaEditMODALController',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.controllers.edaEditPanelController',\t\t\t\t\t\t\t\n\t]);\n\n/**\n *  ------------------------------------------------------\n *   edaEditController\n *  ------------------------------------------------------ \n *\n * main controller for viewing / editing / managing forms\n *\n *\n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n */ \nangular\n  .module('edaApp.controllers.edaEditController', [])\n  .controller('edaEditController', [\t'$scope', \n                                        'easyFormGenVersion',\n                                        '$filter',\n                                        '$anchorScroll',\n          \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'toaster', \n          \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'$timeout',\n                                        '$modal',\n                                        '$log', \n                                        'formFieldManage',\n                                        'formsByIdService',\n                                        'controllerModalProxy',\n                                        'dragDropItemDecorationService',\n                                        'dragDropConfig',\n                                        'ddModelConfModelProxyService',\n                                        'ddItemRightClickedManager',\n  function (\t$scope, \n              easyFormGenVersion,\n              $filter,\n              $anchorScroll,\n\t\t\t\t\t\t\ttoaster,\n\t\t\t\t\t\t\t$timeout, \n              $modal,\n              $log, \n              formFieldManage, \n              formsByIdService, \n              controllerModalProxy,\n              dragDropItemDecorationService,\n              dragDropConfig,\n              ddModelConfModelProxyService,\n              ddItemRightClickedManager) {\n\n\n\n  /**\n   * versionning\n   */\n  \n  $scope.easyFormGeneratorVERSION = easyFormGenVersion;\n\n  /**\n   * tab managment\n   */\n  $scope.tab =  {\n                  editTab : {active : true},\n                  previewTab : {active : false},\n                };\n\n\n  /**\n   * formly models\n   */\n  $scope.vm = this;\n  /**\n   * model filled by form :\n   */\n  $scope.vm.model = {};\n  /**\n   * form schema : \n   * (filled from $scope.configuration on drag an drop events)\n   */\n  $scope.vm.wfFormFields = [];\n  /**\n   * wfFormFieldsOnlyNeededProperties : formly field model \n   * (clean model : just needed properties\n   *   -> that on is not bound to angular formly \n   *   -> could be saved to database\n   * )\n   */\n  $scope.vm.wfFormFieldsOnlyNeededProperties = []; \n\n  /**\n   * preview tab : manage collapse/expend states\n   */\n  $scope.ihm = {\n                  preview : {\n                                formlyModelViewExpanded : true,\n                                formlyFieldsViewExpanded : true,\n                                customizeFormButtonsExpanded : true,\n                                saveThisFormExpanded : true  \n                            }\n\n  };\n\n\n  /**\n   * easyFormDragDropProperties : configure drag and drop apearance\n   *\n   * — see dragDropConfig provider —\n   */\n  $scope.easyFormDragDropProperties = dragDropConfig.getDragDropConfigModel();\n  /**\n   * dragDropModel : darg drop presentation model\n   *\n   * manage drag and drop UI : drag and drops events will change it then change configuration model\n   */\n  $scope.dragDropModel = [].concat(dragDropConfig.getDragDropPresentationModel());\n\n  //console.dir(  {'dragDropModel' : $scope.dragDropModel});\n\n\n \n   //column ref                         \n   $scope.numberOfColumns = 1;\n   $scope.MaxNumberOfColumns = 3;\n   $scope.MinNumberOfColumns = 1;\n\n\n  ///////////////////////////////////////////////////////////////////////////////////\n  // configuration model (contains array of lines which contains array of columns)\n  ///////////////////////////////////////////////////////////////////////////////////\n  $scope.configuration = {};\n  /**\n   * formFieldManage.initConfigurationEditFromScratch(_OBJECT TO INIT_, _BOOL ADD STEP WAY PROPERTIES_)\n   */\n  formFieldManage.initConfigurationEditFromScratch($scope.configuration , false);\n\n  /**\n   * init proxyModel \n   * (object shared between this controller and edit panel controlelr)\n   */\n  controllerModalProxy.initProxyModel();\n  /**\n   * collapse all other group of draggable controls : when a group control expands\n   */\n  $scope.collapseAllGroupControl = function(allExceptThisGroupIndex){\n    \n    angular.forEach($scope.easyFormDragDropProperties.containerConfig.decoration, function(value){\n      if (value.WhenIndex !== allExceptThisGroupIndex) {\n          dragDropConfig.setDragDropConfigContainerDecorationCollapse($scope.easyFormDragDropProperties, value.WhenIndex, true);\n      }\n    });\n    \n  };\n\n\n\n  $scope.vm.onSubmit = onSubmit;\n  \n  function onSubmit() {\n  \n       toaster.pop({\n            type: 'info',\n            timeout:2000,\n            title: 'should save data model if it were not a static example',\n            body: 'data :' + $filter('json')($scope.vm.model, 4),                \n            showCloseButton: true\n      }); \n  }\n\n\n\n  // /**\n  //  * init formly control list\n  //  */\n  // //needed for select : list all existing forms\n  // $scope.loadExistingFormsList = loadExistingFormsAsList();\n\n\n  // function loadExistingFormsAsList(){\n  //   //If it were not a static html, it should call server to retrieve data from database :\n  //   // $scope.formlyList = formsByIdService.query();  \n  // }\n\n  // //load on init\n  // loadExistingFormsAsList();\n\n  // $scope.previewLoadedForm = {fieldsModel:[]};\n  // $scope.configurationLoaded = {};\n\n  // $scope.previewExistingform = function(formlyform){\n\n  //  var configlines = JSON.parse(formlyform.formlyField);\n  //  //here to replace with $scope.configuration : initialise configuration with lines \n  //  $scope.configurationLoaded = {};\n  //  formFieldManage.bindConfigurationLines($scope.configurationLoaded,configlines);\n\n  //  formFieldManage.applyConfigurationToformlyModel($scope.configurationLoaded, $scope.previewLoadedForm.fieldsModel, $scope.vm.model);\n\n  //  $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n\n  //  $scope.previewLoadedForm.cancelButtonText = formlyform.cancelButtonText;\n  //  $scope.previewLoadedForm.submitButtonText = formlyform.submitButtonText;\n  // };\n\n\n\n\n\n\n  //init number of configuration lines\n  $scope.resetToZeroModel = function(){\n     $scope.configuration.activeLine = 1;\n\n     if ($scope.configuration.lines.length > 1) {\n        $scope.configuration.lines.splice(1, $scope.configuration.lines.length - 2);\n     }\n     return $scope.countConfigurationModelLines();\n  };  \n\n\n\n\n\n\n\n  //return count configuration lines\n  $scope.countConfigurationModelLines = function(){\n  \treturn $scope.configuration.lines.length;\n  };    \n  //switch to line\n  $scope.setActiveLineNumber = function(lineNumber){\n  \tif (lineNumber <= $scope.countConfigurationModelLines()) {\n  \t\t$scope.configuration.activeLine = lineNumber;\n  \t}\n  };                \n\n  $scope.upThisLine = function(indexLine){  \t\n  \tif (indexLine > -1) {\n  \t\t\tif ($scope.configuration.lines[indexLine - 1]) {\n  \t\t\t\tvar currentLineObj = $scope.configuration.lines[indexLine];\n  \t\t\t\t$scope.configuration.lines.splice(indexLine , 1);\n  \t\t\t\t$scope.configuration.lines.splice((indexLine - 1), 0, currentLineObj);  \t\n          //manage selected aciveLine\n          $scope.configuration.activeLine = 1;\n  \t\t\t}\n  \t}\n      //re-render formfield \n    formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n\n    $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);     \n  };\n\n\n  $scope.downThisLine = function(indexLine){\n  \tif (indexLine > -1) {\n  \t\t\tif ($scope.configuration.lines[indexLine + 1]) {\n  \t\t\t\tvar currentLineObj = $scope.configuration.lines[indexLine];\n  \t\t\t\t$scope.configuration.lines.splice(indexLine , 1);\n  \t\t\t\t$scope.configuration.lines.splice((indexLine + 1), 0, currentLineObj);  \n          //manage selected aciveLine\n          $scope.configuration.activeLine = 1;\n  \t\t\t}\n      }     \n      //re-render formfield \n    formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model); \n    $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);   \n  };\n\n\n\n  //must be remove a line with index of line to delete\n  $scope.removeThisLine = function(index){\n  \tif (index > -1) {\n  \t\tif ($scope.configuration.lines.length > 1) {\n          //manage selected aciveLine\n          if ($scope.configuration.activeLine === index + 1) {\n            $scope.configuration.activeLine = 1;\n          }\n  \t  \t\t$scope.configuration.lines.splice(index, 1);\n  \t\t}else{\n  \t  \t\t$timeout(function(){\n  \t\t        toaster.pop({\n  \t\t                type: 'warning',\n  \t\t                title: 'Last line' ,\n  \t\t                body: 'Can\\'t delete the last line',                \n  \t\t                showCloseButton: true\n  \t\t\t        });\n  \t\t    }, 100); \n  \t\t}\n\n    //re-render formfield \n    formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n    $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n  \t}\n  };\n\n\n\n\n\n  $scope.increaseNumberOfColumns = function(){\n\n    if ($scope.configuration.lines[$scope.configuration.activeLine -1].columns.length < $scope.MaxNumberOfColumns) {\n  \tvar newNumberOfColumns = $scope.configuration.lines[$scope.configuration.activeLine -1].columns.push(\n          \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n          \t\t\t\t\t\t\t\t\t\t\t\t\t\t                            numColumn: -1,\n          \t\t\t\t\t\t\t\t\t\t\t\t\t\t                            exist: true, \n          \t\t\t\t\t\t\t\t\t\t\t\t\t\t                            control: {\n          \t\t\t\t\t\t\t\t\t\t\t\t\t\t                                        type:'none',\n          \t\t\t\t\t\t\t\t\t\t\t\t\t\t                                        key: 'none'\n          \t\t\t\t\t\t\t\t\t\t\t\t\t\t                                      }                                         \n          \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t }\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n  \t\n  \t $scope.configuration.lines[$scope.configuration.activeLine -1].columns[newNumberOfColumns - 1].numColumn = newNumberOfColumns; \n  }\n     //re-render formfield \n    formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model); \n\n    $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n};\n\n\n  $scope.decreaseNumberOfColumns = function(indexLine, indexColumn){\n  \tif ($scope.configuration.lines[$scope.configuration.activeLine -1].columns.length > 1) {\n  \t\t$scope.configuration.lines[$scope.configuration.activeLine -1].columns.splice($scope.configuration.lines[$scope.configuration.activeLine -1].columns.length -1, 1);\n  \t}\n    //re-render formfield \n    formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);  \n\n    $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);  \n  };\n\n\n\n\n\n\n\n\n\n\n\n\n\n  ////////////////////////////////////////////////////////////\n  //             porperties control (STEP 3)\n  ////////////////////////////////////////////////////////////\n\n  $scope.saveThisForm = function(){\n    if (typeof $scope.configuration.formName === 'undefined') {\n    toaster.pop({\n            type: 'warning',\n            timeout:2000,\n            title: 'Form name is undefined',\n            body: 'Form has not been saved.',                \n            showCloseButton: true\n      });\n      return false;\n    }\n\n    if ($scope.configuration.formName === '') {\n    toaster.pop({\n            type: 'warning',\n            timeout:2000,\n            title: 'Form name is required',\n            body: 'Form has not been saved.',                \n            showCloseButton: true\n      });\n      return false;\n    }\n    /**\n     * [type description]\n     * @type {String}\n     */\n    toaster.pop({\n            type: 'wait',\n            timeout:10000,\n            title: 'Form is being saved',\n            body: 'Wait.',                \n            showCloseButton: true\n      });\n\n      var wfForm = new formsByIdService();\n      var formSavingIsOK = true;\n\n      wfForm.formName = $scope.configuration.formName;\n      wfForm.submitButtonText = $scope.configuration.submitButtonText;\n      wfForm.cancelButtonText = $scope.configuration.cancelButtonText;\n\n      wfForm.formlyField = JSON.stringify($scope.configuration.lines); \n\n      // save to database here \n      // wfForm.$save()\n      //             .then(function(res)  {    formSavingIsOK = true;    })\n      //             .catch(function(req) { \n      //                                   toaster.clear();\n      //                                   formSavingIsOK = false; \n      //                                   toaster.pop({\n      //                                           type: 'error',\n      //                                           timeout:2000,\n      //                                           title: 'Error while saving form',\n      //                                           body: 'Sorry, an Error occured while saving form.',                \n      //                                           showCloseButton: true\n      //                                     });\n      //             })\n      //             .finally(function()  { \n      //                                   if (formSavingIsOK === true) {\n      //                                     toaster.clear();  \n      //                                     toaster.pop({\n      //                                             type: 'success',\n      //                                             timeout:2000,\n      //                                             title: 'Form is successfully saved',\n      //                                             body: '',                \n      //                                             showCloseButton: true\n      //                                       });                                         \n      //                                   }\n      //              });\n\n      toaster.clear();  \n      toaster.pop({\n              type: 'info',\n              timeout:2000,\n              title: 'Form would be saved if it were not a static example',\n              body: '',                \n              showCloseButton: true\n        }); \n      return true;\n  };\n\n\n\n  ////////////////////////////////////////////////////////////\n  //            modal : add control to column\n  ////////////////////////////////////////////////////////////\n\n  $scope.nyaSelect = {};\n  controllerModalProxy.initNyaSelect($scope.nyaSelect);\n\n  $scope.animationsEnabled = true; \n\n  $scope.showModalAddCtrlToColumn = function (size, indexLine, numcolumn) {\n\n    var modalInstance = $modal.open({\n                                      animation: $scope.animationsEnabled,\n                                      templateUrl: 'editModalTemplate.html', \n                                      controller: 'edaEditMODALController',\n                                      size: 'lg',\n                                      resolve: {\n                                        nyaSelect: function () {\n                                          return controllerModalProxy\n                                                            .getNyASelectFromSelectedLineColumn(  $scope.nyaSelect, \n                                                                                                  $scope.configuration,\n                                                                                                  indexLine, \n                                                                                                  numcolumn\n                                                                                                );\n                                        }\n                                      }\n    });\n\n\n    modalInstance.result.then(function (modalAddCtrlModel) {\n        controllerModalProxy.bindConfigurationModelFromModalReturn(indexLine, numcolumn, modalAddCtrlModel, $scope.configuration);\n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n        \n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n    }, function () {\n      $log.info('Modal dismissed at: ' + new Date());\n    });\n  };\n\n\n  /**\n   *\n   * \n   *   drag and drop : may move from this controller\n   *\n   *\n   * \n   */\n\n \n  //specific Container dragoverCallback event\n  $scope.dragoverCallbackContainer = function(parentparentIndex, parentIndex, index){\n      //prevent container in layout column to be drag to control select contianer \n      if (index === 0) {\n          return false;\n      }\n      return true;\n  };\n\n  $scope.dropCallback = function(event, index, item, external, type, allowedType) {\n          \n      if (external) {\n          if (allowedType === 'itemType'      && !item.label)             return false;\n          if (allowedType === 'containerType' && !angular.isArray(item))  return false; \n      }\n\n      /**\n      * TODO : update configuration model\n      */\n\n      /**\n      * set a timeout befire binding\n      * since ddModel may not be called when already full updated\n      */\n      var timerRefreshDDToConfig = $timeout(function(){\n        \n        $scope.configuration = angular\n                                  .copy(ddModelConfModelProxyService\n                                          .refreshAllConfigurationFromDragAndDropModel(\n                                                                                        $scope.configuration, \n                                                                                        $scope.dragDropModel\n                                                                                       )\n                                       );\n        \n        formFieldManage.applyConfigurationToformlyModel(  \n                                                          $scope.configuration, \n                                                          $scope.vm.wfFormFields, \n                                                          $scope.vm.model\n                                                        );\n                                                        \n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n         \n        ddModelConfModelProxyService.refreshControlsKeys( \n                                                          $scope.configuration, \n                                                          $scope.dragDropModel\n                                                         );            \n\n      }, 200);\n\n      /**\n      * timerRefreshDDToConfig timer destruction\n      */\n      $scope.$on('$destroy', function(){\n            $timeout.cancel(timerRefreshDDToConfig);\n        }\n      );\n      \n\n      return item;\n  };\n\n\n\n      \n  $scope.dndItemMoved = function(parentParentIndex, parentIndex, itemIndex){\n    //prevent item from first container to disapear when dropped on other container\n    if (parentParentIndex > 0) {\n        $scope.dragDropModel[parentParentIndex][parentIndex].splice(itemIndex, 1);\n    }\n  };\n\n  $scope.dragoverCallbackItems = function(ParentParentIndex, parentIndex, index, external){\n        //prevent items in layout column to be drag to control select  \n        if (parentIndex === 0) {\n            return false;\n        }\n        return true;\n    };\n\n\n  /**\n   * disableItemDropIf prevent dropping on condition\n   *\n   * TODO : to replace in html : dnd-disable-if=\"items.length > 2\"\n   */\n  $scope.disableItemDropIf = function(){\n\n  };\n\n\n\n  /**\n   * [dropCallbackItems description]\n   * @param  {[type]} event                   [description]\n   * @param  {[type]} index                   [description]\n   * @param  {[type]} realIndex               [description]\n   * @param  {[type]} parentIndex             [description]\n   * @param  {[type]} parentParentIndex       [description]\n   * @param  {[type]} parentParentParentIndex [description]\n   * @param  {[type]} item                    [description]\n   * @param  {[type]} external                [description]\n   * @param  {[type]} type                    [description]\n   * @param  {[type]} allowedType             [description]\n   * @return {[type]}                         [description]\n   */\n  $scope.dropCallbackItems = function(event, index, realIndex, parentIndex, parentParentIndex, parentParentParentIndex, item, external, type, allowedType){\n    \n      if (external) {\n          if (allowedType === 'itemType' && !item.label) return false;\n          if (allowedType === 'containerType' && !angular.isArray(item)) return false; \n      }\n    \n     /**\n      * set a timeout before binding\n      * since ddModel may not be called when already full updated\n      */\n      var timerRefreshDDToConfig = $timeout(function(){\n        \n        $scope.configuration = angular.copy(ddModelConfModelProxyService\n                                                          .refreshAllConfigurationFromDragAndDropModel(\n                                                                                                        $scope.configuration, \n                                                                                                        $scope.dragDropModel\n                                                                                                      ));\n                                                                                                      \n        formFieldManage.applyConfigurationToformlyModel(  \n                                                            $scope.configuration, \n                                                            $scope.vm.wfFormFields, \n                                                            $scope.vm.model\n                                                        );\n                                                        \n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields); \n        /**\n         * refresh controls key in dragDrop Model\n         * to persist already exists controls between refreshes when item drop events\n         */\n        ddModelConfModelProxyService.refreshControlsKeys( \n                                                          $scope.configuration, \n                                                          $scope.dragDropModel\n                                                         );        \n\n      }, 200);\n\n      /**\n       * add/set rightCliked property to false\n       *\n       * will help edaRightClick directive\n       */\n      ddItemRightClickedManager.setUnRightClicked(item);\n\n      /**\n      * timerRefreshDDToConfig timer destruction\n      */\n      $scope.$on('$destroy', function(){\n            $timeout.cancel(timerRefreshDDToConfig);\n        }\n      );\n\n\n      return item;\n  };\n\n\n\n  /**\n   * left panel (edit control)\n   */\n  \n\n  $scope.editPanelModel = {\n                            toggle : false\n                          };\n\n\n\n  $scope.saveFromEditPanel = function(){\n\n        /**\n         * TODO : \n         * should be called from edit panel\n         *\n         * AND\n         *\n         * should call all these methods\n         *\n         * need to get  : \n         * \n         * - line index\n         * - column index\n         * - basicSelectRowCollection (from edpitpanelcontroller)   --> maybe in controllerModalProxy service\n         * - groupedSelectRowCollection (from edpitpanelcontroller) --> maybe in controllerModalProxy service\n         * - radioRowCollection (from edpitpanelcontroller)         --> maybe in controllerModalProxy service\n         */\n        \n        controllerModalProxy.bindSpecialCtrlTemporyModelsToProxyModel();\n    \n        //save config to control\n        //controllerModalProxy.applyConfigToSelectedControl(self.proxyModel);\n        //return current model to parent controller :\n\n\n\n        // //update configuration model and formly model\n        controllerModalProxy\n                .bindConfigurationModelFromProxyModel(  \n                                                        controllerModalProxy.getEditPanelModelLineIndex(), \n                                                        controllerModalProxy.getEditPanelModelColumnIndex(), \n                                                        $scope.configuration\n                                                      );\n\n        formFieldManage.applyConfigurationToformlyModel(\n                                                          $scope.configuration, \n                                                          $scope.vm.wfFormFields, \n                                                          $scope.vm.model\n                                                        );\n                                                            \n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields); \n        \n        ddModelConfModelProxyService.refreshControlsKeys( \n                                                  $scope.configuration, \n                                                  $scope.dragDropModel\n                                                  );    \n    \n        controllerModalProxy.setEditPanelModelToggle(false);\n        $scope.editPanelModel.toggle = controllerModalProxy.getEditPanelModelToggle();  \n        ddItemRightClickedManager.resetAllDragDropItemSelectedState($scope.dragDropModel);\n\n  };\n  /**\n   * close side panel\n   * -> no update =  cancel\n   */\n  $scope.closeEditPanel = function(){\n    /**\n     * reset all rightClicked control properties to false\n     */\n    ddItemRightClickedManager.resetAllDragDropItemSelectedState($scope.dragDropModel);\n\n\n    /**\n     * TODO : refresh configuration model \n     * uncomment pafter update these next 3 lines\n     * \n     * NOTE : indexLine AND  numcolumn should be stored in service and\n     * updated when togle sidepanel\n     */\n   \n    //controllerModalProxy.bindConfigurationModelFromProxyModel(indexLine, numcolumn, modalAddCtrlModel, $scope.configuration);\n    //formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);    \n    //$scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);     \n    \n    controllerModalProxy.setEditPanelModelToggle(false);\n    $scope.editPanelModel.toggle = controllerModalProxy.getEditPanelModelToggle();\n    \n  };\n\n  $scope.debugProxyModel = controllerModalProxy.ProxyModel;\n\n\n\n  $scope.setRightClicked = function(previousState, item){\n    item.rightCliked = true;\n  };\n\n\n  $scope.toggleEditPanel = function(event, lineIndex, colIndex, item){\n   ddItemRightClickedManager.resetAllDragDropItemSelectedState($scope.dragDropModel);\n   /**\n    * already opened (could be another control edit)\n    */\n   if (controllerModalProxy.getEditPanelModelToggle()) {\n    /**\n     * - immediate close \n     * and \n     * - refresh configuration model + formly model\n     */\n    controllerModalProxy.setEditPanelModelToggle(false);\n    $scope.editPanelModel.toggle = controllerModalProxy.getEditPanelModelToggle(); \n    \n    //TODO : for refreshing\n    //controllerModalProxy.bindConfigurationModelFromProxyModel(indexLine, numcolumn, modalAddCtrlModel, $scope.configuration);\n    //formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);    \n    //$scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);    \n            \n\n\n    /**\n     * check if new control right clicked otherwise just toggle side panel\n     */\n    if (typeof controllerModalProxy.getEditPanelModelLineIndex()    !== 'undefined' &&\n        typeof controllerModalProxy.getEditPanelModelColumnIndex()  !== 'undefined' &&\n        typeof controllerModalProxy.getEditPanelModelControl()      !== 'undefined') {\n  \n  \n      if (controllerModalProxy.getEditPanelModelLineIndex()   === lineIndex &&\n          controllerModalProxy.getEditPanelModelColumnIndex() === colIndex  &&\n          angular.equals(controllerModalProxy.getEditPanelModelControl(), item)) {\n  \n          //console.info('already opened for SAME ctrl : so close - no re-open');\n        \n      }else{\n  \n          //console.info('already opened for DIFFERENT ctrl : so re-open');\n\n          item.rightCliked = true;\n          /**\n          * set a timeout before re-opening\n          * 500ms is ok for a ps-size=\"400px\"\n          */\n          var timerCloseOpenedEditPanel = $timeout(function(){\n            \n           controllerModalProxy.setEditPanelModelLineIndex(lineIndex);\n           controllerModalProxy.setEditPanelModelColumnIndex(colIndex);\n           controllerModalProxy.setEditPanelModelControl(item);\n           \n           /**\n            * control model passed to Service : controllerModalProxy\n            * \n            */\n           controllerModalProxy.setProxyModelFromConfigurationSelection(\n                                                                        $scope.configuration,\n                                                                        lineIndex, \n                                                                        colIndex\n                                                                        );\n           \n           \n           controllerModalProxy.setEditPanelModelToggle(true);\n           $scope.editPanelModel.toggle = controllerModalProxy.getEditPanelModelToggle();                                         \n            \n          }, 200);\n  \n          /**\n          * timerCloseOpenedEditPanel timer destruction\n          */\n          $scope.$on('$destroy', function(){\n                $timeout.cancel(timerCloseOpenedEditPanel);\n            }\n          );\n      }\n    }\n  \n   }else{\n    /**\n     * previous state = closed = immediate open \n     */\n     //console.info('NOT already opened : so open');\n     item.rightCliked = true;\n      \n     controllerModalProxy.setEditPanelModelLineIndex(lineIndex);\n     controllerModalProxy.setEditPanelModelColumnIndex(colIndex);\n     controllerModalProxy.setEditPanelModelControl(item);\n     \n     /**\n      * control model passed to Service : controllerModalProxy\n      * \n      */\n     controllerModalProxy.setProxyModelFromConfigurationSelection(\n                                                                  $scope.configuration,\n                                                                  lineIndex, \n                                                                  colIndex\n                                                                  );\n\n     \n     controllerModalProxy.setEditPanelModelToggle(true);\n     $scope.editPanelModel.toggle = controllerModalProxy.getEditPanelModelToggle();\n     \n   }                       \n  };\n  // /**\n  //  * refreshModels : to call after drag and drop events\n  //  */\n  // $scope.refreshModels = function(){\n  //   $timeout(function(){\n  //     console.info('refreshing models');\n  //     formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n  //     $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields); \n  //   }, 10);\n\n\n  // };\n\n\n\n  /**\n   * removeThisLine event line deleted\n   */\n  $scope.removeThisLine = function(lineIndex){\n    $scope.dragDropModel[1].splice(lineIndex,1);\n  };\n\n\n  $scope.model = [];\n\n  function addNewline(){\n    /**\n     * re-render formfield\n     *\n     * TODO : to fix\n     */\n\n    formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n    $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields); \n  }\n\n\n  $scope.insertNewLine = function(){\n                          addNewline();\n                          $scope.dragDropModel[1].push([]);\n                          };\n\n}]);\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//  module = \"controllers\"  for view \"wfEdit\"\n//  ------------------------------------------------------\n//      Syntax (convention) :\n//          \"edaApp\" = application\n//          \"edaApp.controllers.viewNameController\" = controller module\n//\n//  This module is a view controller -> it must be injected in controller container\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nangular\n  .module('edaApp.controllers.edaEditMODALController', [])\n  .controller('edaEditMODALController', [\t'$scope', \n                                          '$modalInstance',\n                                          'nyaSelect',\n                                          'toaster' ,\n                                          '$timeout',\n                                          'selectOptionManage',\n                                          'controllerModalProxy',\n  function (\t$scope, \n              $modalInstance, \n              nyaSelect, \n              toaster,\n              $timeout,\n              selectOptionManage,\n              controllerModalProxy\n            ){\n\n  \n\nvar initOptionModel = {rows:[\n                            ]\n                  };\n\n  ////////////////////////////////////////////\n  // part : radio\n  ///////////////////////////////////////////\n\n  $scope.radioRowCollection = initOptionModel;\n  $scope.newOptionRadio = {saisie: ''};\n\n\n  function bindRadioFromNYA(){\n    if ($scope.nyaSelect.temporyConfig.formlyOptions.length > 0) {\n      for (var i = 0; i <= $scope.nyaSelect.temporyConfig.formlyOptions.length-1; i++){\n\n            var newOption = { \n                              'option': $scope.nyaSelect.temporyConfig.formlyOptions[i].name,\n                              'order': i,\n                              'group': ''\n                            };\n            $scope.radioRowCollection.rows.push(newOption);\n      }    \n    }\n  }\n\n  function bindRadioToNya(){\n    var resetNyASelectOptions = [];\n    $scope.nyaSelect.temporyConfig.formlyOptions = resetNyASelectOptions;\n\n    if ($scope.radioRowCollection.rows.length > 0) {\n\n      for (var i = 0; i <= $scope.radioRowCollection.rows.length - 1; i++){\n            var newOption = {\n                              'name': $scope.radioRowCollection.rows[i].option,\n                              'value': i,\n                              'group': ''\n                    };\n            $scope.nyaSelect.temporyConfig.formlyOptions.push(newOption);   \n        }       \n   }\n  }\n\n  $scope.addNewOptionRadio = function(){\n    var result = selectOptionManage.addNewOptionRadio($scope.radioRowCollection, $scope.newOptionRadio.saisie);\n    if (result.resultFlag === false) {\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: result.details,\n                  body: '\\''+ $scope.newOptionRadio.saisie + '\\'' + ' cannot be added.',                \n                  showCloseButton: true\n            });\n    }\n    //reset input\n    $scope.newOptionRadio = {saisie: \"\"};\n  };\n\n  $scope.removeRadioRow = function(index) {\n      var result = selectOptionManage.removeOption($scope.radioRowCollection, index);\n      if (result.resultFlag === false) {\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: result.details,\n                  body: 'Delete was cancelled.',                \n                  showCloseButton: true\n            });\n      }      \n    }; \n\n  $scope.upThisRadioRow = function(index){\n      var result = selectOptionManage.upthisOption($scope.radioRowCollection, index);\n      if (result.resultFlag === false) {\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: result.details,\n                  body: 'Operation cancelled.',                \n                  showCloseButton: true\n            });\n      }       \n  };                                    \n\n  $scope.downThisRadioRow = function(index){\n      var result = selectOptionManage.downthisOption($scope.radioRowCollection, index);\n      if (result.resultFlag === false) {\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: result.details,\n                  body: 'Operation cancelled.',                \n                  showCloseButton: true\n            });\n      }\n  };\n\n\n\n  ////////////////////////////////////////////\n  // part : basic Select\n  ///////////////////////////////////////////\n\n  $scope.basicSelectRowCollection = initOptionModel;\n  $scope.newOptionBasicSelect = {saisie: \"\"};\n\n\n  function bindBasicSelectFromNYA(){\n    // console.info('bindBasicSelectFromNYA');\n    // console.dir($scope.nyaSelect.temporyConfig);\n\n    if ($scope.nyaSelect.temporyConfig.formlyOptions.length > 0) {\n      for (var i = 0; i <= $scope.nyaSelect.temporyConfig.formlyOptions.length-1; i++){\n\n            var newOption = {\"option\": $scope.nyaSelect.temporyConfig.formlyOptions[i].name,\n                      \"order\": i,\n                      \"group\": \"\"\n                    };\n            $scope.basicSelectRowCollection.rows.push(newOption);\n      }    \n    }\n  }\n\n  function bindBasicSelectToNya(){\n    var resetNyASelectOptions = [];\n    $scope.nyaSelect.temporyConfig.formlyOptions = resetNyASelectOptions;\n    if ($scope.basicSelectRowCollection.rows.length > 0) {\n      for (var i = 0; i <= $scope.basicSelectRowCollection.rows.length - 1; i++){\n            var newOption = {\"name\": $scope.basicSelectRowCollection.rows[i].option,\n                      \"value\": i,\n                      \"group\": \"\"\n                    };\n            $scope.nyaSelect.temporyConfig.formlyOptions.push(newOption);\n        }      \n   }\n  }\n\n  $scope.addNewOptionBasicSelect = function(){\n    var result = selectOptionManage.addNewOptionBasicSelect($scope.basicSelectRowCollection, $scope.newOptionBasicSelect.saisie);\n    if (result.resultFlag === false) {\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: result.details,\n                  body: '\\''+ $scope.newOptionBasicSelect.saisie + '\\'' + ' cannot be added.',                \n                  showCloseButton: true\n            });\n    }\n    //reset input\n    $scope.newOptionBasicSelect = {saisie: \"\"};\n  };\n\n  $scope.removeRow = function(index) {\n      var result = selectOptionManage.removeOption($scope.basicSelectRowCollection, index);\n      if (result.resultFlag === false) {\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: result.details,\n                  body: 'Delete was cancelled.',                \n                  showCloseButton: true\n            });\n      }      \n    }; \n\n  $scope.upThisRow = function(index){\n      var result = selectOptionManage.upthisOption($scope.basicSelectRowCollection, index);\n      if (result.resultFlag === false) {\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: result.details,\n                  body: 'Operation cancelled.',                \n                  showCloseButton: true\n            });\n      }       \n  };                                    \n\n  $scope.downThisRow = function(index){\n      var result = selectOptionManage.downthisOption($scope.basicSelectRowCollection, index);\n      if (result.resultFlag === false) {\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: result.details,\n                  body: 'Operation cancelled.',                \n                  showCloseButton: true\n            });\n      }\n  };\n\n\n  ////////////////////////////////////////////\n  // part : grouped Select\n  ///////////////////////////////////////////\n\n  $scope.groupedSelectRowCollection = initOptionModel;\n  $scope.newOptionGroupedSelect = {saisie: \"\"};\n\n  $scope.GroupedSelectGroups =    {\n                                    list:[]\n                                  };\n  $scope.newGroupGroupedSelect = {saisie: \"\"};  \n  $scope.groupSelectGroupClick = {showList : false};                                \n\n\n  function bindGroupedSelectFromNYA(){\n    if ($scope.nyaSelect.temporyConfig.formlyOptions.length > 0) {\n      for (var i = 0; i <= $scope.nyaSelect.temporyConfig.formlyOptions.length-1; i++){\n      //for (var i = $scope.nyaSelect.temporyConfig.formlyOptions.length - 1; i >= 0; i--) {\n\n            var newOption = {\"option\": $scope.nyaSelect.temporyConfig.formlyOptions[i].name,\n                      \"order\": i,\n                      \"group\": $scope.nyaSelect.temporyConfig.formlyOptions[i].group\n                    };\n            $scope.groupedSelectRowCollection.rows.push(newOption);            \n        }\n        //grouplist : thx to lodash it is easy\n        var filteredgroup = _.uniq(_.pluck($scope.groupedSelectRowCollection.rows, 'group'));\n       angular.copy(filteredgroup, $scope.GroupedSelectGroups.list); \n       //console.dir($scope.GroupedSelectGroups.list);\n\n    }\n  }\n\n  function bindGroupedSelectToNya(){\n    $scope.nyaSelect.temporyConfig.formlyOptions = [];\n    for (var i = 0; i <= $scope.groupedSelectRowCollection.rows.length - 1; i++){\n          var newOption = {\"name\": $scope.groupedSelectRowCollection.rows[i].option,\n                    \"value\": i,\n                    \"group\": $scope.groupedSelectRowCollection.rows[i].group\n                  };\n\n          $scope.nyaSelect.temporyConfig.formlyOptions.push(newOption);\n          \n      }\n      ///console.log('\\n\\n\\n\\n\\n');\n      //console.dir($scope.nyaSelect.temporyConfig.formlyOptions);\n  }  \n\n  $scope.showGroupListToChoose = function(){\n    $scope.groupSelectGroupClick.showList = !$scope.groupSelectGroupClick.showList;\n  };\n\n  $scope.addNewGroupToGroupedSelect = function(){\n    if ($scope.newGroupGroupedSelect.saisie !== \"\") {\n      for (var i = $scope.GroupedSelectGroups.list.length - 1; i >= 0; i--) {\n        if ($scope.GroupedSelectGroups.list[i] === $scope.newGroupGroupedSelect.saisie) {\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: 'Group already exists',\n                  body: 'No group added.',                \n                  showCloseButton: true\n            });          \n        }\n        \n      }\n      $scope.GroupedSelectGroups.list.push($scope.newGroupGroupedSelect.saisie);\n\n    }else{\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: 'Not a valid group to add',\n                  body: 'No group added.',                \n                  showCloseButton: true\n            });\n\n    }\n    $scope.newGroupGroupedSelect.saisie = \"\";\n  };\n\n\n  $scope.addNewOptionGroupedSelect = function(){\n    var result = selectOptionManage.addNewOptionGroupedSelect($scope.groupedSelectRowCollection, $scope.newOptionGroupedSelect.saisie, '');\n    if (result.resultFlag === false) {\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: result.details,\n                  body: '\\''+ $scope.newOptionGroupedSelect.saisie + '\\'' + ' cannot be added.',                \n                  showCloseButton: true\n            });\n    }\n    //bind nya : dont bind here $apply is not done fast enough\n    //bindGroupedSelectToNya();\n    //reset input\n    $scope.newOptionGroupedSelect = {saisie: \"\"};\n  };\n\n  $scope.removeGroupedSelectRow = function(index) {\n      var result = selectOptionManage.removeOption($scope.groupedSelectRowCollection, index);\n      if (result.resultFlag === false) {\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: result.details,\n                  body: 'Delete was cancelled.',                \n                  showCloseButton: true\n            });\n      }   \n    }; \n\n  $scope.upThisGroupedSelectRow = function(index){\n      var result = selectOptionManage.upthisOption($scope.groupedSelectRowCollection, index);\n      if (result.resultFlag === false) {\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: result.details,\n                  body: 'Operation cancelled.',                \n                  showCloseButton: true\n            });\n      } \n  };                                    \n\n  $scope.downThisGroupedSelectRow = function(index){\n      var result = selectOptionManage.downthisOption($scope.groupedSelectRowCollection, index);\n      if (result.resultFlag === false) {\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: result.details,\n                  body: 'Operation cancelled.',                \n                  showCloseButton: true\n            });\n      } \n\n  };\n\n\n  /////////////////////////////////////////////\n  // init datetimepicker model\n  /////////////////////////////////////////////\n  $scope.demodt ={};\n\n  $scope.today = function() {\n    $scope.demodt.dt = new Date();\n  };\n  $scope.today();\n\n  $scope.clear = function () {\n    $scope.demodt.dt = null;\n  };\n\n\n  $scope.open = function($event) {\n    $event.preventDefault();\n    $event.stopPropagation();\n\n    $scope.demodt.opened = true;\n  };\n\n  $scope.dateOptions = {\n           formatYear: 'yy',\n           startingDay: 1,\n           showWeeks: true,\n           initDate: null\n  };\n\n  $scope.demodt.formats = ['dd-MMMM-yyyy', 'yyyy/MM/dd', 'dd.MM.yyyy', 'shortDate'];\n  \n  function initDatePicker(){\n    $scope.nyaSelect.temporyConfig.datepickerPopup = $scope.demodt.formats[0];  \n  }\n  \n\n\n  /////////////////////////////////////////////\n  // init model from controller data\n  /////////////////////////////////////////////\n  $scope.nyaSelect = nyaSelect ;\n\n  //console.dir($scope.nyaSelect);\n  \n  //selected control from  main controller applied to current selected control\n  $scope.nyaSelect.selectedControl = $scope.nyaSelect.temporyConfig.selectedControl;\n\n\n  //place nya-select to selection if not none :\n   if (nyaSelect.selectedControl !== 'none') {\n    for (var i = $scope.nyaSelect.controls.length - 1; i >= 0; i--) {\n       if ($scope.nyaSelect.controls[i].id === nyaSelect.selectedControl) {\n          //$scope.nyaSelect.selectedControl = nyaSelect.controls[i].id;\n          $scope.modelNyaSelect = nyaSelect.controls[i];\n       }\n    }\n\n    if ($scope.nyaSelect.selectedControl === \"BasicSelect\") {\n      bindBasicSelectFromNYA();\n    }\n\n    if ($scope.nyaSelect.selectedControl === \"GroupedSelect\") {\n      bindGroupedSelectFromNYA();\n    } \n\n    if ($scope.nyaSelect.selectedControl === \"Radio\") {\n      bindRadioFromNYA();\n    }    \n\n  }\n\n\n\n  function resetTemporyConfig(){\n    $scope.nyaSelect.temporyConfig = {\n                                        formlyLabel: \"\", \n                                        formlyRequired: false, \n                                        formlyPlaceholder: \"\",\n                                        formlyDesciption: \"\",\n                                        formlyOptions: []\n                                      };   \n  }\n\n\n\n  $scope.selectThisControl = function(controlName){\n    $scope.nyaSelect.selectedControl = 'none';\n    resetTemporyConfig();\n\n    for (var i = $scope.nyaSelect.controls.length - 1; i >= 0; i--) {\n       if ($scope.nyaSelect.controls[i].id === controlName) {\n          $scope.nyaSelect.selectedControl = $scope.nyaSelect.controls[i].id;         \n       }\n    }\n\n    if ($scope.nyaSelect.selectedControl === 'Date') {\n      initDatePicker();\n    }\n  };\n\n\n\n  /////////////////////////\n  // modal buttons click\n  /////////////////////////\n  $scope.ok = function () {\n\n    if ($scope.nyaSelect.selectedControl === \"BasicSelect\") {\n      bindBasicSelectToNya();\n    }\n\n    if ($scope.nyaSelect.selectedControl === \"GroupedSelect\") {\n      bindGroupedSelectToNya();\n    }  \n\n    if ($scope.nyaSelect.selectedControl === \"Radio\") {\n      bindRadioToNya();\n    }  \n\n    //save config to control\n    controllerModalProxy.applyConfigToSelectedControl($scope.nyaSelect);\n    //return current model to parent controller :\n    $modalInstance.close($scope.nyaSelect);\n\n  };\n\n  $scope.cancel = function () {\n    $modalInstance.dismiss('cancel');\n  };\n\n\n}]);\n/**\n *  ------------------------------------------------------\n *  controller : edaEditPanelController\n *  ------------------------------------------------------\n *\n *  controller dedicated side panel (edit control panel)\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n\t.module('edaApp.controllers.edaEditPanelController', [])\n\t.controller('edaEditPanelController', ['$scope', \n                                          'toaster' ,\n                                          '$timeout',\n                                          'selectOptionManage',\n                                          'controllerModalProxy',\n\t\tfunction(\t$scope,  \n              toaster,\n              $timeout,\n              selectOptionManage,\n              controllerModalProxy\n\t\t\t\t\t\t){\n\n\n\n\t\t\t/**\n\t\t\t * ==============================================================\n\t\t\t * init model from service\n\t\t\t * ==============================================================\n\t\t\t * proxy model contains :\n\t\t\t * - all controls definitions and \n\t\t\t * - selected control\n\t\t\t * - properties to customize control (then bound to configuration model)\n\t\t\t */\n\t\t\tvar self = this;\n\t\t\n\t\t\tself.proxyModel = controllerModalProxy.proxyModel;\n\t\t\t\t\t\n\t\t  //selected control from  main controller applied to current selected control\n\t\t  self.proxyModel.selectedControl = self.proxyModel.temporyConfig.selectedControl;\n\t\t\n\t\t\n\t\t\n\t\t\t/**\n\t\t\t * basic Select tempory models\n\t\t\t */\t\t\t\n\t\t  self.basicSelectRowCollection \t= controllerModalProxy.basicSelectRowCollection;\n\t\t  self.newOptionBasicSelect \t\t\t= controllerModalProxy.newOptionBasicSelect;\n\t\t\t/**\n\t\t\t * grouped Select tempory models\n\t\t\t */\n\t\t  self.groupedSelectRowCollection = controllerModalProxy.groupedSelectRowCollection;\n\t\t  self.newOptionGroupedSelect \t\t= controllerModalProxy.newOptionGroupedSelect;\n\t\t  self.GroupedSelectGroups \t\t\t\t= controllerModalProxy.GroupedSelectGroups;\n\t\t  self.newGroupGroupedSelect \t\t\t= controllerModalProxy.newGroupGroupedSelect;\n\t\t  self.groupSelectGroupClick \t\t\t= controllerModalProxy.groupSelectGroupClick;  \n\t\t\t/**\n\t\t\t * radio control tempory models\n\t\t\t */\n\t\t  self.radioRowCollection \t\t\t\t= controllerModalProxy.radioRowCollection;\n\t\t  self.newOptionRadio \t\t\t\t\t\t= controllerModalProxy.newOptionRadio;\n\t\t  /**\n\t\t   * reset all tempory modals (fo special controls)\n\t\t   */\n\t\t  controllerModalProxy.resetAllTemporyModels();\n\n\n\t\t  //place proxyModel to selection if not none :\n\t\t   if (self.proxyModel.temporyConfig.selectedControl !== 'none') {\n\t\t    for (var i = self.proxyModel.controls.length - 1; i >= 0; i--) {\n\t\t       if (self.proxyModel.controls[i].id === self.proxyModel.temporyConfig.selectedControl) {\n\t\t          self.modelproxyModel = self.proxyModel.controls[i];\n\t\t       }\n\t\t    }\n\n\t\t    if (self.proxyModel.temporyConfig.selectedControl === 'BasicSelect') {\n\t\t      controllerModalProxy.bindBasicSelectFromProxyModel(self.basicSelectRowCollection);\n\t\t    }\n\t\t\n\t\t    if (self.proxyModel.temporyConfig.selectedControl === 'GroupedSelect') {\n\t\t      controllerModalProxy.bindGroupedSelectFromProxyModel(self.groupedSelectRowCollection, self.GroupedSelectGroups);\n\t\t    } \n\t\t\n\t\t    if (self.proxyModel.temporyConfig.selectedControl === 'Radio') {\n\t\t      controllerModalProxy.bindRadioFromProxyModel(self.radioRowCollection);\n\t\t    }    \n\t\t\n\t\t  }\n\t\t\n\t\tself.updateSpecialControl = function(){\n\t\t\t\n\t\t\t//refresh service data for sepcial control as selects and radio\n\t\t\tcontrollerModalProxy.basicSelectRowCollection \t\t= self.basicSelectRowCollection;\n\t\t\tcontrollerModalProxy.newOptionBasicSelect \t\t\t\t= self.newOptionBasicSelect;\n\n\t\t\tcontrollerModalProxy.groupedSelectRowCollection \t= self.groupedSelectRowCollection;\n\t\t\tcontrollerModalProxy.newOptionGroupedSelect \t\t\t= self.newOptionGroupedSelect;\n\t\t\tcontrollerModalProxy.GroupedSelectGroups \t\t\t\t\t= self.GroupedSelectGroups;\n\t\t\tcontrollerModalProxy.newGroupGroupedSelect \t\t\t\t= self.newGroupGroupedSelect;\n\t\t\tcontrollerModalProxy.groupSelectGroupClick \t\t\t\t= self.groupSelectGroupClick;\n\n\n\t\t\tcontrollerModalProxy.radioRowCollection \t\t\t\t\t= self.radioRowCollection;\n\t\t\tcontrollerModalProxy.newOptionRadio \t\t\t\t\t\t\t= self.newOptionRadio;\t\t\t\n\t\t\t\n\t\t\t//force apply update proxyModel\n\t\t\tcontrollerModalProxy.bindSpecialCtrlTemporyModelsToProxyModel(); \n\t\t\treturn true; \t\n\t\t};\n\t\t\n\t\t  function resetTemporyConfig(){\n\t\t    self.proxyModel.temporyConfig = {\n\t\t                                        formlyLabel: '', \n\t\t                                        formlyRequired: false, \n\t\t                                        formlyPlaceholder: '',\n\t\t                                        formlyDesciption: '',\n\t\t                                        formlyOptions: []\n\t\t                                      };   \n\t\t  }\n\t\t\n\t\t\tself.resetControl = function(){\n\t\t\t\tself.proxyModel.temporyConfig.formlyLabel \t\t\t= '';\n\t\t\t\tself.proxyModel.temporyConfig.formlyRequired \t\t= false;\n\t\t\t\tself.proxyModel.temporyConfig.formlyPlaceholder\t= '';\n\t\t\t\tself.proxyModel.temporyConfig.formlyDesciption \t= '';\n\t\t\t\tself.proxyModel.temporyConfig.formlyOptions \t\t= [];\n\t\t\t\tself.proxyModel.temporyConfig.datepickerPopup   = initDatePicker();\n\t\t\t\t\n\t\t\t};\n\t\t\n\t\t  self.selectThisControl = function(controlName){\n\t\t    self.proxyModel.selectedControl = 'none';\n\t\t    resetTemporyConfig();\n\t\t\n\t\t    for (var i = self.proxyModel.controls.length - 1; i >= 0; i--) {\n\t\t       if (self.proxyModel.controls[i].id === controlName) {\n\t\t          self.proxyModel.selectedControl = self.proxyModel.controls[i].id;         \n\t\t       }\n\t\t    }\n\t\t\n\t\t    if (self.proxyModel.selectedControl === 'Date') {\n\t\t      initDatePicker();\n\t\t    }\n\t\t  };\n\t\n\n\n\t\t/**\n\t\t * ==============================================================\n\t\t * specific controls management \n\t\t * (display, properties.... : ex : grouped Select)\n\t\t * ==============================================================\n\t\t */\n\n\t\t\n\t\t  self.addNewOptionRadio = function(){\n\t\t    var result = selectOptionManage.addNewOptionRadio(self.radioRowCollection, self.newOptionRadio.saisie);\n\t\t    if (result.resultFlag === false) {\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: result.details,\n\t\t                  body: '\\''+ self.newOptionRadio.saisie + '\\'' + ' cannot be added.',                \n\t\t                  showCloseButton: true\n\t\t            });\n\t\t    }\n\t\t    //reset input\n\t\t    self.newOptionRadio = {saisie: ''};\n\t\t  };\n\t\t\n\t\t  self.removeRadioRow = function(index) {\n\t\t      var result = selectOptionManage.removeOption(self.radioRowCollection, index);\n\t\t      if (result.resultFlag === false) {\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: result.details,\n\t\t                  body: 'Delete was cancelled.',                \n\t\t                  showCloseButton: true\n\t\t            });\n\t\t      }      \n\t\t    }; \n\t\t\n\t\t  self.upThisRadioRow = function(index){\n\t\t      var result = selectOptionManage.upthisOption(self.radioRowCollection, index);\n\t\t      if (result.resultFlag === false) {\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: result.details,\n\t\t                  body: 'Operation cancelled.',                \n\t\t                  showCloseButton: true\n\t\t            });\n\t\t      }       \n\t\t  };                                    \n\t\t\n\t\t  self.downThisRadioRow = function(index){\n\t\t      var result = selectOptionManage.downthisOption(self.radioRowCollection, index);\n\t\t      if (result.resultFlag === false) {\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: result.details,\n\t\t                  body: 'Operation cancelled.',                \n\t\t                  showCloseButton: true\n\t\t            });\n\t\t      }\n\t\t  };\n\t\t\t\n\t\t\n\t\t\n\t\t  self.addNewOptionBasicSelect = function(){\n\t\t    var result = selectOptionManage.addNewOptionBasicSelect(self.basicSelectRowCollection, self.newOptionBasicSelect.saisie);\n\t\t    if (result.resultFlag === false) {\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: result.details,\n\t\t                  body: '\\''+ self.newOptionBasicSelect.saisie + '\\'' + ' cannot be added.',                \n\t\t                  showCloseButton: true\n\t\t            });\n\t\t    }\n\t\t    //reset input\n\t\t    self.newOptionBasicSelect = {saisie: ''};\n\t\t  };\n\t\t\n\t\t  self.removeRow = function(index) {\n\t\t      var result = selectOptionManage.removeOption(self.basicSelectRowCollection, index);\n\t\t      if (result.resultFlag === false) {\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: result.details,\n\t\t                  body: 'Delete was cancelled.',                \n\t\t                  showCloseButton: true\n\t\t            });\n\t\t      }      \n\t\t    }; \n\t\t\n\t\t  self.upThisRow = function(index){\n\t\t      var result = selectOptionManage.upthisOption(self.basicSelectRowCollection, index);\n\t\t      if (result.resultFlag === false) {\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: result.details,\n\t\t                  body: 'Operation cancelled.',                \n\t\t                  showCloseButton: true\n\t\t            });\n\t\t      }       \n\t\t  };                                    \n\t\t\n\t\t  self.downThisRow = function(index){\n\t\t      var result = selectOptionManage.downthisOption(self.basicSelectRowCollection, index);\n\t\t      if (result.resultFlag === false) {\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: result.details,\n\t\t                  body: 'Operation cancelled.',                \n\t\t                  showCloseButton: true\n\t\t            });\n\t\t      }\n\t\t  };\n\t\t\n                             \n\n\n\n\t\t\n\t\t  self.showGroupListToChoose = function(){\n\t\t    self.groupSelectGroupClick.showList = !self.groupSelectGroupClick.showList;\n\t\t  };\n\t\t\n\t\t  self.addNewGroupToGroupedSelect = function(){\n\t\t    if (self.newGroupGroupedSelect.saisie !== '') {\n\t\t      for (var i = self.GroupedSelectGroups.list.length - 1; i >= 0; i--) {\n\t\t        if (self.GroupedSelectGroups.list[i] === self.newGroupGroupedSelect.saisie) {\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: 'Group already exists',\n\t\t                  body: 'No group added.',                \n\t\t                  showCloseButton: true\n\t\t            });          \n\t\t        }\n\t\t      }\n\t\t      self.GroupedSelectGroups.list.push(self.newGroupGroupedSelect.saisie);\n\t\t    }else{\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: 'Not a valid group to add',\n\t\t                  body: 'No group added.',                \n\t\t                  showCloseButton: true\n\t\t            });\n\t\t    }\n\t\t    self.newGroupGroupedSelect.saisie = '';\n\t\t  };\n\t\t\n\t\t\n\t\t  self.addNewOptionGroupedSelect = function(){\n\t\t    var result = selectOptionManage.addNewOptionGroupedSelect(self.groupedSelectRowCollection, self.newOptionGroupedSelect.saisie, '');\n\t\t    if (result.resultFlag === false) {\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: result.details,\n\t\t                  body: '\\''+ self.newOptionGroupedSelect.saisie + '\\'' + ' cannot be added.',                \n\t\t                  showCloseButton: true\n\t\t            });\n\t\t    }\n\t\t    //bind nya : dont bind here $apply is not done fast enough\n\t\t    //bindGroupedSelectToNya();\n\t\t    //reset input\n\t\t    self.newOptionGroupedSelect = {saisie: ''};\n\t\t  };\n\t\t\n\t\t  self.removeGroupedSelectRow = function(index) {\n\t\t      var result = selectOptionManage.removeOption(self.groupedSelectRowCollection, index);\n\t\t      if (result.resultFlag === false) {\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: result.details,\n\t\t                  body: 'Delete was cancelled.',                \n\t\t                  showCloseButton: true\n\t\t            });\n\t\t      }   \n\t\t    }; \n\t\t\n\t\t  self.upThisGroupedSelectRow = function(index){\n\t\t      var result = selectOptionManage.upthisOption(self.groupedSelectRowCollection, index);\n\t\t      if (result.resultFlag === false) {\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: result.details,\n\t\t                  body: 'Operation cancelled.',                \n\t\t                  showCloseButton: true\n\t\t            });\n\t\t      } \n\t\t  };                                    \n\t\t\n\t\t  self.downThisGroupedSelectRow = function(index){\n\t\t      var result = selectOptionManage.downthisOption(self.groupedSelectRowCollection, index);\n\t\t      if (result.resultFlag === false) {\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: result.details,\n\t\t                  body: 'Operation cancelled.',                \n\t\t                  showCloseButton: true\n\t\t            });\n\t\t      } \n\t\t\n\t\t  };\n\t\t\n\t\t\t/**\n\t\t\t * init datetimepicker model\n\t\t\t */\n\t\t  self.demodt ={};\n\t\t\n\t\t  self.today = function() {\n\t\t    self.demodt.dt = new Date();\n\t\t  };\n\t\t  self.today();\n\t\t\n\t\t  self.clear = function () {\n\t\t    self.demodt.dt = null;\n\t\t  };\n\t\t\n\t\t\n\t\t  self.open = function($event) {\n\t\t    $event.preventDefault();\n\t\t    $event.stopPropagation();\n\t\t\n\t\t    self.demodt.opened = true;\n\t\t  };\n\t\t\n\t\t  self.dateOptions = {\n\t\t           formatYear: 'yy',\n\t\t           startingDay: 1,\n\t\t           showWeeks: true,\n\t\t           initDate: null\n\t\t  };\n\t\t\n\t\t  self.demodt.formats = ['dd-MMMM-yyyy', 'yyyy/MM/dd', 'dd.MM.yyyy', 'shortDate'];\n\t\t  \n\t\t  function initDatePicker(){\n\t\t    self.proxyModel.temporyConfig.datepickerPopup = self.demodt.formats[0];  \n\t\t  }\n\t\t  \n\t\t\n\n\t\t\t \t\t\n\t}]);\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// module = \"controllers\"  for view \"edaMainController\"\n//  ------------------------------------------------------\n//      Syntax (convention) :\n//          \"edaApp\" = application\n//          \"edaApp.controllers.edaMainController\" = controller module\n//\n//  This module is a view controller -> it must be injected in controller container\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nangular\n\t.module('edaApp.controllers.edaMainController', [])\n\t.controller('edaMainController', [\n\t\tfunction () {\n\t\t\t\n\t\t}]);\n/**\n *  ------------------------------------------------------\n *  directive : edaDdContentCounterDirective\n *  ------------------------------------------------------\n *\n *  return real item count (hidden item being dragged that stay on the line)\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n    .module('edaApp.directives.edaDdContentCounterDirective', [])\n    .directive('ddContentCounter', ['dragDropItemCounterService', '$timeout',\n\n    function(\tdragDropItemCounterService, $timeout ){\n\n  \n    \treturn {\n    \t\t scope: {\n    \t\t \tvalueWhenPlaceholder: \t'@ddValueWhenPlaceholder',\n    \t\t \tvalueWhendragging: \t\t\t'@ddValueWhenDragging',\n    \t\t \tfullModel : \t\t\t\t\t\t'=ddFullModel',\n\t\t\t\t\tcurrentIndex :       \t\t'@ddContentCounterCurrentIndex',\n          parentIndex :         \t'@ddContentCounterParentIndex',\n          forceRefresh: \t\t\t\t\t'=ddContentCounterForceCssRefresh' \n    \t\t }, \n    \t\t\n    \t\trestrict: 'A', \n    \t\t\n    \t\tlink: function($scope, element) {\n    \t\t\t\n    \t\t\tvar timer;\n\n       \t\t/**\n       \t\t * watch children length change : to update css item class\n       \t\t */\n    \t\t\t$scope.$watch(\n\t\t\t\t    function () { return element[0].children.length; },\n\t\t\t\t    function (newValue, oldValue) {\n\t\t\t\t      if (newValue !== oldValue) {\n\n\t\t\t\t        var newRealCount= 0;\n\t\t\t\t        var listClassForThisRow = [];\n\n\t\t\t\t        for (var i = element[0].children.length - 1; i >= 0; i--) {\n\t\t\t\t        \t\n\t\t\t\t        \tif(dragDropItemCounterService.isHtmlElementToCount(element[0].children[i].classList)){\n\t\t\t\t        \t\tnewRealCount++;\n\t\t\t\t        \t\tlistClassForThisRow.push( {item: i, isReal : true} );\n\t\t\t\t        \t}else{\n\t\t\t\t        \t\tlistClassForThisRow.push( {item: i, isReal : false} );\n\t\t\t\t        \t} \n\t\t\t\t        }\n\t\t\t\t        $scope.contentRealCount = newRealCount;\n\t\t\t\t        /**\n\t\t\t\t         * a timer otherwise won't refresh everytime\n\t\t\t\t         */\n\t\t\t\t        timer = $timeout(function(){\n\t\t\t\t\t        dragDropItemCounterService.updateLineItemCss(\t$scope.fullModel, \n\t\t\t\t\t        \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlistClassForThisRow, \n\t\t\t\t\t        \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$scope.parentIndex, \n\t\t\t\t\t        \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$scope.currentIndex, \n\t\t\t\t\t        \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewRealCount\n\t\t\t\t\t        \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\t\t\t\t        \t\n\t\t\t\t        }, 20);\n\t\t\t\t        \n\t\t\t\t      }\n\t\t\t\t    }\n\t\t\t\t  );\n\n          /**\n           * timer destruction to prevent from bad UI experience\n           */\n          $scope.$on('$destroy', function(){\n                  console.warn('ddContentCounter timer destruction!');\n                  $timeout.cancel(timer);\n              }\n          ); \n\t\t  \n    \t\t}\n    \t};\n\n    }]);\n/**\n *  ------------------------------------------------------\n *  directive : ddDecorContainer\n *  ------------------------------------------------------\n *\n * - apply configuration to containers (or lines in layoutor group controls in control selection)\n *   - apply title (ONLY if group controls (left drop zone - index 0): text inputs group, lists...)\n *   - expand Bool (ONLY if group controls (left drop zone - index 0): text inputs group, lists...)\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n    .module('edaApp.directives.edaDdDecorContainerDirective', [])\n    .directive('ddDecorContainer', [\n\n    function(){\n\n        var htmlTemplate   =    [\n                                    '<div ng-click=\"collapseFct()\">',\n                                    '   <h6 ng-show=\"config.isEnabled\" class=\"isCollapsableZone\"><button class=\"btn btn-primary btn-xs\"><span class=\"{{currentIconClass()}}\"></span></button>&nbsp;{{currentTitle}}</h6>', \n                                    '</div>',\n                                    '<div collapse=\"isCollapsed\">', \n                                    '   <div id=\"ddDecorContainerWillTranscludeHere\"></div>', \n                                    '</div>'\n                                ].join(' ');\n\n        return {\n            scope:  {\n                         'styleParam'           : '=ddContainerProperties',\n                         'isStillCollapsed'     : '=ddContainerIsCollpased',\n                         'verboseMode'          : '@ddContainerVerboseMode',\n                         'currentIndex'         : '@ddContainerCurrentIndex',\n                         'collpaseAll'          : '&ddCollapseAll'\n                    },\n            restrict:   'A', \n            template:   htmlTemplate,\n            transclude: true,\n            controller: function($scope) {\n                            $scope.config = {   \n                                                isEnabled : false\n                                            };\n\n                            //$scope.isCollapsed = $scope.styleParam.WhenIndex;\n                            $scope.collapseFct = function(){\n                               \n                                $scope.collpaseAll({exceptThisOne: $scope.styleParam.WhenIndex}); \n\n                                $scope.isCollapsed = !$scope.isCollapsed;\n                                $scope.isStillCollapsed = $scope.isCollapsed;\n\n                            };\n \n                            /**\n                             *  TODO (low priority) : make icon css configurable (provider)\n                             */\n                            $scope.icons = {\n                                closedClass :   'glyphicon glyphicon-eye-open',\n                                opened :        'glyphicon glyphicon-eye-close'\n                            };\n\n                            $scope.currentIconClass =  function(){\n                                    if ($scope.isCollapsed) {\n                                        return $scope.icons.closedClass;\n                                    }else{\n                                        return $scope.icons.opened;\n                                    }\n                            };\n                        },\n\n            link: function($scope, element, attrs, ctrl, transclude) {    \n                \n                var verboseModeActive   = $scope.verboseMode;\n                var currentIndex        = $scope.currentIndex;\n                $scope.isCollapsed      = false;\n\n                /**\n                 * verbose mode for developments only\n                 */\n                if (verboseModeActive !== '') {\n                    var verbose = angular.lowercase(verboseModeActive);\n\n                    if (verbose === 'true' || verbose === '1') {\n                       console.dir(\n                            {\n                                whoAmI              :   'I am verbose from ddDecorContainer link',\n                                verbodeMode         :   verbose,\n                                ParentParentIndex   :   $scope.$parent.$parent.$index,\n                                ParentIndex         :   $scope.$parent.$index,\n                                currentIndex        :   currentIndex,\n                                styleParam          :   $scope.styleParam,\n                                columnindex         :   $scope.$parent.$parent.$parent.$parent.$index\n                            }\n                        );\n                    }                    \n                }\n               /**\n                 * forceCollapse when : \n                 *  dragDropConfigModel.containerConfig.decoration.isCollapsed changed (here bound to $scope.isStillCollapsed)\n                 */\n                $scope.$watch(function(){return $scope.isStillCollapsed;}, function(newVal, oldVal){\n\n                    if (newVal !== oldVal) {\n\n                        if ($scope.$parent.$parent.$index === 0) {\n                            $scope.isCollapsed = newVal;    \n                        }\n\n                    }\n                        \n                });                \n                /**\n                 * no header (no title, no collapse....) \n                 */\n                $scope.config.isEnabled = false;\n\n                 if (typeof currentIndex !== 'undefined') {\n                    if (currentIndex !== '') {\n                        /**\n                         * specific 1st column \n                         */\n                        if (currentIndex === '0') {\n                            /**\n                             * apply title  \n                             */\n                            if (typeof $scope.styleParam.title !== 'undefined') {\n\n                                $scope.currentTitle     = $scope.styleParam.title;\n                                $scope.config.isEnabled = true;\n                                $scope.isCollapsed      = true;\n                            } \n\n                        }\n                    }                    \n                }\n\n\n                /**\n                 * prevent transclusion creating child scope \n                 * want to know more about what I'm talking about : check this nice tip on the subject :\n                 * http://angular-tips.com/blog/2014/03/transclusion-and-scopes/        \n                 */\n                transclude($scope.$parent, function(contentClone){\n                    /**\n                     * transclusion will append content to '<div id=\"ddDecorContainerWillTranscludeHere\"></div>' \n                     */\n                    var childDiv = angular.element(element.children()[1]); \n                    childDiv.append(contentClone);\n                });   \n            }\n        };\n\n    }]);\n\n\n/**\n *  ------------------------------------------------------\n *  directive : ddDecorDropZone\n *  ------------------------------------------------------\n *\n * apply configuration to drop zone (or columns = top level containers)\n *   - column role (control selection or drop zone as form layout)\n *   - apply title\n *   - apply font-awesome icon\n *   - OPTIONAL (DEV USE) : add 'dd-verbose-mode' attribute set to true or 1 to have versbose in console\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n    .module('edaApp.directives.edaDdDecorDropZoneDirective', [])\n    .directive('ddDecorDropZone', [\n\n\n    function(){\n\n        var htmlTemplate   = ['<div class=\"{{styleParam.ApplycssClass}}\">', \n                            '  <div id=\"visualPanel\">',\n                            '    <div  class=\"panel panel-default\">', \n                            '      <div class=\"panel-heading\">', \n                            '        <h3 class=\"panel-title\">', \n                            '          <i class=\"{{currentFontAwesome}}\"></i>&nbsp;', \n                            '          {{currentTitle}}', \n                            '           <div ng-show=\"headerConfig.HeaderButtonVisible\">',\n                            '             <button class=\"btn btn-primary btn-xs buttonHeaderAddNewLine center-block\" ng-click=\"addNewLineFct();\">',\n                            '               <span class=\"glyphicon glyphicon-plus\"></span>&nbsp;add new line',\n                            '             </button>',\n                            '           </div>',\n                            '        </h3>', \n                            '      </div>', \n                            '      <div class=\"panel-body\">', \n                            '         <div class=\"row\">', \n                            '            <div class=\"col-md-12\" ng-transclude>', \n                            '            </div>', \n                            '            </div>', \n                            '      </div>', \n                            '    </div>', \n                            '   </div>',\n                            '</div>'].join(' ');\n\n        \n        return {\n            scope:  {\n                         'styleParam'       : '=ddDropZoneProperties',\n                         'verboseMode'      : '@ddDropZoneVerboseMode',\n                         'currentIndex'     : '@ddDropZoneCurrentIndex',\n                         'addNewLineFct'    : '&ddDropZoneAddNewLine'\n                    },\n            restrict:   'A', \n            template:   htmlTemplate,\n            transclude: true,\n\n            link: function($scope) {    \n                \n                var verboseModeActive   = $scope.verboseMode;\n                var currentIndex        = $scope.currentIndex;\n                \n                $scope.headerConfig = {\n                    HeaderButtonVisible : false,\n                    affixAttr           : 'bs-affix',\n                    affixEnabled        : false\n                };\n                /**\n                 * verbose mode : just for dev\n                 */\n                if (verboseModeActive !== '') {\n                    var verbose = angular.lowercase(verboseModeActive);\n\n                    if (verbose === 'true' || verbose === '1') {\n                       console.dir(\n                            {\n                                whoAmI              : 'I am verbose from ddDecorDropZone link',\n                                verbodeMode         : verbose,\n                                ParentParentIndex   : $scope.$parent.$parent.$index,\n                                ParentIndex         : $scope.$parent.$index,\n                                currentIndex        : currentIndex,\n                                styleParam          : $scope.styleParam\n                            }\n                        );\n                    }                    \n                }\n\n\n                if (typeof currentIndex !== 'undefined') {\n                    if (currentIndex !== '') {\n                            /**\n                             * apply title\n                             */\n                            if (typeof $scope.styleParam.title !== 'undefined') {\n                                $scope.currentTitle = $scope.styleParam.title;\n                            }\n\n                            /**\n                             * apply font-awesome\n                             */\n                            if (typeof $scope.styleParam.fontAwesomeIcon !== 'undefined') {\n                                $scope.currentFontAwesome = $scope.styleParam.fontAwesomeIcon;\n                            } \n\n                            /**\n                             * show add new line button\n                             */\n                            if (currentIndex === '1') {\n                                $scope.headerConfig.HeaderButtonVisible = true;\n                            }\n\n                    }                    \n                }\n                          \n            }\n        };\n    }]);\n/**\n *  ------------------------------------------------------\n *  directive : edaDdDecorItemDirective\n *  ------------------------------------------------------\n *\n *  decorate an item / control\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n    .module('edaApp.directives.edaDdDecorItemDirective', [])\n    .directive('ddDecorItem', [ 'dragDropConfig',\n\n    function( dragDropConfig ){\n\n        var htmlTemplate   = [\n                                '<div>',\n                                ' <div id=\"itemDirectiveTranscludeHere\"></div>',\n                                '</div>',\n                                ].join(' ');                                \n                             \n        return {\n            scope:  {\n\n                         'verboseMode' :        '@ddItemVerboseMode',\n                         'currentIndex' :       '@ddItemCurrentIndex',\n                         'parentIndex':         '@ddItemParentIndex',\n                         'parentParentIndex':   '@ddItemParentParentIndex', \n                         'lineItemsCount' :     '@ddItemsCount',\n                         'cssClass':            '@ddItemCssClass'\n                    },\n            restrict:   'A',\n            template:   htmlTemplate,\n            transclude: true,\n            link: function($scope, element, attrs, ctrl, transclude) {    \n                \n                var verboseModeActive = $scope.verboseMode;\n                var currentIndex      = $scope.currentIndex;\n                var parentIndex       = $scope.parentIndex;\n                var listClass         = dragDropConfig.getDistinctItemCssClass();\n\n\n                /**\n                 * init css class\n                 */\n                angular.forEach(listClass, function(css){\n                    element.removeClass(css);\n                });\n                element.addClass($scope.cssClass);                \n\n\n                /**\n                 * update css class\n                 */\n                $scope.$watch('cssClass', function(newValue, oldValue) {\n                    if(newValue !== oldValue){\n                        /**\n                         * update css class\n                         */\n                        angular.forEach(listClass, function(css){\n                            element.removeClass(css);\n                        });\n                        element.addClass(newValue); \n                    }\n                    \n                });\n\n                /**\n                 * verbose mode : just for dev \n                 */\n                if (verboseModeActive !== '') {\n                    var verbose = angular.lowercase(verboseModeActive);\n\n                    if (verbose === 'true' || verbose === '1') {\n                       console.dir(\n                            {\n                                whoAmI              : 'I am verbose from ddDecorItem directive link',\n                                verbodeMode         : verbose,\n                                ParentParentIndex   : $scope.$parent.$parent.$index,\n                                ParentIndex         : parentIndex,\n                                parentParentIndex   : $scope.parentParentIndex,\n                                currentIndex        : currentIndex,\n                                lineItemsCount      : $scope.lineItemsCount\n                            }\n                        );\n                    }                    \n                }\n\n                /**\n                 * control column : apply css class to item\n                 */\n                if ($scope.parentParentIndex === '0') {\n                   element.addClass(listClass[0]);  \n\n                }\n\n                /**\n                 * prevent transclusion creating child scope  \n                 *\n                 *\n                 * NOTE :if you want to know more about what I'm saying : check this nice tip on the subject : \n                 * http://angular-tips.com/blog/2014/03/transclusion-and-scopes/        \n                 */\n                transclude($scope.$parent, function(contentClone){\n                    /**\n                     * transclusion will append content to '<div id=\"itemDirectiveTranscludeHere\"></div>' \n                     */\n                    var childDiv = angular.element(element.children()[0]); \n                    childDiv.append(contentClone);\n                });   \n            }\n        };\n\n\n    }]);\n\n\n/**\n *  ------------------------------------------------------\n *  directive : edaDdDecorLineDirective\n *  ------------------------------------------------------\n *\n * decorate a form line :\n *  - double click will make it shake for 2 second (ready to delete state)\n *  - double click again will delete this line\n *  - no click within 2seconds : line will stop shaking \n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n    .module('edaApp.directives.edaDdDecorLineDirective', [])\n    .directive('ddDecorLine', ['$timeout', \n\n    function($timeout){\n\n        var htmlTemplate   = [\n                                '<div ng-class=\"{confirmLineDelete : deleteLine.readyToDelete}\" ng-dblclick=\"removeMe($event);\" ng-click=\"cancelDelete($event);\"> ',\n                                ' <button ng-show=\"deleteLine.readyToDelete === true\" type=\"button\"  class=\"btn btn-danger pull-right buttonCloseLine\" >',\n                                '   <span class=\"glyphicon glyphicon-trash\" aria-hidden=\"true\"></span></button>',\n                                '</div>',\n                                '  <div id=\"lineDirectiveTranscludeHere\"></<div>',\n                                ].join(' ');\n        \n        return {\n            scope:  {\n\n                         'verboseMode'  :    '@ddLineVerboseMode',\n                         'currentIndex' :    '@ddLineCurrentIndex',\n                         'parentIndex'  :    '@ddLineParentIndex',\n                         'removeLine'   :    '&ddRemoveLine'\n                    },\n            restrict:   'A',\n            template:   htmlTemplate,\n            transclude: true,\n\n            link: function($scope, element, attrs, ctrl, transclude) {    \n                \n                var verboseModeActive   = $scope.verboseMode;\n                var currentIndex        = $scope.currentIndex;\n                var parentIndex         = $scope.parentIndex;\n\n                $scope.deleteLine = {};\n                $scope.deleteLine.readyToDelete = false;\n                $scope.deleteLine.dblClickCount = 0;\n\n        \n                $scope.isCollapsed = false;\n\n\n                /**\n                 * verbose mode : just for dev \n                 */\n                if (verboseModeActive !== '') {\n                    var verbose = angular.lowercase(verboseModeActive);\n\n                    if (verbose === 'true' || verbose === '1') {\n                       console.dir(\n                            {\n                                whoAmI              : 'I am verbose from ddDecorLine directive link',\n                                verbodeMode         : verbose,\n                                ParentParentIndex   : $scope.$parent.$parent.$index,\n                                ParentIndex         : parentIndex,\n                                currentIndex        : currentIndex,\n                            }\n                        );\n                    }                    \n                }\n\n                /**\n                 * removeMe is function related to twice double click sequence to delete a line\n                 *\n                 *  - addClass / remove/class ; will make line in a shake movement\n                 *  - call \"removeLine function to delete the line (if it was rwice double clicked)\n                 */\n               $scope.removeMe= function(event){\n                    event.preventDefault();\n                    event.stopPropagation();\n\n                    if ($scope.parentIndex === '1') {\n\n                        /**\n                         * 2nd dbl click : if is shaking so it is confirmation to delete\n                         */\n                        if ($scope.deleteLine.dblClickCount === 1){\n\n                            $scope.deleteLine.dblClickCount = 0;\n                            $scope.deleteLine.readyToDelete = false;\n\n                            /**\n                             * NOTE : trick in calling parent controller function with input param when directive with isolate scope\n                             * see : https://thinkster.io/egghead/isolate-scope-am\n                             *\n                             * Here should be:\n                             * \n                             *-> in html :                     dd-remove-line=\"removeThisLine(indexToDelete)\n                             *-> in controller :               $scope.removeThisLine = function(lineIndex){\n                             *-> so in directive call it  :    $scope.removeLine({indexToDelete: currentIndex});\n                             *\n                             *\n                             *\n                             *\n                             * BUT in this case (repeats, ul> li.... complicated) \n                             *  => works better (if shaking a lot of line in a row it won't mess up)\n                             *\n                             *-> in html :                     dd-remove-line=\"removeThisLine($index)\n                             *-> in controller :               $scope.removeThisLine = function(lineIndex){\n                             *-> so in directive call it  :    $scope.removeLine();\n                             */                            \n                            //$scope.removeLine({indexToDelete: currentIndex});\n                            $scope.removeLine();\n                            //console.warn('force timer destruction after delete!');\n                            $timeout.cancel(timer);\n                        }\n\n                        //1st dbl click : make it shake so ready to delete\n                        if ($scope.deleteLine.dblClickCount === 0) {\n                            $scope.deleteLine.dblClickCount = $scope.deleteLine.dblClickCount + 1;\n                            $scope.deleteLine.readyToDelete = true;\n                        }\n                        \n                    }\n                };\n\n\n                /**\n                 * signle event will ever occur\n                 *\n                 * to prevent it to interfere with double click sequence \n                 * -> set a time out (shaking line to delete will automaticallly end shaking after timeout : 2 seconds)\n                 */\n                \n                var timer;\n\n                $scope.cancelDelete = function(event){\n                    //event.preventDefault();\n                    //event.stopPropagation();\n                    \n                        timer = $timeout(function(){\n                    \n                        $scope.deleteLine.dblClickCount = 0;\n                        $scope.deleteLine.readyToDelete = false;  \n                          \n                    }, 500);\n\n\n                    /**\n                     * debug\n                     */\n                    // timer.then(\n                    //     function() {\n                    //         console.log( 'Timer resolved!', Date.now() );\n                    //     },\n                    //     function() {\n                    //         console.log( 'Timer rejected!', Date.now() );\n                    //     }\n                    // );\n\n                };\n\n\n                /**\n                 * timer destruction to prevent from bad UI experience\n                 */\n                $scope.$on('$destroy', function(){\n                        //console.warn('timer destruction!');\n                        $timeout.cancel(timer);\n                    }\n                );                \n\n\n                /**\n                 * prevent transclusion creating child scope  \n                 *\n                 *\n                 * NOTE :if you want to know more about what I'm saying : check this nice tip on the subject : \n                 * http://angular-tips.com/blog/2014/03/transclusion-and-scopes/        \n                 */\n                transclude($scope.$parent, function(contentClone){\n                    //transclusion will append content to '<div id=\"lineDirectiveTranscludeHere\"></div>'\n                    var childDiv = angular.element(element.children()[0]); \n                    childDiv.append(contentClone);\n                });   \n            }\n        };\n\n\n    }]);\n\n\n/**\n *  ------------------------------------------------------\n *  directive : ddNoEditableControl\n *  ------------------------------------------------------\n *\n * prevent a control like an input to be editable \n *  \n *  (otherwise should lead to bas use experience with drag and drop) \n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n\t.module('edaApp.directives.edaDdNoEditableControlDirective', [])\n\t.directive('ddNoEditableControl', [\n\n\tfunction(){\n\n\n\t\treturn {\n\t\t    \n\t\t    restrict: 'A',\n\n\t\t    link: function($scope, element) {    \n\t\t        \n\t\t\t\t\telement.on('click', function(event){\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\n\t\t    }\n\t\t\t};\n\n}]);\n\n\n/**\n *  ------------------------------------------------------\n *  directives container\n *  ------------------------------------------------------\n *\n *      Syntax (convention) :\n *          \"edaApp\" = application\n *          \"edaApp.directives\" = container directives module\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n\t.module('edaApp.directives', [\t'edaApp.directives.edaStRationDirective',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.directives.edaDdDecorDropZoneDirective',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.directives.edaDdDecorContainerDirective',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.directives.edaDdDecorLineDirective',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.directives.edaDdDecorItemDirective',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.directives.edaDdNoEditableControlDirective',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.directives.edaDdContentCounterDirective',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.directives.edaRightClickDirective',\n\t]);\n\n\n/**\n *  ------------------------------------------------------\n *  directive : edaRightClickDirective\n *  ------------------------------------------------------\n *\n *  manage right click\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n    .module('edaApp.directives.edaRightClickDirective', [])\n    .directive('edaRightClick', [\n        '$parse', \n    \tfunction($parse){\n    \t\n    \treturn {\n\n    \t\trestrict: 'A',\n    \t\t \n    \t\tlink: function(scope, element, attrs) {\n\t    \t\tvar fn                  = $parse(attrs.edaRightClick);\n                var columnIndex         = $parse(attrs.edaRightClickColIndex);\n                var fctSetRightclicked  = $parse(attrs.edaSetRightClicked);\n                \n                /**\n                 * on right click event manage\n                 * - open edit panel through attrs.edaRightClick function\n                 * - set rightCliked attribute (to true) to control (in dragDropModel)\n                 */\n    \t        element.on('contextmenu', function(event) {\n    \t            scope.$apply(function() {\n    \t                event.preventDefault();\n\n                    \n                        //right click limited to template column (index = 1)                           \n                        if (columnIndex(scope) === 1) {\n                            //set rightClicked to true\n                            fctSetRightclicked(scope, {});\n                        }\n\n                        //right click limited to template column (index = 1)   \n    \t                if (columnIndex(scope) === 1) fn(scope, {$event:event});\n    \t            });\n    \t        });\t\n\n\n\n    \t\t}\n    \t};\n    }]);\n/**\n *  ------------------------------------------------------\n *  directive : stRatio\n *  ------------------------------------------------------\n *\n * adapt element's width % \n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n\t.module('edaApp.directives.edaStRationDirective', [])\n\t.directive('stRatio',[\n\n  function(){\n\n        return {\n        \trestrict: 'A',\n\n          link:function(scope, element, attr){\n            var ratio=+(attr.stRatio);\n            \n            element.css('width',ratio+'%');\n            \n          }\n        };\n}]);\n/**\n *  ------------------------------------------------------\n *  service : dragDropItemDecorationService\n *  ------------------------------------------------------\n *\n *  service that helps manipulating drag drop item class\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n\t.module('edaApp.services.dragDropItemCountersService', [])\n\t.factory('dragDropItemCounterService', ['dragDropConfig', \n\t\n\tfunction(dragDropConfig){\n\n\t\tvar _modelItemRealCounter = [];\n\t\tvar _itemsNotToCount = angular.copy(dragDropConfig.getItemsNotToCount());\n\n\t\tvar Service = {};\n\t\t\n\t\tService.getItemsNotToCount = function(){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn _itemsNotToCount;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}; \n\n\t\tService.getModelItemsRealCounter = function(){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \treturn _modelItemRealCounter;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\n\t\tService.isHtmlElementToCount = function(htmlvalue){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar isToCount = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (htmlvalue.length > 0) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tangular.forEach(_itemsNotToCount, function(value){\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (var classes = htmlvalue.length - 1; classes >= 0; classes--) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (htmlvalue[classes] === value){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisToCount = isToCount & false;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn isToCount;\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tService.updateLineItemCss = function(fullModel, listCssToApply, columIndex, lineIndex, realCount){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  if (typeof fullModel \t\t\t!== \t\t'undefined' &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t  typeof listCssToApply !== \t\t'undefined' &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t  typeof columIndex \t\t!== \t\t'undefined' &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t  typeof lineIndex \t\t\t!== \t\t'undefined' &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t  typeof realCount \t\t\t!== \t\t'undefined') {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (var i = fullModel[columIndex][lineIndex].length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (var j = 0; j < listCssToApply.length; j++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(listCssToApply[j].item === i &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t listCssToApply[j].isReal === true){\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullModel[columIndex][lineIndex][i].cssClass = dragDropConfig.getItemCssDependingNumberItemsInRow(realCount);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} \t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\n\t\treturn Service;\n\n}]);\n/**\n *  ------------------------------------------------------\n *  service : ddItemRightClickedManager\n *  ------------------------------------------------------\n *\n *  service that helps managing right clicked controls \n *  (right clicking control open side edit panel)\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n\t.module('edaApp.services.ddItemRightClickedManager', [])\n\t.factory('ddItemRightClickedManager', [\n\t\t \n\t\tfunction(){\n\n\t\t\tvar Service = {};\n\n\t\t\t/**\n\t\t\t * setUnRightClicked \n\t\t\t * set unSelected (see edaRightClick directive)\n\t\t\t *\n\t\t\t * used in edaEditcontroller when droping control\n\t\t\t */\n\t\t\tService.setUnRightClicked = function(dragDropModelItem){\n\t\t\t\tdragDropModelItem.rightCliked = false;\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * resetAllDragDropItemSelectedState\n\t\t\t *\n\t\t\t * simply reset (=set to false) all item.rightCliked \n\t\t\t * in edit column (dragable column)\n\t\t\t *\n\t\t\t * used in edaEditPanel when closeEditPanel() called\n\t\t\t */\n\t\t\tService.resetAllDragDropItemSelectedState = function(dragDropModel){\n\t\t\t\t/**\n\t\t\t\t * iterates through lines\n\t\t\t\t * NOTE : \n\t\t\t\t * - dragDropModel[1] since it is dragable column\n\t\t\t\t * - dragDropModel[0] is just the \"pick up controls\" column\n\t\t\t\t */\n\t\t\t\tangular.forEach(dragDropModel[1] ,function(line){\n\t\t\t\t\tangular.forEach(line, function(item){\n\t\t\t\t\t\titem.rightCliked = false;\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t};\n\n\t\t\treturn Service;\n\t\t}\n\t]);\n/**\n *  ------------------------------------------------------\n *  service : dragDropItemDecorationService\n *  ------------------------------------------------------\n *\n *  service that helps manipulating drag drop item class\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n\t.module('edaApp.services.dragDropItemDecorationService', [])\n\t.factory('dragDropItemDecorationService', \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t['dragDropConfig',  \n\t\n\tfunction(dragDropConfig){\n\n\t\tvar _listItemClass = [].concat(dragDropConfig.getListItemCssClass());\n\n\t\tvar Service = {};\n\n\t\tService.getListClass = function(){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn _listItemClass;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\n\t  Service.getCssClassWhenNumberItemsInRowIs = function(thisNumber){\n\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn dragDropConfig.getItemCssDependingNumberItemsInRow(thisNumber);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}; \n\n\t\tService.applyCssClassWholeLine = function(model, indexColumn, indexLine, numberItems, restrictToThisIndexColumn){\n\t\t  if (typeof numberItems !== 'undefined' &&\n\t\t  \t  typeof indexLine !== 'undefined' &&\n\t\t  \t  typeof indexColumn !== 'undefined' &&\n\t\t  \t  typeof model !== 'undefined' &&\n\t\t  \t  typeof restrictToThisIndexColumn !== 'undefined') {\n\n\t\t    if (indexColumn === restrictToThisIndexColumn) {\n\n\t        for (var i = model[indexColumn][indexLine].length - 1; i >= 0; i--) {\n\t\t          model[indexColumn][indexLine][i].cssClass = dragDropConfig.getItemCssDependingNumberItemsInRow(numberItems);\n\t\t      }\n\n\t\t    } \n\t\t    return true;\n\t\t  }else{\n\t\t    return false;\n\t\t  }\n\t\t};\n\n\t\tService.updateCssClassWholeColumn = function(model, indexColumn){\n\n\t\t  if (typeof indexColumn !== 'undefined' &&\n\t\t  \t  typeof model !== 'undefined') {\n\n\t\t   \t/**\n\t\t   \t * iterates through rows\n\t\t   \t */\n\t\t   \tfor (var cpt = model[indexColumn].length - 1; cpt >= 0; cpt--) {\n\t\t\t   \t/**\n\t\t\t   \t * iterates through items\n\t\t\t   \t */\n\t\t      for (var i = model[indexColumn][cpt].length - 1; i >= 0; i--) {\n\t\t          model[indexColumn][cpt][i].cssClass = dragDropConfig.getItemCssDependingNumberItemsInRow(model[indexColumn][cpt].length);\n\t\t      }\n\t\t   \t}\t\n\n\t\t    return true;\n\t\t\t}else{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\n\t\treturn Service;\n\n}]);\n/**\n *  ------------------------------------------------------\n *  service : dragDropModelConfigModelProxyService\n *  ------------------------------------------------------\n *\n *  service that helps to bind drag drop model to configuration model\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n\nangular\n\t.module('edaApp.services.dragDropModelConfigModelProxyService', [])\n\t.factory('ddModelConfModelProxyService', [\t'EasyFormGenFormlyBindingModels',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'controllerModalProxy',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'$parse',\n\t\tfunction( EasyFormGenFormlyBindingModels, controllerModalProxy, $parse){\n\n\n\t\t\t/**\n\t\t\t * return a control model that is more formly detailed\n\t\t\t * (more formly detailed : see controls property in EasyFormGenFormlyBindingModels._easyFormListControls)\n\t\t\t */\n\t\t\tfunction getFormlyDetailedControlModelFromDragDropObject(dragDrapCtrlModel){\n\t\t\t\tvar controlModel = {};\n\t\t\t\tvar listControl = EasyFormGenFormlyBindingModels.getEasyFormListControls();\n\t\t\t\tvar controlsListGetter = $parse('controls');\n\n\t\t\t\tangular.forEach(controlsListGetter(listControl), function(ctrlListValue){\n\t\t\t\t\tif (ctrlListValue.id === dragDrapCtrlModel.control)  controlModel = ctrlListValue;\n\t\t\t\t});\n\n\t\t\t\treturn controlModel;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * valid a control key is unique\n\t\t\t *\n\t\t\t * yes... function name already told us that, \n\t\t\t * -> it's just confirmation and to see if\n\t\t\t *    you keep focus while reading it ^^\n\t\t\t */\n\t\t\tfunction validKeyUniqueness(thisKey, configurationObj){\n\t\t\t  var isUnique = true;\n\t\t\t  for (var i = configurationObj.lines.length - 1; i >= 0; i--) {\n\t\t\t    for (var j = configurationObj.lines[i].columns.length - 1; j >= 0; j--) {\n\t\t\t    \tif (typeof configurationObj.lines[i].columns[j].control !== 'undefined') {\n\t\t\t\t      if (configurationObj.lines[i].columns[j].control.key === thisKey) {\n\t\t\t\t        isUnique = false;\n\t\t\t\t      }\t\t\t    \t\t\n\t\t\t    \t}\n\t\t\t    } \n\t\t\t  }\n\t\t\t  return isUnique;  \n\t\t\t} \n\n\n\t\t\tfunction createUniqueKey(baseKeyValue, configurationObj){\n\t\t\t\t/**\n\t       * unique key (set only first time) in this model is formly control type + Date.now(); \n\t       */\n\n\t      var newKey = baseKeyValue + '-' + Date.now();\n\t      if (validKeyUniqueness(newKey, configurationObj) === true){\n\t        return newKey;\n\t      }else{\n\t        newKey = baseKeyValue + '-' + Date.now();\n\t        if (validKeyUniqueness(newKey, configurationObj) === true){\n\t          return newKey;\n\t        }else{\n\t          newKey = baseKeyValue + '-' + Date.now();\n\t          return newKey;\n\t        }\n\t      } \n\n\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * apply this line\n\t\t\t */\n\t\t\tfunction applyThisLine(linevalue, lineIndex, configModel){\n\t\t\t\tangular.forEach(configModel.lines, function(aLineValue, aLineKey){\n\t\t\t\t\tif (aLineKey === lineIndex){ \n\t\t\t\t\t\taLineValue.line = linevalue;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * bind formly detailed model to configuration control model\n\t\t\t */\n\t\t\tfunction bindConfigCtrlModelFromFormlyDetailedCtrlModel(formlyDetailCtrlModel, configurationCtrlModel, configModel){\n\t\t\t\t/**\n\t\t\t\t *\n\t\t\t\t * \n\t\t\t\t * TODO :properties should be served by provider \n\t\t\t\t *\n\t\t\t\t * more configurable without pain\n\t\t\t\t *\n\t\t\t\t */\n\t\t\t\t//set selected control :\n\t\t\t\t$parse('control.selectedControl')\n\t\t\t\t\t.assign(configurationCtrlModel, $parse('selectedControl')(formlyDetailCtrlModel));\n\n\t\t\t\t//set type :\t\n\t\t\t\t$parse('control.type')\n\t\t\t\t\t.assign(configurationCtrlModel, $parse('formlyType')(formlyDetailCtrlModel));\n\n\t\t\t\t//set key :\t\n\t\t\t\t$parse('control.key')\n\t\t\t\t\t.assign(configurationCtrlModel, createUniqueKey($parse('control.type')(configurationCtrlModel), configModel));\n\n\t\t\t\t//set subtype :\t\n\t\t\t\t$parse('control.subtype')\n\t\t\t\t\t.assign(configurationCtrlModel, $parse('formlySubtype')(formlyDetailCtrlModel));\n\n\t\t\t\t//set templateOptions.label :\t\n\t\t\t\t$parse('control.templateOptions.label')\n\t\t\t\t\t.assign(configurationCtrlModel, $parse('formlyLabel')(formlyDetailCtrlModel));\t\t\t\t\t\n\n\t\t\t\t//set templateOptions.required :\t\n\t\t\t\t$parse('control.templateOptions.required')\n\t\t\t\t\t.assign(configurationCtrlModel, $parse('formlyRequired')(formlyDetailCtrlModel));\t\n\n\t\t\t\t//set templateOptions.required :\t\n\t\t\t\t$parse('control.templateOptions.description')\n\t\t\t\t\t.assign(configurationCtrlModel, $parse('formlyDesciption')(formlyDetailCtrlModel));\t\n\n\t\t\t\t//set templateOptions.required :\t\n\t\t\t\t$parse('control.templateOptions.placeholder')\n\t\t\t\t\t.assign(configurationCtrlModel, $parse('formlyPlaceholder')(formlyDetailCtrlModel));\n\n\t\t\t\t//set templateOptions.required :\t\n\t\t\t\t$parse('control.templateOptions.options')\n\t\t\t\t\t.assign(configurationCtrlModel, $parse('formlyOptions')(formlyDetailCtrlModel));\n\n\n \t\t\t\tif ($parse('control.type')(configurationCtrlModel) === 'datepicker') {\n\n\t\t\t\t\t$parse('control.templateOptions.datepickerPopup')\n\t\t\t\t\t\t.assign(configurationCtrlModel, $parse('datepickerPopup')(formlyDetailCtrlModel));\n\n\t\t\t  }    \n\n\t\t\t}\n\n\n\t\t\tvar Service = {};\n\n\t\t\t/**\n\t\t\t * refreshAllConfigurationFromDragAndDropModel \n\t\t\t */\n\t\t\tService.refreshAllConfigurationFromDragAndDropModel = function(configModel, ddModel){\n\t\t\t\t/**\n\t\t\t\t * TODO : prevent reset already set props\n\t\t\t\t * \n\t\t\t\t * previousConfigurationModel = a backup of configuration model 'configModel 'before resetting it\n\t\t\t\t * \n\t\t\t\t * -> dragDrop model contains unique keys of already existing controls : these controls must not be reset / overwritten  \n\t\t\t\t * \n\t\t\t\t */\n\t\t\t\tvar previousConfigurationModel = angular.copy(configModel); \n\t\t\t\t\n\t\t\t\t\n\t\t\t\tconfigModel.lines = [];\n\t\t\t\t/**\n\t\t\t\t * iterates line config model\n\t\t\t\t */\n\t\t\t\tangular.forEach(ddModel[1], function(lineValue, keyValue){\n\t\t\t\t\t/**\n\t\t\t\t\t * add empty line 1st \n\t\t\t\t\t * if line is empty -> it will be enough\n\t\t\t\t\t */\n\t\t\t\t\tconfigModel.lines.push(angular.copy(EasyFormGenFormlyBindingModels.getEasyFormEmptyConfigurationLineModel()));\n\t\t\t\t\t/**\n\t\t\t\t\t * update line value field\n\t\t\t\t\t */\n\t\t\t\t\tapplyThisLine(keyValue + 1, keyValue, configModel);\n\t\t\t\t\t/**\n\t\t\t\t\t * iterate through columns\n\t\t\t\t\t * and add them if control exists\n\t\t\t\t\t */\t\n\t\t\t\t\tangular.forEach(lineValue, function(colValue, colIndex){\n\t\t\t\t    \t/**\n\t\t\t\t    \t * push an empty control model but relative to dradrop : model control type\n\t\t\t\t    \t * (if datepicker so additionnal properties are added)\n\t\t\t\t    \t */ \t\n\t\t\t\t\t\t\tvar controlToBind = \n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t    \t\t\t\tcontrol : angular\n\t\t\t\t    \t\t\t\t\t\t\t\t\t\t.copy(EasyFormGenFormlyBindingModels\n\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t.getFormlyControlTemplateForNcolumnLine(\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlineValue.length, \n\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetFormlyDetailedControlModelFromDragDropObject(lineValue[colIndex]).formlyType\n\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t    \t\t\t};\n\t\t\t\t\t\t\tvar formlyDetailedControlModel = getFormlyDetailedControlModelFromDragDropObject(lineValue[colIndex]);\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * controls alreadys existed so do not reset it\n\t\t\t\t\t\t\t * \n\t\t\t\t\t\t\t * control to bind is the previous one\n\t\t\t\t\t\t\t */\t\t\n\t\t\t\t\t\t\tif(typeof colValue.key !== 'undefined'){\n\t\t\t\t\t\t\t\tconsole.warn('debug dragdropModel show this control key : ' + colValue.key);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcontrolToBind.control = angular.copy(colValue.configModelControl);\n\t\t\t\t\t\t\t\t//update cssClass depending new position:\n\t\t\t\t\t\t\t\tvar newClassName = EasyFormGenFormlyBindingModels\n\t\t\t\t\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t.getFormlyControlTemplateForNcolumnLine(\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlineValue.length, \n\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetFormlyDetailedControlModelFromDragDropObject(lineValue[colIndex]).formlyType\n\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontrolToBind.control.className = newClassName.className;\n\t\t\t\t\t\t\t//test if header nee this one\n\t\t\t\t\t\t\tcontrolToBind.control.cssClass = newClassName.className;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * get control details for this key in backup : previousConfigurationModel\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t* controls did not exists before : control to bind is a new one\n\t\t\t\t\t\t\t\t* bind dragdrop control properties to configuration model through controlToBind var\n\t\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\t\tbindConfigCtrlModelFromFormlyDetailedCtrlModel(\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyDetailedControlModel, //getFormlyDetailedControlModelFromDragDropObject(lineValue[colIndex]), \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrolToBind, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconfigModel\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\t\n\t\t\t\t    \t/**\n\t\t\t\t    \t * apply controlToBind var to configuration model control\n\t\t\t\t    \t */\n\t\t\t\t    \tif (typeof configModel.lines[keyValue].columns[colIndex] === 'undefined') configModel.lines[keyValue].columns.push(angular.copy( EasyFormGenFormlyBindingModels.getEasyFormConfigurationEmptyControlModel())); \n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconfigModel.lines[keyValue].columns[colIndex].control \t= angular.copy(controlToBind.control);\n\t\t\t\t    \tconfigModel.lines[keyValue].columns[colIndex].numColumn = colIndex + 1;\n\t\t\t\t    \tconfigModel.lines[keyValue].columns[colIndex].exist \t\t= true;\n\n\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\treturn configModel;\n\t\t\t};\n\t\t\t\n\t\t\t/**\n\t\t\t * drag drop model\n\t\t\t * -> will be used to bind configuration model\n\t\t\t * \tof no key saved, configuration model controls would be reset each drop events\n\t\t\t * \n\t\t\t * -> matching key : will prevent to reset existing control\n\t\t\t */\n\t\t\tService.refreshControlsKeys = function(configModel, dragDropModel){\t\t\t\t\n\t\t\t\t\n\t\t\t\tangular.forEach(configModel.lines, function(aConfigLine, aConfigLineIndex){\t\t\t\t\t\t\n\t\t\t\t\t\tangular.forEach(aConfigLine.columns, function(aConfigControl, aConfigControlIndex){\n\t\t\t\t\t\t\t//if last control removed from line\n\t\t\t\t\t\t\t//and dragDrop model did not already removed this line\n\t\t\t\t\t\t\tif(typeof dragDropModel[1][aConfigLineIndex] !== 'undefined'){\n\t\t\t\t\t\t\t\tif(dragDropModel[1][aConfigLineIndex].length > 0){\n\t\t\t\t\t\t\t\t\tdragDropModel[1][aConfigLineIndex][aConfigControlIndex].key = aConfigControl.control.key;\n\t\t\t\t\t\t\t\t\t//need to save all in dragdropModel as it is a reference\n\t\t\t\t\t\t\t\t\t//configModel still needed \n\t\t\t\t\t\t\t\t\t// -> to keep coherence (same back model) between all version of easyForm Generator\n\t\t\t\t\t\t\t\t\t// -> is the back model (can be saved to dataBase)\n\t\t\t\t\t\t\t\t\tdragDropModel[1][aConfigLineIndex][aConfigControlIndex].configModelControl = angular.copy(aConfigControl.control);\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tconsole.info('refreshControlsKeys');\n\t\t\t\tconsole.dir(\t\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t'when' \t\t\t\t\t\t\t: 'starting',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'configModel is ' \t: angular.copy(configModel),\n\t\t\t\t\t\t\t\t\t\t\t\t\t'dragDropModel is ' : angular.copy(dragDropModel)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\n\t\t\t};\n\n\n\n\t\t\treturn Service;\n\n\n\t}]);\n\n\n/**\n *  ------------------------------------------------------\n *  service : controllerModalProxy\n *  ------------------------------------------------------\n *\n *  service dedicated to - edit control - (controller modal proxy)\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n\t.module('edaApp.services.edaEditCtrlControllerModalProxy', [])\n\t.factory('controllerModalProxy', [\t'EasyFormGenFormlyBindingModels',\n\n\tfunction( EasyFormGenFormlyBindingModels ){\n\t\t\n\n\t\t\t\t\n\t\t/***\n\t\t * Service itself (no more no less)\n\t\t */\n\t\tvar Service = {};\n\n\t\t/**\n\t\t * model shared between \n\t\t * \n\t\t * - main controller (where configuration model comes from)\n\t\t * AND\n\t\t * - modal or sidepanel controller (where controls are configured/customized)\n\t\t */\n\t\tService.ProxyModel = {};//angular.copy(EasyFormGenFormlyBindingModels.getEasyFormListControls());\n\t\tresetProxyModel();\n\t\t/**\n\t\t * deprecated : in drag and drop version\n\t\t * \t\t\t\t\t\t\tuse \"resetProxyModel()\"\" \n\t\t */\n\t  function resetNyaSelect(nyaSelectObj){\n\n\t    var newNyaSelectObj = EasyFormGenFormlyBindingModels.getEasyFormListControls();\n\n\t  \tangular.copy(newNyaSelectObj, nyaSelectObj);\n\t    return true;\n\t  }\n\t\t\n\t\t/**\n\t\t * reset proxyModel\n\t\t */\n\t  function resetProxyModel(){\n\n\t    var newProxyModel = EasyFormGenFormlyBindingModels.getEasyFormListControls();\n\n\t  \tService.proxyModel = angular.copy(newProxyModel);\n\t    return true;\n\t  }\t\t\n\t  \n\t  function returnControlFromAddCtrlModalModel(CtrlModalModel){\n\n\t    var modelToReturn = {\n\t          selectedControl\t\t: 'none',\n\t          formlyType \t\t\t\t: 'none',\n\t          formlySubtype\t\t\t: 'none',\n\t          formlyLabel\t\t\t\t: '',\n\t          formlyRequired \t\t: false,\n\t          formlyDesciption\t: '',\n\t          formlyPlaceholder\t: '',\n\t          formlyOptions\t\t\t: []\n\t    };\n\n\t    for (var i = CtrlModalModel.controls.length - 1; i >= 0; i--) {\n\t      if (CtrlModalModel.selectedControl === CtrlModalModel.controls[i].id) {\n\n\t        modelToReturn.selectedControl \t= CtrlModalModel.selectedControl;\n\t        modelToReturn.formlyType \t\t\t\t= CtrlModalModel.controls[i].formlyType;\n\t        modelToReturn.formlySubtype \t\t= CtrlModalModel.controls[i].formlySubtype;\n\t        modelToReturn.formlyLabel \t\t\t= CtrlModalModel.controls[i].formlyLabel;\n\t        modelToReturn.formlyRequired \t\t= CtrlModalModel.controls[i].formlyRequired;\n\t        modelToReturn.formlyDesciption \t= CtrlModalModel.controls[i].formlyDesciption;\n\t        modelToReturn.formlyPlaceholder = CtrlModalModel.controls[i].formlyPlaceholder;\n\t        modelToReturn.formlyOptions \t\t= CtrlModalModel.controls[i].formlyOptions;\n\t        /**\n\t         * particular properties \n\t         * \n\t         * here ; datetpicker format\n\t         */\n\t        if (CtrlModalModel.controls[i].formlyType === 'datepicker') {\n\t\t\t\t\t\tmodelToReturn.datepickerPopup = CtrlModalModel.controls[i].datepickerPopup;   \n\t        }\n\t      }\n\t    }\n\t    return modelToReturn;\n\t  }\n\t  \n\t  function validKeyUniqueness(thisKey, configurationObj){\n\t    var isUnique = true;\n\t    for (var i = configurationObj.lines.length - 1; i >= 0; i--) {\n\t      for (var j = configurationObj.lines[i].columns.length - 1; j >= 0; j--) {\n\t        if (configurationObj.lines[i].columns[j].control.key === thisKey) {\n\t          isUnique = false;\n\t        }\n\t      } \n\t    }\n\t    return isUnique;  \n\t  }\n\n\t  /**\n\t   * return selected control ID (proxyModel)\n\t   * -> from configuration model selected indexes (line, column) \n\t   * \t\t+ control.formlyType \n\t   *   \t+ control.formlySubtype\n\t   */\n\t  function getSelectedProxyModel(configurationSelectedCtrl){\n\t  \tvar selectedProxyModelControl = 'none';\n\t  \tvar listProxyModelCTRL = angular.copy(EasyFormGenFormlyBindingModels\n\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.getEasyFormListControls().controls);\n\n\t  \tlistProxyModelCTRL.forEach(function(control){\n\t  \t\tif (control.formlyType \t\t=== configurationSelectedCtrl.type &&\n\t  \t\t\t\tcontrol.formlySubtype === configurationSelectedCtrl.subtype) {\n\n\t  \t\t\t\tselectedProxyModelControl = control.id;\n\t  \t\t\t\t\n\t  \t\t\t\treturn selectedProxyModelControl;\n\n\t  \t\t}\n\t  \t});\n\n\n\t  \treturn selectedProxyModelControl;\n\t  }\n\n\t\t/**\n\t\t * deprecated in drag and drop version\n\t\t * \n\t\t * use initProxyModel insead\n\t\t */\n\t\tService.initNyaSelect = function(nyaSelectObj){\n    \treturn resetNyaSelect(nyaSelectObj);\n    };\n\n\t\t/**\n\t\t * return nyaSelectModel from Selected control in configuration model\n\t\t * \n\t\t * note : deprecated in drag and drop version since no modal involved so just set private nyasSelect object.\n\t\t * \t\t\t\t-> in drag and drop version : use 'setProxyModelFromConfigurationSelection' instead \n\t\t * \t\t\t\t\tto set private object that will be readable to side edit panel\n\t\t */\n    Service.getNyASelectFromSelectedLineColumn = function(nyaSelectObj, configurationObj, indexLine, numcolumn){\n\t    resetNyaSelect(nyaSelectObj);  \n\t    /**\n\t     * data send to modal controller\n\t     */\n\t    if (typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions != 'undefined') {\n\n\t      nyaSelectObj.temporyConfig.selectedControl \t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.selectedControl != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.selectedControl : 'none';\n\t      nyaSelectObj.temporyConfig.formlyLabel \t\t\t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.label != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.label : '';\n\t      nyaSelectObj.temporyConfig.formlyRequired\t \t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.required != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.required : '';\n\t      nyaSelectObj.temporyConfig.formlyDesciption \t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.description != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.description : '';\n\t      nyaSelectObj.temporyConfig.formlyPlaceholder \t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.placeholder != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.placeholder : '';\n\t      nyaSelectObj.temporyConfig.formlyOptions \t\t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.options != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.options : '';\n\t      /**\n\t       * particular case : datepicker\n\t       */\n\t      if (nyaSelectObj.temporyConfig.selectedControl === 'Date') {\n\t      \tnyaSelectObj.temporyConfig.datepickerPopup = typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.datepickerPopup != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.datepickerPopup : '';\n\t      }\n\t    }\n\t    return nyaSelectObj;\n\t\t};\n\t\n\t\t\n\t\t/**\n\t\t * deprecated in drag and drop version : \n\t\t * \tuse bindConfigurationModelFromProxyModel to refresh configuration after control update in side panel\n\t\t * \n\t\t * will be used in closePanel\n\t\t */\n\t\tService.bindConfigurationModelFromModalReturn =  function(indexLine, numcolumn, modalAddCtrlModel, configurationObj){\n\t\t\t\t      \n\t\t\t\t      var extractedProps = returnControlFromAddCtrlModalModel(modalAddCtrlModel);\n\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.selectedControl \t= extractedProps.selectedControl;\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.type \t\t\t\t\t\t= extractedProps.formlyType;\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.subtype \t\t\t\t\t= extractedProps.formlySubtype;\n\t\t\t\t      /**\n\t\t\t\t       * templateOptions\n\t\t\t\t       */\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions = {\n\t\t                                                                                            label\t\t\t\t: '',\n\t\t                                                                                            required\t\t: false,\n\t\t                                                                                            description\t: '',\n\t\t                                                                                            placeholder\t: '',\n\t\t                                                                                            options\t\t\t: []\n\t\t\t\t                                                                                      };\n\t\t\t\t       /**\n\t\t\t\t        * then bind template option\n\t\t\t\t        */\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.label \t\t\t\t= extractedProps.formlyLabel;\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.required \t\t= extractedProps.formlyRequired;\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.description \t= extractedProps.formlyDesciption;\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.placeholder \t= extractedProps.formlyPlaceholder;\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.options \t\t\t= extractedProps.formlyOptions;\n\n\t\t\t\t      /**\n\t\t\t\t       * add additionnal — particular — properties :\n\t\t\t\t       * \n\t\t\t\t       * -> datepicker : datepickerPopup\n\t\t\t\t       */\n\t\t\t\t      if (configurationObj.lines[indexLine].columns[numcolumn].control.type === 'datepicker') {\n\t\t\t\t       \tconfigurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.datepickerPopup = extractedProps.datepickerPopup;\n\t\t\t\t      }\t\n\n\t\t\t\t      /**\n\t\t\t\t       * unique key (set only first time) in this model is formly control type + Date.now(); \n\t\t\t\t       */\n\t\t\t\t      var newKey = configurationObj.lines[indexLine].columns[numcolumn].control.type + '-' + Date.now();\n\n\t\t\t        if (validKeyUniqueness(newKey, configurationObj) === true){\n\t\t\t          configurationObj.lines[indexLine].columns[numcolumn].control.key = newKey;\n\t\t\t        }else{\n\t\t\t          newKey = configurationObj.lines[indexLine].columns[numcolumn].control.type + '-' + Date.now();\n\t\t\t          if (validKeyUniqueness(newKey, configurationObj) === true){\n\t\t\t            configurationObj.lines[indexLine].columns[numcolumn].control.key = newKey;\n\t\t\t          }else{\n\t\t\t            newKey = configurationObj.lines[indexLine].columns[numcolumn].control.type + '-' + Date.now();\n\t\t\t          }\n\t\t\t        }                                                                     \n\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.edited = true;\n\n\t\t};\n\n\t\tService.applyConfigToSelectedControl = function(nyaSelectObj){\n\t\t\t\t  \t\n\t\t\t\t    for (var i = nyaSelectObj.controls.length - 1; i >= 0; i--) {\n\t\t\t\t      if (nyaSelectObj.controls[i].id === nyaSelectObj.selectedControl) {\n\n\t\t\t\t          nyaSelectObj.controls[i].formlyLabel \t\t\t\t= nyaSelectObj.temporyConfig.formlyLabel;\n\t\t\t\t          nyaSelectObj.controls[i].formlyRequired \t\t= nyaSelectObj.temporyConfig.formlyRequired;\n\t\t\t\t          nyaSelectObj.controls[i].formlyDesciption \t= nyaSelectObj.temporyConfig.formlyDesciption;\n\t\t\t\t          nyaSelectObj.controls[i].formlyPlaceholder \t= nyaSelectObj.temporyConfig.formlyPlaceholder;\n\t\t\t\t          nyaSelectObj.controls[i].formlyOptions \t\t\t= nyaSelectObj.temporyConfig.formlyOptions;\n\n\t\t\t\t          if (nyaSelectObj.controls[i].id ==='Date' ) {\n\t\t\t\t          \tnyaSelectObj.controls[i].datepickerPopup \t= nyaSelectObj.temporyConfig.datepickerPopup;  \t\n\t\t\t\t          }\n\t\t\t\t        \n\t\t\t\t       }\n\t\t\t\t    }\n\t\t};\n\n\t\t/**\n\t\t * ============================================================\n\t\t * following methods for \"proxyModell\"\n\t\t * \n\t\t * Note this model : \n\t\t * - to share control model between \n\t\t * \t+ main controller (configuration model one)\n\t\t * \t+ edit panel controller (where apply customization to a selected control)\n\t\t * ============================================================\n\t\t */\n\t\t\n\t\t \n\t\t/**\n\t\t * reset proxy model\n\t\t */\n\t\tService.initProxyModel = function(thisProxyModelToInit){\n    \treturn resetProxyModel(thisProxyModelToInit);\n    };\t\t \n\t\t \n\t\t/**\n\t\t * to refresh configuration model from edit panel\n\t\t */\n\t\tService.bindConfigurationModelFromProxyModel =  function(indexLine, numcolumn, configurationObj){\n\t\t\t\t      \n\t\t\t\t      var extractedProps = angular.copy(Service.proxyModel.temporyConfig);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * debug : todel this lines\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tconsole.warn('debug edaEditCtrlControllerModalProxy'); \n\t\t\t\t\t\t\tconsole.dir(extractedProps);\n\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.selectedControl \t= extractedProps.selectedControl;\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.type \t\t\t\t\t\t= extractedProps.formlyType;\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.subtype \t\t\t\t\t= extractedProps.formlySubtype;\n\t\t\t\t      /**\n\t\t\t\t       * templateOptions\n\t\t\t\t       */\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions = {\n\t\t                                                                                            label\t\t\t\t: '',\n\t\t                                                                                            required\t\t: false,\n\t\t                                                                                            description\t: '',\n\t\t                                                                                            placeholder\t: '',\n\t\t                                                                                            options\t\t\t: []\n\t\t\t\t                                                                                      };\n\t\t\t\t       /**\n\t\t\t\t        * then bind template option\n\t\t\t\t        */\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.label \t\t\t\t= extractedProps.formlyLabel;\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.required \t\t= extractedProps.formlyRequired;\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.description \t= extractedProps.formlyDesciption;\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.placeholder \t= extractedProps.formlyPlaceholder;\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.options \t\t\t= extractedProps.formlyOptions;\n\n\t\t\t\t      /**\n\t\t\t\t       * add additionnal — particular — properties :\n\t\t\t\t       * \n\t\t\t\t       * -> datepicker : datepickerPopup\n\t\t\t\t       */\n\t\t\t\t      if (configurationObj.lines[indexLine].columns[numcolumn].control.type === 'datepicker') {\n\t\t\t\t       \tconfigurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.datepickerPopup = extractedProps.datepickerPopup;\n\t\t\t\t      }\t\n\n\t\t\t\t      /**\n\t\t\t\t       * unique key (set only first time) in this model is formly control type + Date.now(); \n\t\t\t\t       */\n\t\t\t\t      var newKey = configurationObj.lines[indexLine].columns[numcolumn].control.type + '-' + Date.now();\n\n\t\t\t        if (validKeyUniqueness(newKey, configurationObj) === true){\n\t\t\t          configurationObj.lines[indexLine].columns[numcolumn].control.key = newKey;\n\t\t\t        }else{\n\t\t\t          newKey = configurationObj.lines[indexLine].columns[numcolumn].control.type + '-' + Date.now();\n\t\t\t          if (validKeyUniqueness(newKey, configurationObj) === true){\n\t\t\t            configurationObj.lines[indexLine].columns[numcolumn].control.key = newKey;\n\t\t\t          }else{\n\t\t\t            newKey = configurationObj.lines[indexLine].columns[numcolumn].control.type + '-' + Date.now();\n\t\t\t          }\n\t\t\t        }                                                                     \n\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.edited = true;\n\n\t\t};\t\t \n\t\t \n\t\t \n\t\t/**\n\t\t * set local proxyModel from Selected control in configuration model\n\t\t * \n\t\t * replace deprecated \"getNyASelectFromSelectedLineColumn\"\n\t\t * -model is now named \"proxyModel\"\n\t\t * -model is stored in this service \n\t\t * \n\t\t * -> it has just more sence!\n\t\t */\n\t\t\n    Service.setProxyModelFromConfigurationSelection = function(configurationObj, indexLine, numcolumn){\n\t    /**\n\t     * data send to modal controller\n\t     */\n\t    if (typeof configurationObj.lines[indexLine].columns[numcolumn].control != 'undefined') {\n\n\t    \t/**\n\t    \t * determine selected control from indexes \n\t    \t * and control.type and control.subtype in configuration model\n\t    \t */\n\n\t    \tService.proxyModel.selectedControl \t\t\t\t\t\t\t\t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.type != 'undefined' ? getSelectedProxyModel(configurationObj.lines[indexLine].columns[numcolumn].control) : 'none';\n\t      Service.proxyModel.temporyConfig.selectedControl \t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.type != 'undefined' ? getSelectedProxyModel(configurationObj.lines[indexLine].columns[numcolumn].control) : 'none';\n\t\t\t\t\n\t\t\t\tService.proxyModel.temporyConfig.formlyType \t\t\t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.type != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.type: 'none';\n\t\t\t\tService.proxyModel.temporyConfig.formlySubtype \t\t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.subtype != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.subtype : 'none';\n\t\t\t\t\n\t      Service.proxyModel.temporyConfig.formlyLabel \t\t\t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.label != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.label : '';\n\t      Service.proxyModel.temporyConfig.formlyRequired\t \t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.required != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.required : '';\n\t      Service.proxyModel.temporyConfig.formlyDesciption \t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.description != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.description : '';\n\t      Service.proxyModel.temporyConfig.formlyPlaceholder \t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.placeholder != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.placeholder : '';\n\t      Service.proxyModel.temporyConfig.formlyOptions \t\t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.options != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.options : '';\n\t      /**\n\t       * particular case : datepicker\n\t       */\n\t      if (Service.proxyModel.temporyConfig.selectedControl === 'Date') {\n\t      \tService.proxyModel.temporyConfig.datepickerPopup = typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.datepickerPopup != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.datepickerPopup : '';\n\t      }\n\t    }\n\n\t    \n\t    // console.info('setProxyModelFromConfigurationSelection');\n\t    // console.dir(\t\n\t    // \t\t\t\t\t\t\t{\n\t    // \t\t\t\t\t\t\t\t'fromService' : 'setProxyModelFromConfigurationSelection method',\n\t    // \t\t\t\t\t\t\t\t'after' : 'applied config',\n\t    // \t\t\t\t\t\t\t\t'Service.proxyModel' \t: angular.copy(Service.proxyModel)\n\t    // \t\t\t\t\t\t\t}\n\t    // \t\t\t\t\t\t);\n\n\n\t    return Service.proxyModel;\n\t\t};\t\t\t \n\n\t\tService.getProxyModel = function(){\n\t\t\treturn Service.proxyModel;\n\t\t};\n\n\n\t\t/**\n\t\t * ============================================================\n\t\t * following methods for \"editPanelModel\"\n\t\t * \n\t\t * Note this model : \n\t\t * - to manage side edit control panel\n\t\t * ============================================================\n\t\t */\n\t\t \n\t\tvar editPanelModel = {\n                            toggle : false,\n                            lineIndex : -1,\n                            columnIndex : -1,\n                            control : {}\n                          };\n\t\t\t\t \n\t\t/**\n\t\t * getter : editPanelModel (whole model => type = object)\n\t\t */\t\t\t \n\t\tService.getEditPanelModelAllModel = function(){\n\t\t\treturn editPanelModel;\n\t\t};\n\t\t/**\n\t\t * setter : editPanelModel (whole model => type = object)\n\t\t */\t\t\n\t\tService.setEditPanelModelControl = function(newEditPanelModel){\n\t\t\tvar successfullDone  = false;\n\t\t\t\n\t\t\tif (typeof newEditPanelModel !== 'undefined') {\n\t\t\t\teditPanelModel = angular.copy(newEditPanelModel);\n\t\t\t\tsuccessfullDone = true;\t\n\t\t\t}\n\t\t\t\n\t\t\treturn successfullDone;\n\t\t};\t\t\n\t\t\n\t\t\n\t\t/**\n\t\t * getter : editPanelModel.columnIndex\n\t\t */\t\t\n\t\tService.getEditPanelModelColumnIndex = function(){\n\t\t\treturn editPanelModel.columnIndex;\n\t\t};\n\t\t/**\n\t\t * setter : editPanelModel.columnIndex\n\t\t */\t\t\t\t\n\t\tService.setEditPanelModelColumnIndex = function(newColumnIndex){\n\t\t\tvar successfullDone  = false;\n\t\t\t\n\t\t\tif (typeof newColumnIndex !== 'undefined') {\n\t\t\t\teditPanelModel.columnIndex = newColumnIndex;\n\t\t\t\tsuccessfullDone = true;\t\n\t\t\t}\n\t\t\t\n\t\t\treturn successfullDone;\n\t\t};\t\t\n\t\t\n\t\t\n\t\t/**\n\t\t * getter : editPanelModel.lineIndex\n\t\t */\t\t\t\n\t\tService.getEditPanelModelLineIndex = function(){\n\t\t\treturn editPanelModel.lineIndex;\n\t\t};\n\t\t/**\n\t\t * setter : editPanelModel.lineIndex\n\t\t */\t\t\n\t\tService.setEditPanelModelLineIndex = function(newLineIndex){\n\t\t\tvar successfullDone  = false;\n\t\t\t\n\t\t\tif (typeof newLineIndex !== 'undefined') {\n\t\t\t\teditPanelModel.lineIndex = newLineIndex;\n\t\t\t\tsuccessfullDone = true;\t\n\t\t\t}\n\t\t\t\n\t\t\treturn successfullDone;\n\t\t};\n\n\t\t/**\n\t\t * getter : editPanelModel.control\n\t\t */\t\t\n\t\tService.getEditPanelModelControl = function(){\n\t\t\treturn editPanelModel.control;\n\t\t};\t\t\n\t\t/**\n\t\t * setter : editPanelModel.control\n\t\t */\n\t\tService.setEditPanelModelControl = function(newControl){\n\t\t\tvar successfullDone  = false;\n\t\t\t\n\t\t\tif (typeof newControl !== 'undefined') {\n\t\t\t\t//editPanelModel.control = angular.copy({});\n\t\t\t\teditPanelModel.control = angular.copy(newControl);\n\t\t\t\tsuccessfullDone = true;\t\n\t\t\t}\n\t\t\t\n\t\t\treturn successfullDone;\n\t\t};\n\n\t\t/**\n\t\t * getter : editPanelModel.toggle\n\t\t */\n\t\tService.getEditPanelModelToggle = function(){\n\t\t\treturn editPanelModel.toggle;\n\t\t};\n\t\t/**\n\t\t * setter : editPanelModel.toggle\n\t\t */\n\t\tService.setEditPanelModelToggle = function(newToggleValue){\n\t\t\tvar successfullDone  = false;\n\t\t\t\n\t\t\tif (typeof newToggleValue !== 'undefined') {\n\t\t\t\teditPanelModel.toggle = newToggleValue;\n\t\t\t\tsuccessfullDone = true;\t\n\t\t\t}\n\t\t\t\n\t\t\treturn successfullDone;\n\t\t};\n\n\t\t\n\t\t/**\n\t\t * special controls bindings from edit panel\n\t\t * -> controls like basic select, radio and groupe select\n\t\t */\n\t\t\n\t\t/**\n\t\t * special controls temporay models\n\t\t *\n\t\t * -> helps in side panel to add aditionnal properties \n\t\t * like options for selects...\n\t\t */\n\t\tvar initOptionModel \t\t\t\t\t\t\t\t= { rows:[] };\n\n\t\tService.basicSelectRowCollection \t\t= angular.copy(initOptionModel);\n\t\tService.newOptionBasicSelect \t\t\t\t= angular.copy({ saisie: '' });\n\n\t\tService.groupedSelectRowCollection \t= angular.copy(initOptionModel);\n\t\tService.newOptionGroupedSelect \t\t\t= angular.copy({ saisie: '' });\n\t\tService.GroupedSelectGroups \t\t\t\t= angular.copy({ list:[] });\n\t\tService.newGroupGroupedSelect \t\t\t= angular.copy({ saisie: '' });\n\t\tService.groupSelectGroupClick \t\t\t= angular.copy({ showList : false });\n\n\t\tService.radioRowCollection \t\t\t\t\t= angular.copy(initOptionModel);\n\t\tService.newOptionRadio \t\t\t\t\t\t\t= angular.copy({ saisie: '' });\n\n\t\tService.resetAllTemporyModels = function(){\n\t\t\t//basic select : shallow copy way (= basicSelectRowCollection shared with groupedSelectRowCollection and radioRowCollection)\n\t\t\t//Service.basicSelectRowCollection \t\t= initOptionModel;\n\t\t\t//Service.newOptionBasicSelect \t\t\t\t= { saisie: '' };\n\n\t\t\t//basic select :  deep copy way :\n\t\t\tService.basicSelectRowCollection \t\t= angular.copy(initOptionModel);\n\t\t\tService.newOptionBasicSelect \t\t\t\t= angular.copy({ saisie: '' });\n\n\t\t\t//grouped select : shallow copy way :\n\t\t\t// Service.groupedSelectRowCollection \t= initOptionModel;\n\t\t\t// Service.newOptionGroupedSelect \t\t\t= { saisie: '' };\n\t\t\t// Service.GroupedSelectGroups \t\t\t\t= { list:[] };\n\t\t\t// Service.newGroupGroupedSelect \t\t\t= { saisie: '' };\n\t\t\t// Service.groupSelectGroupClick \t\t\t= { showList : false };\n\n\t\t\t//grouped select :  deep copy way :\n\t\t\tService.groupedSelectRowCollection \t= angular.copy(initOptionModel);\n\t\t\tService.newOptionGroupedSelect \t\t\t= angular.copy({ saisie: '' });\n\t\t\tService.GroupedSelectGroups \t\t\t\t= angular.copy({ list:[] });\n\t\t\tService.newGroupGroupedSelect \t\t\t= angular.copy({ saisie: '' });\n\t\t\tService.groupSelectGroupClick \t\t\t= angular.copy({ showList : false });\n\n\t\t\t//radio : shallow copy way :\n\t\t\t// Service.radioRowCollection \t\t\t\t\t= initOptionModel;\n\t\t\t// Service.newOptionRadio \t\t\t\t\t\t\t= { saisie: '' };\n\n\t\t\t//radio : deep copy way :\n\t\t\tService.radioRowCollection \t\t\t\t\t= angular.copy(initOptionModel);\n\t\t\tService.newOptionRadio \t\t\t\t\t\t\t= angular.copy({ saisie: '' });\n\n\t\t\treturn true;\n\t\t};\t\t\n\n\t/**\n\t * bindSpecialCtrlTemporyModelsToProxyModel: needed when validating after editing a control\n\t * tempory models applied to proxyModel if control is one of these\n\t *\n\t * example : if selected control is a basic select options \n\t * -> so its tempory models are bound to proxyModel\n\t */\n\tService.bindSpecialCtrlTemporyModelsToProxyModel = function(){\n\t\tif (Service.proxyModel.selectedControl === 'BasicSelect') {\n\t\t  Service.bindBasicSelectToProxyModel(Service.basicSelectRowCollection);\n\t\t}\n\n\t\tif (Service.proxyModel.selectedControl === 'GroupedSelect') {\n\t\t  Service.bindGroupedSelectToProxyModel(Service.groupedSelectRowCollection);\n\t\t}  \n\n\t\tif (Service.proxyModel.selectedControl === 'Radio') {\n\t\t  Service.bindRadioToProxyModel(Service.radioRowCollection);\n\t\t}  \n\t};\n\n\t\t/**\n\t\t * basic select\n\t\t */\n\t\t\n\n\n\t\tService.bindBasicSelectFromProxyModel = function(basicSelectRowCollection){\t\t\n\t\t    if (Service.proxyModel.temporyConfig.formlyOptions.length > 0) {\n\t\t      for (var i = 0; i <= Service.proxyModel.temporyConfig.formlyOptions.length-1; i++){\n\t\t\n\t\t            var newOption = {\n\t\t            \t\t\t\t\t\t\t\t\t'option' \t: Service.proxyModel\n\t\t            \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.temporyConfig.formlyOptions[i].name,\n\t\t                      \t\t\t\t'order' \t: i,\n\n\t\t                      \t\t\t\t'group' \t: ''\n\t\t                    \t\t\t\t};\n\n\t\t            basicSelectRowCollection.rows.push(newOption);\n\t\t      }    \n\t\t    }\n\t\t  };\n\n\t\t Service.bindBasicSelectToProxyModel = function(basicSelectRowCollection){\n\t\t    var resetNyASelectOptions = [];\n\t\t    Service.proxyModel.temporyConfig.formlyOptions = resetNyASelectOptions;\n\t\t    if (basicSelectRowCollection.rows.length > 0) {\n\t\t      for (var i = 0; i <= basicSelectRowCollection.rows.length - 1; i++){\n\t\t            var newOption = {\n\t\t            \t\t\t\t\t\t\t\t\t'name' : basicSelectRowCollection.rows[i].option,\n\n\t\t                      \t\t\t\t'value': i,\n\n\t\t                      \t\t\t\t'group': ''\n\t\t                    \t\t\t\t};\n\n\t\t            Service.proxyModel.temporyConfig.formlyOptions.push(newOption);\n\t\t        }      \n\t\t   }\n\t\t  };\n\n\n\t\t  /**\n\t\t   * grouped select\n\t\t   */\n\t\t Service.bindGroupedSelectFromProxyModel = function(groupedSelectRowCollection, GroupedSelectGroups){\n\t\t    if (Service.proxyModel.temporyConfig.formlyOptions.length > 0) {\n\t\t      for (var i = 0; i <= Service.proxyModel.temporyConfig.formlyOptions.length-1; i++){\t\t\n\t\t            var newOption = {\n\t\t            \t\t\t\t\t\t\t\t\t'option' \t: Service.proxyModel.temporyConfig.formlyOptions[i].name,\n\t\t                      \t\t\t\t'order'\t\t: i,\n\t\t                      \t\t\t\t'group'\t\t: Service.proxyModel.temporyConfig.formlyOptions[i].group\n\t\t                    \t\t\t\t};\n\t\t            groupedSelectRowCollection.rows.push(newOption);            \n\t\t        }\n\t\t        //grouplist : thx to lodash it is easy\n\t\t       var filteredgroup = _.uniq(_.pluck(groupedSelectRowCollection.rows, 'group'));\n\t\t       angular.copy(filteredgroup, GroupedSelectGroups.list); \t\t\n\t\t    }\n\t\t };\n\n\n\n\t\tService.bindGroupedSelectToProxyModel = function(groupedSelectRowCollection){\n\t\t    Service.proxyModel.temporyConfig.formlyOptions = [];\n\t\t    for (var i = 0; i <= groupedSelectRowCollection.rows.length - 1; i++){\n\t\t          var newOption = {\n\t\t          \t\t\t\t\t\t\t\t\t'name' \t: groupedSelectRowCollection.rows[i].option,\n\t\t                    \t\t\t\t'value'\t: i,\n\t\t                    \t\t\t\t'group'\t: groupedSelectRowCollection.rows[i].group\n\t\t                  \t\t\t\t};\n\t\t          Service.proxyModel.temporyConfig.formlyOptions.push(newOption);   \n\t\t      }\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * radio\n\t\t */\n\t\tService.bindRadioFromProxyModel = function(radioRowCollection){\n\t\t    if (Service.proxyModel.temporyConfig.formlyOptions.length > 0) {\n\t\t      for (var i = 0; i <= Service.proxyModel.temporyConfig.formlyOptions.length-1; i++){\n\t\t\n\t\t            var newOption = { \n\t\t                              'option'\t: Service.proxyModel.temporyConfig.formlyOptions[i].name,\n\t\t                              'order'\t\t: i,\n\t\t                              'group'\t\t: ''\n\t\t                            };\n\t\t            radioRowCollection.rows.push(newOption);\n\t\t      }    \n\t\t    }\n\t\t};\n\n\t\t// Service.bindProxyModelOptionFromRadio = function(radioRowCollection){\n\t\t//     if (radioRowCollection.rows.length > 0) {\n\t\t// \t\t\tService.proxyModel.temporyConfig.formlyOptions = [];\n\t\t//       for (var i = 0; i <= radioRowCollection.rows.length-1; i++){\n\t\t// \n\t\t//             var newOption = { \n\t\t//                               'name'\t\t: radioRowCollection.rows[i].option,\n\t\t//                               'value'\t\t: i,\n\t\t//                               'group'\t\t: ''\n\t\t//                             };\n\t\t//             Service.proxyModel.temporyConfig.formlyOptions.push(newOption);\n\t\t//       }    \n\t\t//     }\n\t\t// };\n\n\n\t\tService.bindRadioToProxyModel = function(radioRowCollection){\n\t\t    var resetproxyModelOptions = [];\n\t\t    Service.proxyModel.temporyConfig.formlyOptions = resetproxyModelOptions;\n\t\t\n\t\t    if (radioRowCollection.rows.length > 0) {\n\t\t\n\t\t      for (var i = 0; i <= radioRowCollection.rows.length - 1; i++){\n\t\t            var newOption = {\n\t\t                              'name'\t\t: radioRowCollection.rows[i].option,\n\t\t                              'value'\t\t: i,\n\t\t                              'group'\t\t: ''\n\t\t                    };\n\t\t            Service.proxyModel.temporyConfig.formlyOptions.push(newOption);   \n\t\t        }       \n\t\t   }\n\t\t};\n\n \t\t  \n\n\n\n    return Service;\n\n  }]);\n\n\n/**\n *  ------------------------------------------------------\n *  service : formFieldManage\n *  ------------------------------------------------------\n *\n *         MOST IMPORTANT service to manage formly field model \n *  (the presentation model and the back model or configuration model)\n * \n *\n *  - \"formlyModel\" is the model exposed to view or html \"fields model\" (= an array of objects)\n *    This model is the one you can see in all well documented examples here : http://angular-formly.com\n *    -> in your view or html : <formly-form model=\"dataModel\" fields=\"formlyModel\">\n *\n *  - \"configurationModel\" is the model on which editing a form will work\n *    before applying results to \"formlyModel\"\n *\n *\n * NOTE : if you save a form to database, you will save \"configurationModel\" rather than \"formlyModel\".\n *        Why? : \n *          since as you plan to create a form generator you can't create a finite model\n *          since you may want to be able to save the generated form even if it is not a finite model\n *          since \"formlyModel\" objects will be populated with a lot of properties you don't need to store contrary to \"configurationModel\" which contains only what you need\n *          since \"formlyModel\" can't be JSON.stringify when you want to use advanced layout (1 column/2/3 columns template?)\n *          since it is better approach to use a backgroundModel (async operation ...) that is bind to presentation model only when it is fully ready or filled.\n *\n *\n * NOTE : \n * - if you want to manage more columns templates (right now only manage up to 3 columns), just inspire from existing code\n * - if you want to extend easy form generator, be sure to be a minimum comfortable with \"angular formly\": http://angular-formly.com\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n  .module('edaApp.services.formFieldManage', [])\n  .factory('formFieldManage', [ 'EasyFormGenFormlyBindingModels', \n\n  function( EasyFormGenFormlyBindingModels ){\n\n    var Service = {};\n\n    /**\n     * At initial state : configuration model will contain 1 line, since :\n     *    -> it is non sense to create a form without a single line (no line = no form at all)\n     *    -> so it is non sense to force user to add a first line\n     * \n     *  PLEASE NOTE columns array contains objects that look like formly fields one\n     */\n    Service.initConfigurationEditFromScratch =  function(configurationModel, addStepWayProperties){\n      var configurationModelInit = EasyFormGenFormlyBindingModels.getEasyFormInitialStateConfigurationModel(addStepWayProperties); \n      angular.copy(configurationModelInit, configurationModel);\n    };\n\n    /**\n     * Get an configuration empty (no init line) then empty it with lines array provided in param\n     * @param   object - configurationModel   [configuration model]\n     * @param   array -  lines                [an array : lines to apply to an empty configuration model]\n     * @param   bool -   addStepWayProperties [description]\n     * @return {object message}               [give details on how it happened to caller]\n     */\n    Service.bindConfigurationLines = function(configurationModel, lines, addStepWayProperties){\n              \n      if( Object.prototype.toString.call(lines) === '[object Array]' ) {\n        var configurationModelResult = EasyFormGenFormlyBindingModels.getEasyFormReloadConfigurationModel(addStepWayProperties);\n\n        configurationModelResult.lines = [].concat(lines);  \n        angular.copy(configurationModelResult, configurationModel);                                         \n\n        return getMessageObject('configuration model is bound','lines are bound to configuration model.');\n      }else{\n        return getErrorObject('lines is not an array', 'Checks lines type, it is not an array.');\n      }\n    };\n    /**\n     * applyConfigurationToformlyModel : \n     *  - bind configuration model into formly field model\n     *  - reset dataModel (formlyfield may have changed so previous dataModel would be false)\n     * @param  configurationModel \n     * @param  formlyModel        \n     * @param  formlyDataModel    \n     */\n    Service.applyConfigurationToformlyModel = function(configurationModel, formlyModel, formlyDataModel){\n      resetFormlyModel(formlyModel);\n      resetDataModel(formlyDataModel);\n\n      //manage header here line0\n      var lineNumber = configurationModel.lines.length;\n\n\n      \n\n      for (var i = 0; i < lineNumber; i++) {\n\n\n        /**\n         * TO TEST\n         */\n        \n        //var FieldGroup = [];\n        AddNColumnControl(formlyModel, configurationModel, i);\n\n\n        // FieldGroup.push(controlTemplate);\n\n\n        \n        // formlyModel.push(\n        //                    {\n        //                       className   : 'row', \n        //                       fieldGroup  : FieldGroup\n        //                     }\n        //                 ); \n      }\n    };\n        \n    return Service;\n\n\n\n    function resetFormlyModel(formlyModel){\n      var resetformly = [];\n      angular.copy(resetformly, formlyModel);\n    }\n\n    /**\n     * New auuto adpat  add N column controls\n     */\n    function AddNColumnControl(formlyModel, configurationModel, lineIndex){\n\n      var numberOfColumns = configurationModel.lines[lineIndex].columns.length;\n\n      \n      /**\n       * push formly model \n       * \n       * here : only className and empty fieldGroup (controls != header)\n       *\n       * if header will be reset to set a template (at least we have now indexFormlyModel)\n       */\n      \n      //get index formlyModel for this line :\n      var indexFormlyModel =  formlyModel.push(\n                                               {\n                                                  className   : 'row', \n                                                  fieldGroup  : []\n                                                }\n                                              ) - 1 ;        \n\n      /**\n       * iterates through controls in the line\n       */\n      \n      configurationModel.lines[lineIndex].columns.forEach(function(column, columnIndex){\n        var controlTemplate = {};\n\n        // if (( typeof controlTemplate  !== 'undefined' &&\n        //       column.control.type     === 'header'    || \n        //       column.control.type     === 'subTitle') &&\n        //       column.control.type     !== 'none') {\n        //     /**\n        //      * header is not a control just a template\n        //      *\n        //      * getHeaderTemplateForNcolumnLine()\n        //      * NOTE : header text is stored from description\n        //      */\n        //     \n        //     var headerTextContent = column.control.templateOptions.description;\n        //     controlTemplate = EasyFormGenFormlyBindingModels.getHeaderTemplateForNcolumnLine(numberOfColumns, headerTextContent);\n        //     \n        //               \n        //     console.warn('EasyFormGenFormlyBindingModels : controlTEemplate');\n        //     console.dir(controlTemplate);\n        //   \n        //     /**\n        //      * popuplate properties\n        //      */\n        //      \n        //     formlyModel[indexFormlyModel] = {};\n        //     formlyModel[indexFormlyModel].template = controlTemplate.template;\n        // }\n        \n        if (typeof controlTemplate  !== 'undefined' &&\n            // column.control.type     !== 'header'    && \n            // column.control.type     !== 'subTitle'  &&\n            column.control.type     !== 'none') {\n\n          /**\n           * controls : getFormlyControlTemplateForNcolumnLine()\n           *\n           * @PARAM numberOfColumns       : integer to deduce cssClss to apply\n           * @PARAM column.control.type   : to add if needed specific properties (example : datepicker)\n           */\n           \n          if(column.control.type  === 'header' || \n             column.control.type  === 'subTitle'){\n               \n            var headerTextContent = column.control.templateOptions.description;\n            \n            controlTemplate.template = EasyFormGenFormlyBindingModels\n                                        .getHeaderTemplateForNcolumnLine(numberOfColumns, headerTextContent)\n                                            .template;\n            \n            controlTemplate.className = EasyFormGenFormlyBindingModels\n                                          .getRawHeaderTemplates()\n                                            .selectedClass; \n            \n                             \n          } else {\n            \n            controlTemplate = EasyFormGenFormlyBindingModels.getFormlyControlTemplateForNcolumnLine(numberOfColumns, column.control.type);\n\n            /**\n            *\n            * \n            * NEED REFACTOR HERE \n            * should bind properties dynamically \n            * \n            * TODO need to validate all controls (datepicker may not work)\n            * need to refactor\n            *\n            * \n            */\n            controlTemplate.className                   = column.control.className;\n            controlTemplate.type                        = column.control.type;\n            controlTemplate.key                         = column.control.key;\n            controlTemplate.templateOptions.type        = column.control.templateOptions.type;\n            controlTemplate.templateOptions.label       = column.control.templateOptions.label;\n            controlTemplate.templateOptions.required    = column.control.templateOptions.required;\n            controlTemplate.templateOptions.placeholder = column.control.templateOptions.placeholder;\n            controlTemplate.templateOptions.description = column.control.templateOptions.description;\n            controlTemplate.templateOptions.options     = [].concat(column.control.templateOptions.options); \n  \n            if (typeof controlTemplate.templateOptions.datepickerPopup !== 'undefined')  column.control.templateOptions.datepickerPopup = controlTemplate.templateOptions.datepickerPopup  ;\n\n              \n          }\n          \n\n          /**\n           * popuplate properties\n           */\n          \n\n\n\n\n          /**\n           * push control into formly model in its group\n           */\n          \n      \n           /**\n            * need to catch this random error\n            */\n          //try{\n            formlyModel[indexFormlyModel].fieldGroup.push(controlTemplate);         \n          //}catch(e){\n          //  console.warn('error...');\n          //}\n          \n\n          }\n        }\n\n      );\n    }    \n\n\n    function isTemplateOptionDefined(obj){\n      return typeof obj.templateOptions !== 'undefined' ? true : false;\n    }\n\n    function extractTemplateOptionLabel(obj){\n\n     //console.info('extractTemplateOptionLabel');\n     //console.dir(obj);\n     return  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.label !== 'undefined'? obj.templateOptions.label: '') : '';\n    }\n\n\n    function extractTemplateOptionDatepickerPopup(obj){\n      return  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.datepickerPopup !== 'undefined'? obj.templateOptions.datepickerPopup: '') : '';\n    }\n\n    function extractTemplateOptionRequired(obj){\n      return  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.required !== 'undefined'? obj.templateOptions.required: '') : '';\n    }\n    //radio and select\n    function extractTemplateOptionOptions(obj){\n      return  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.options !== 'undefined'? obj.templateOptions.options: '') : '';\n    }\n\n\n\n    function extractTemplateOptionType(obj){\n      return  typeof obj.subtype !== 'undefined'? obj.subtype: '';\n    }\n\n    function extractTemplateOptionPlaceholder(obj){\n      return  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.placeholder !== 'undefined'? obj.templateOptions.placeholder: '') : '';\n    }\n\n    function extractTemplateOptionDescription(obj){\n      return  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.description !== 'undefined'? obj.templateOptions.description: '') : '';\n    }\n\n\n    /////////////////////////////////////////\n    // formly model functions\n    /////////////////////////////////////////\n\n    function resetDataModel(obj){\n      var emptyDataModel = {};\n      angular.copy(emptyDataModel, obj);\n      return true;\n    }\n\n    /////////////////////////////////////////\n    // custom errors\n    /////////////////////////////////////////\n\n\n    function getErrorObject(errorTitle, errorMessage){\n\n      var messageObj =  {\n                          noError   : false,\n                          title     : '',\n                          Message   : ''  \n                        };\n\n      messageObj.noError  = false;\n      messageObj.title    = errorTitle;\n      messageObj.Message  = errorMessage;\n      return messageObj;\n    }\n\n    function getMessageObject(messageTitle, messageBody){\n      var messageObj =  {\n                          noError   : false,\n                          title     : '',\n                          Message   : ''  \n                        };\n\n      messageObj.noError    = true;\n      messageObj.title      = messageTitle;\n      messageObj.Message    = messageBody;\n      return messageObj;\n    }\n  \n}]);\n\n\n\n\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//  form API : suppose you have your RESTful backend \n//\n//  module = \"service\"  \n//  ------------------------------------------------------\n//      Syntax (convention) :\n//          \"edaApp\" = application\n//          \"edaApp.services.serviceNAME\" = container services module\n//\n//  This module is a service -> it must be injected in services container\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nangular\n\t.module('edaApp.services.formsByIdService', ['ngResource'])\n\t.factory('formsByIdService', ['$resource', function($resource){\n    return $resource('/api/formGen/:id', {id: '@id'}, {\n\n    });\n  }]);\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// service to manage select options (used in modal to edit control)\n//\n//  module = \"service\"  selectOptionManage (manage : selects, radio...)\n//  ------------------------------------------------------\n//      Syntax (convention) :\n//          \"edaApp\" = application\n//          \"edaApp.services.serviceNAME\" = container services module\n//\n//  This module is a service -> it must be injected in services container\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nangular\n  .module('edaApp.services.selectOptionManage', [])\n  .factory('selectOptionManage', [ function(){\n\t//console.log('--> INIT : Hello service  \\'\\'selectOptionManage\\'\\' ');\n\n    return {\n            testMe: function() {\n                return 'selectOptionManage is here.';\n            },\n\n            initModel: function(selectObj){\n              resetModel(selectObj);\n            },\n        \n            isOptionUnique: function(selectObj, textValue){\n              for (var i = selectObj.rows.length - 1; i >= 0; i--) {\n\n                if (selectObj.rows[i].option === textValue) {\n                  return false;\n                }\n                \n              }\n              return true;\n            },\n\n            //test if not empty string (= full space string is not conidered as valid)\n            isOptionValidFormat: function(textValue){\n              if (textValue !== '') {\n                return true;\n              }\n              return false;                    \n            },\n\n            addNewOptionRadio: function(selectObj, newOptionText){\n              var fullResponse = {\n                                    resultFlag : false,\n                                    details : ''\n                                  };\n\n              var checkResult = validOption(selectObj, newOptionText);  \n\n              //console.info(checkResult);\n\n              if (checkResult.resultFlag === true){\n\n                  var newOption = {\n                                      option: newOptionText,\n                                      order: selectObj.rows.length\n                                  };\n\n                  selectObj.rows.push(newOption);\n                  fullResponse.resultFlag = true;\n                  fullResponse.details = '';\n                  return fullResponse;\n              }else{\n\n                    angular.copy(checkResult, fullResponse);                    \n                    return fullResponse;                        \n              }\n\n\n            },\n\n\n            addNewOptionBasicSelect: function(selectObj, newOptionText){\n              var fullResponse = {\n                                    resultFlag : false,\n                                    details : ''\n                                  };\n\n              var checkResult = validOption(selectObj, newOptionText);  \n\n              //console.info(checkResult);\n\n              if (checkResult.resultFlag === true){\n\n                  var newOption = {\n                                      option: newOptionText,\n                                      order: selectObj.rows.length\n                                  };\n\n                  selectObj.rows.push(newOption);\n                  fullResponse.resultFlag = true;\n                  fullResponse.details = '';\n                  return fullResponse;\n              }else{\n\n                    angular.copy(checkResult, fullResponse);                    \n                    return fullResponse;                        \n              }\n\n\n            },\n\n            addNewOptionGroupedSelect: function(selectObj, newOptionText, newOptionGroup){\n              var fullResponse = {\n                                    resultFlag : false,\n                                    details : ''\n                                  };\n\n              // if (typeof newOptionGroup === \"undefined\") {\n\n              //     fullResponse.resultFlag = false;\n              //     fullResponse.details = \"Group option is undefined\";\n              //     return fullResponse;\n              // }\n\n              // if (newOptionGroup === \"\") {\n\n              //     fullResponse.resultFlag = false;\n              //     fullResponse.details = \"Group option is undefined\";\n              //     return fullResponse;\n              // }\n\n              var checkResult = validOption(selectObj, newOptionText);  \n\n          \n              if (checkResult.resultFlag === true){\n\n                  var newOption = {\n                                      option: newOptionText,\n                                      group: newOptionGroup,\n                                      order: selectObj.rows.length\n                                  };\n\n                  selectObj.rows.push(newOption);\n                  fullResponse.resultFlag = true;\n                  fullResponse.details = '';\n                  return fullResponse;\n              }else{\n\n                    angular.copy(checkResult, fullResponse);                    \n                    return fullResponse;                        \n              }\n\n            },\n\n\n            removeOption:  function(selectObj, AtIndex) {\n              var fullResponse = {\n                                  resultFlag : false,\n                                  details : ''\n                                };\n\n              if (AtIndex !== -1) {\n                  selectObj.rows.splice(AtIndex, 1);\n                  fullResponse.resultFlag = true;\n                  fullResponse.details= '';\n                  return fullResponse;\n              }else{\n                  fullResponse.resultFlag = false;\n                  fullResponse.details= 'Option index not valid';\n                  return fullResponse;\n              }\n            },\n\n            upthisOption : function(selectObj, indexOption){\n              var fullResponse = {\n                                  resultFlag : false,\n                                  details : ''\n                                };  \n\n              if (indexOption > -1) {\n\n                if (indexOption > 0) {\n\n                  if (selectObj.rows[indexOption - 1]) {\n                    var currentOption = selectObj.rows[indexOption];\n                    selectObj.rows.splice(indexOption , 1);\n                    selectObj.rows.splice((indexOption - 1), 0, currentOption); \n\n                    fullResponse.resultFlag = true;\n                    fullResponse.details = '';\n                    return fullResponse;\n                  }else{\n                    fullResponse.resultFlag = false;\n                    fullResponse.details = 'Can\\'t retreive option from option index';\n                    return fullResponse;\n                  }\n                }else{\n                    fullResponse.resultFlag = true;\n                    fullResponse.details = '';\n                    return fullResponse;\n                }  \n\n              }else{\n                fullResponse.resultFlag = false;\n                fullResponse.details = 'Option index not valid';\n                return fullResponse;\n              }\n          },\n\n          downthisOption : function(selectObj, indexOption){\n              var fullResponse = {\n                                  resultFlag : false,\n                                  details : ''\n                                };\n\n              if (indexOption > -1) {\n  \n\n                if (indexOption < selectObj.rows.length - 1){\n                  \n\n                  if (selectObj.rows[indexOption + 1]) {\n                    \n\n                    var currentOption = selectObj.rows[indexOption];\n                    \n                    selectObj.rows.splice(indexOption , 1);\n                    selectObj.rows.splice((indexOption + 1), 0, currentOption);  \n\n                    fullResponse.resultFlag = true;\n                    fullResponse.details = '';\n                    return fullResponse;  \n\n                  }else{\n                    fullResponse.resultFlag = false;\n                    fullResponse.details = 'Can\\'t retreive option from option index';\n                    return fullResponse;\n                  }\n                }else{\n\n                  \n                    fullResponse.resultFlag = true;\n                    fullResponse.details = '';\n                  return fullResponse;\n                }\n\n\n              }else{\n                fullResponse.resultFlag = false;\n                fullResponse.details = 'Option index not valid';\n                return fullResponse;\n              }\n\n          }\n\n      \n\n\n\n        };\n\n\n\n\nfunction validOption(selectObj, newOptionText){\n    var fullResponse = {\n                          resultFlag : false,\n                          details : ''\n                        };\n\n    if (typeof newOptionText === 'undefined') {\n        fullResponse.resultFlag = false;\n        fullResponse.details = 'Entered option is empty';\n        return fullResponse;\n    }\n\n    if (newOptionText !== '') {\n          for (var i = selectObj.rows.length - 1; i >= 0; i--) {\n            if (selectObj.rows[i].option === newOptionText) {\n              fullResponse.resultFlag = false;\n              fullResponse.details = 'Entered option is not unique';\n              return fullResponse;\n            }\n          }\n          fullResponse.resultFlag = true;\n          fullResponse.details = '';\n          return fullResponse;\n    }\n    fullResponse.resultFlag = false;     \n    fullResponse.details = 'Entered option is empty';\n    return fullResponse;\n}\n\nfunction resetModel(selectObj){\n  var zeroModel = { \n                      rows:[]\n                    };\n  angular.copy(zeroModel, selectObj);\n}\n\n\n}]);\n\n\n\n\n\n\n/**\n *  ------------------------------------------------------\n *  module = \"services\" container\n *  ------------------------------------------------------\n *      Syntax (convention) :\n *          \"edaApp\" = application\n *          \"edaApp.services\" = container services module\n *\n *  This module is a container -> it must be injected in the application -> so it will inject all services injected here\n *\n *\n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n\nangular.module('edaApp.services', \n\t\t\t\t\t\t\t[\t\n\t\t\t\t\t\t\t\t'edaApp.services.formFieldManage',\n\t\t\t\t\t\t\t\t'edaApp.services.selectOptionManage',\n\t\t\t\t\t\t\t\t'edaApp.services.formsByIdService',\n\t\t\t\t\t\t\t\t'edaApp.services.edaEditCtrlControllerModalProxy',\n\t\t\t\t\t\t\t\t'edaApp.services.dragDropItemDecorationService',\n\t\t\t\t\t\t\t\t'edaApp.services.dragDropItemCountersService',\n\t\t\t\t\t\t\t\t'edaApp.services.dragDropModelConfigModelProxyService',\n\t\t\t\t\t\t\t\t'edaApp.services.ddItemRightClickedManager',\n\t\t\t\t]);\n/**\n *  ------------------------------------------------------\n *  filters container\n *  ------------------------------------------------------\n *\n *      Syntax (convention) :\n *          \"edaApp\" = application\n *          \"edaApp.filters\" = container filters module\n *           \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n\t.module('edaApp.filters', ['edaApp.filters.trustThis', \n\t\n\t]);\n\n/**\n *  ------------------------------------------------------\n *  filter : trustThis\n *  ------------------------------------------------------\n *\n *  filter to force trust content when ng-bind html form model :\n *  \n *  \"<span ng-bind-html=\"item.label | trustThis\"></span>\t\"\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n\t.module('edaApp.filters.trustThis', [])\n\t.filter('trustThis', ['$sce',\n\n\tfunction($sce) {\n\n  return function(value, type) {\n    \t\t\t\t\treturn $sce.trustAs(type || 'html', value);\n  \t\t\t\t};\n}]);\n\n})(this);"],"sourceRoot":"/source/"}